{"version":3,"file":"static/webpack/static\\development\\pages\\_error.js.bdec2c6213cea4b7034e.hot-update.js","sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///./pages/_error.js"],"sourcesContent":["\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/_error\", function() {\n      var mod = require(\"E:\\\\Users\\\\Jordan\\\\Desktop\\\\statmix\\\\pages\\\\_error.js\")\n      if(module.hot) {\n        module.hot.accept(\"E:\\\\Users\\\\Jordan\\\\Desktop\\\\statmix\\\\pages\\\\_error.js\", function() {\n          if(!next.router.components[\"/_error\"]) return\n          var updatedPage = require(\"E:\\\\Users\\\\Jordan\\\\Desktop\\\\statmix\\\\pages\\\\_error.js\")\n          next.router.update(\"/_error\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","import Layout from '../components/Layout';\nimport { withRouter } from 'next/router';\nimport Router from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\n\nclass ErrorPage extends React.Component {\n\n  static propTypes() {\n    return {\n      errorCode: React.PropTypes.number.isRequired,\n    }\n  }\n\n  static getInitialProps({res, xhr}) {\n    const errorCode = res ? res.statusCode : (xhr ? xhr.status : null)\n    return {errorCode}\n  }\n\n  render() {\n    var response\n    switch (this.props.errorCode) {\n      case 200: // Also display a 404 if someone requests /_error explicitly\n      case 404:\n        response = (\n          <Layout pageTitle='Page Not Found'>\n            <Container>\n              <div className='error-container'>\n                <h4 className='page-header'>404 Page Not Found</h4>\n                <Button variant='grey-blue' onClick={() => Router.back()}>Go back</Button>\n              </div>\n            </Container>\n          </Layout>\n        )\n        break\n      case 500:\n        response = (\n          <Layout pageTitle='Internal Server Error'>\n            <Container>\n              <div className='error-container'>\n                <h4 className='page-header'>500 Internal Server Error</h4>\n                <Button variant='grey-blue' onClick={() => Router.back()}>Go back</Button>\n              </div>\n            </Container>\n          </Layout>\n        )\n        break\n      default:\n        response = (\n          <Layout pageTitle='An Error Occured'>\n            <Container>\n              <div className='error-container'>\n                <h4 className='page-header'>An error occured while trying to access this page.</h4>\n                <Button variant='grey-blue' onClick={() => Router.back()}>Go back</Button>\n              </div>\n            </Container>\n          </Layout>\n        )\n    }\n\n    return response\n  }\n\n}\n\nexport default withRouter(ErrorPage)"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAaA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAhCA;AACA;AAsCA;AACA;;;AArDA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;AAXA;AACA;AA0DA;;;;;;;;;;;;;;;;A","sourceRoot":""}