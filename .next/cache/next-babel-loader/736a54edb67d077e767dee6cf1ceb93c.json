{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\nclass VoteHistory extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      history: []\n    };\n    this.deleteHistory = this.deleteHistory.bind(this);\n    this.clearHistory = this.clearHistory.bind(this);\n  }\n\n  componentDidMount() {\n    // get history from localstorage\n    console.log(localStorage.voteHistory);\n\n    if (localStorage.voteHistory) {\n      const voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      console.log(voteHistory);\n      this.setState({\n        history: voteHistory\n      });\n    }\n  }\n\n  deleteHistory(e) {\n    // delete one item from history\n    if (localStorage.voteHistory) {\n      const index = e.target.parentElement.parentElement.dataset[\"index\"];\n      let voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      voteHistory.splice(index, 1);\n      this.setState({\n        history: voteHistory\n      });\n      voteHistory = _JSON$stringify(voteHistory);\n      localStorage.voteHistory = voteHistory;\n    }\n  }\n\n  clearHistory() {\n    //clear all history\n    if (localStorage.voteHistory) {\n      localStorage.removeItem('voteHistory');\n      this.setState({\n        history: []\n      });\n    }\n  }\n\n  render() {\n    const {\n      history\n    } = this.state;\n    return __jsx(Card, {\n      className: \"vote-history\"\n    }, __jsx(Card.Header, null, \"Vote History\"), history.length > 0 ? __jsx(ListGroup, {\n      variant: \"flush\"\n    }, history.map((poll, i) => __jsx(ListGroup.Item, {\n      key: i\n    }, __jsx(Link, {\n      href: {\n        pathname: '/poll',\n        query: {\n          slug: poll.url\n        }\n      },\n      as: `/poll/${poll.url}`\n    }, __jsx(\"a\", {\n      title: poll.title\n    }, poll.title)), __jsx(\"span\", {\n      onClick: this.deleteHistory,\n      \"data-index\": i\n    }, __jsx(FontAwesomeIcon, {\n      icon: faTimes\n    }))))) : __jsx(ListGroup, {\n      variant: \"flush\"\n    }, __jsx(ListGroupItem, null, __jsx(\"i\", null, \"No history...\"))));\n  }\n\n}\n\nexport default VoteHistory;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/components/VoteHistory.js"],"names":["Card","ListGroup","Link","FontAwesomeIcon","faTimes","ListGroupItem","VoteHistory","React","Component","constructor","state","history","deleteHistory","bind","clearHistory","componentDidMount","console","log","localStorage","voteHistory","JSON","parse","getItem","setState","e","index","target","parentElement","dataset","splice","removeItem","render","length","map","poll","i","pathname","query","slug","url","title"],"mappings":"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","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n\nclass VoteHistory extends React.Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      history: []\n    }\n\n    this.deleteHistory = this.deleteHistory.bind(this);\n    this.clearHistory = this.clearHistory.bind(this);\n  }\n\n  componentDidMount() {\n    // get history from localstorage\n    console.log(localStorage.voteHistory)\n    if (localStorage.voteHistory) {\n      const voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      console.log(voteHistory)\n      this.setState({ history: voteHistory });\n    }\n  }\n\n  \n  deleteHistory(e) {\n    // delete one item from history\n    if (localStorage.voteHistory) {\n      const index = e.target.parentElement.parentElement.dataset[\"index\"];\n      let voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      voteHistory.splice(index, 1);\n      this.setState({ history: voteHistory });\n      voteHistory = JSON.stringify(voteHistory);\n      localStorage.voteHistory = voteHistory;\n    }\n  }\n  \n\n  clearHistory() {\n    //clear all history\n    if (localStorage.voteHistory) {\n      localStorage.removeItem('voteHistory');\n      this.setState({ history: [] });\n    }\n  }\n\n  render() {\n    const { history } = this.state;\n    return (\n      <Card className='vote-history'>\n        <Card.Header>Vote History</Card.Header>\n        { history.length > 0 ?\n          <ListGroup variant=\"flush\">\n            {history.map((poll, i) => (\n              <ListGroup.Item key={i}>\n                <Link href={{ pathname: '/poll', query: { slug: poll.url } }} as={`/poll/${poll.url}`}>\n                  <a title={poll.title}>{poll.title}</a>\n                </Link>\n                <span onClick={this.deleteHistory} data-index={i}>\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </ListGroup.Item>\n            ))}\n          </ListGroup> \n        : \n          <ListGroup variant='flush'>\n            <ListGroupItem>\n              <i>No history...</i>\n            </ListGroupItem>\n          </ListGroup>\n        }\n\n      </Card>\n    )\n  }\n}\n\nexport default VoteHistory;"]},"metadata":{},"sourceType":"module"}