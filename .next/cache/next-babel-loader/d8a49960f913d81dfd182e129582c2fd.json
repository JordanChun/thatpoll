{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Pagination from 'react-bootstrap/Pagination';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'next/router';\n\nfunction setQueryString(query) {\n  var queryString = '';\n\n  for (var i = 0; i < _Object$keys(query).length; i++) {\n    var name = _Object$keys(query)[i];\n\n    var value = query[_Object$keys(query)[i]];\n\n    if (name !== 'page' && value !== undefined && value !== '') {\n      queryString += \"&\".concat(name, \"=\").concat(value);\n    }\n  }\n\n  return queryString;\n}\n\nvar PollPagination = function PollPagination(props) {\n  var state = props.router.query.state;\n  var active;\n\n  if (props.router.query.page) {\n    active = props.router.query.page;\n  } else {\n    active = 1;\n  }\n\n  var items = [];\n  var offset = 0; // go to prev page\n\n  if (active > 3) {\n    offset = active - 3;\n    items.push(__jsx(\"li\", {\n      className: \"page-item\",\n      key: \"prev\"\n    }, __jsx(Link, {\n      href: {\n        pathname: '/',\n        query: {\n          page: active - 1,\n          state: state\n        }\n      },\n      as: \"?page=\".concat(active - 1).concat(setQueryString(props.router.query))\n    }, __jsx(\"a\", {\n      className: \"page-link\",\n      role: \"button\"\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\u2039\"), __jsx(\"span\", {\n      className: \"sr-only\"\n    }, \"Previous\")))));\n  }\n\n  var totalItems = props.totalItems;\n  var totalPages = Math.ceil(totalItems / 10);\n  if (totalPages === 0) totalPages = 1;\n  active = Math.min(Math.max(active, 1), totalPages); // max offset = total pages - max pagination items\n\n  offset = Math.min(Math.max(offset, 0), Math.max(totalPages - 5, 0)); //offset = Math.min(Math.max(offset, 0), (totalPages - 5));\n\n  for (var i = 1; i <= 5; i++) {\n    if (i > totalPages) break;\n\n    if (i + offset === active) {\n      items.push(__jsx(\"li\", {\n        className: \"page-item active\",\n        key: i\n      }, __jsx(Link, {\n        href: {\n          pathname: '/',\n          query: {\n            page: i + offset,\n            state: state\n          }\n        },\n        as: \"?page=\".concat(i + offset).concat(setQueryString(props.router.query)),\n        replace: true\n      }, __jsx(\"a\", {\n        className: \"page-link\"\n      }, i + offset)), __jsx(\"span\", {\n        className: \"sr-only\"\n      }, \"(current)\")));\n    } else {\n      items.push(__jsx(\"li\", {\n        className: \"page-item\",\n        key: i\n      }, __jsx(Link, {\n        href: {\n          pathname: '/',\n          query: {\n            page: i + offset,\n            state: state\n          }\n        },\n        as: \"?page=\".concat(i + offset).concat(setQueryString(props.router.query)),\n        replace: true\n      }, __jsx(\"a\", {\n        className: \"page-link\"\n      }, i + offset))));\n    }\n  } // go to next page\n\n\n  if (active < totalPages - 2) {\n    items.push(__jsx(\"li\", {\n      className: \"page-item\",\n      key: \"next\"\n    }, __jsx(Link, {\n      href: {\n        pathname: '/',\n        query: {\n          page: active + 1\n        }\n      },\n      as: \"?page=\".concat(active + 1).concat(setQueryString(props.router.query))\n    }, __jsx(\"a\", {\n      className: \"page-link\",\n      role: \"button\"\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\u203A\"), __jsx(\"span\", {\n      className: \"sr-only\"\n    }, \"Next\")))));\n  }\n\n  return __jsx(Pagination, null, items);\n};\n\nPollPagination.propTypes = {\n  totalItems: PropTypes.number.isRequired\n};\nexport default withRouter(PollPagination);","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/poll/PollPagination.js"],"names":["Pagination","Link","PropTypes","withRouter","setQueryString","query","queryString","i","length","name","value","undefined","PollPagination","props","state","router","active","page","items","offset","push","pathname","totalItems","totalPages","Math","ceil","min","max","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import Pagination from 'react-bootstrap/Pagination';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'next/router';\n\nfunction setQueryString(query) {\n  let queryString = '';\n  for (let i = 0; i < Object.keys(query).length; i++) {\n    let name = Object.keys(query)[i];\n    let value = query[Object.keys(query)[i]];\n    \n    if (name !== 'page' && value !== undefined && value !== '') {\n      queryString += `&${name}=${value}`;\n    }\n  }\n  return queryString\n}\n\nconst PollPagination = props => {\n  const { state } = props.router.query;\n  let active;\n  if (props.router.query.page) {\n    active = props.router.query.page;\n  } else {\n    active = 1;\n  }\n  let items = [];\n  let offset = 0;\n\n  // go to prev page\n  if (active > 3) {\n    offset = active - 3;\n    items.push(\n      <li className='page-item' key='prev'>\n        <Link href={{ pathname: '/', query: { page: active - 1, state: state } }} as={`?page=${active - 1}${setQueryString(props.router.query)}`}>\n          <a className=\"page-link\" role=\"button\">\n            <span aria-hidden=\"true\">â€¹</span>\n            <span className=\"sr-only\">Previous</span>\n          </a>\n        </Link>\n      </li>\n    )\n  }\n  \n  const totalItems = props.totalItems;\n  let totalPages = Math.ceil(totalItems/10);\n  if (totalPages === 0) totalPages = 1;\n  active = Math.min(Math.max(active, 1), totalPages);\n  // max offset = total pages - max pagination items\n  offset = Math.min(Math.max(offset, 0), Math.max((totalPages - 5), 0));\n  //offset = Math.min(Math.max(offset, 0), (totalPages - 5));\n  \n\n  for (let i = 1; i <= 5; i++) {\n    if (i > totalPages) break;\n    if ((i + offset) === active) {\n      items.push(\n        <li className=\"page-item active\" key={i}>\n          <Link href={{ pathname: '/', query: { page: i + offset, state: state } }} as={`?page=${i + offset}${setQueryString(props.router.query)}`} replace>\n            <a className='page-link'>{i + offset}</a>\n          </Link>\n          <span className=\"sr-only\">(current)</span>\n        </li>\n      );\n    } else {\n      items.push(\n        <li className=\"page-item\" key={i}>\n          <Link href={{ pathname: '/', query: { page: i + offset, state: state } }} as={`?page=${i + offset}${setQueryString(props.router.query)}`} replace>\n            <a className=\"page-link\">{i + offset}</a>\n          </Link>\n        </li>\n      )\n    }\n  }\n\n  // go to next page\n  if (active < totalPages - 2) {\n    items.push(\n      <li className='page-item' key='next'>\n        <Link href={{ pathname: '/', query: { page: active + 1 } }} as={`?page=${active + 1}${setQueryString(props.router.query)}`}>\n          <a className=\"page-link\" role=\"button\">\n            <span aria-hidden=\"true\">â€º</span>\n            <span className=\"sr-only\">Next</span>\n          </a>\n        </Link>\n      </li>\n    )\n  }\n\n  return (\n    <Pagination>\n      {items}\n    </Pagination>\n  )\n}\n\nPollPagination.propTypes = {\n  totalItems: PropTypes.number.isRequired,\n}\n\nexport default withRouter(PollPagination);"]},"metadata":{},"sourceType":"module"}