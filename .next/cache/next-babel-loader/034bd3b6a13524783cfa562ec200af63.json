{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\nvar VoteHistory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VoteHistory, _React$Component);\n\n  function VoteHistory() {\n    var _this;\n\n    _classCallCheck(this, VoteHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VoteHistory).call(this));\n    _this.state = {\n      history: []\n    };\n    _this.deleteHistory = _this.deleteHistory.bind(_assertThisInitialized(_this));\n    _this.clearHistory = _this.clearHistory.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(VoteHistory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // get history from localstorage\n      console.log(localStorage.voteHistory);\n\n      if (localStorage.voteHistory) {\n        var voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n        console.log(voteHistory);\n        this.setState({\n          history: voteHistory\n        });\n      }\n    }\n  }, {\n    key: \"deleteHistory\",\n    value: function deleteHistory(e) {\n      // delete one item from history\n      if (localStorage.voteHistory) {\n        var index = e.target.parentElement.parentElement.dataset[\"index\"];\n        var voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n        voteHistory.splice(index, 1);\n        this.setState({\n          history: voteHistory\n        });\n        voteHistory = _JSON$stringify(voteHistory);\n        localStorage.voteHistory = voteHistory;\n      }\n    }\n  }, {\n    key: \"clearHistory\",\n    value: function clearHistory() {\n      //clear all history\n      if (localStorage.voteHistory) {\n        localStorage.removeItem('voteHistory');\n        this.setState({\n          history: []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var history = this.state.history;\n      return __jsx(Card, {\n        className: \"vote-history\"\n      }, __jsx(Card.Header, null, \"Vote History\"), history.length > 0 ? __jsx(ListGroup, {\n        variant: \"flush\"\n      }, history.map(function (poll, i) {\n        return __jsx(ListGroup.Item, {\n          key: i\n        }, __jsx(Link, {\n          href: {\n            pathname: '/poll',\n            query: {\n              slug: poll.url\n            }\n          },\n          as: \"/poll/\".concat(poll.url)\n        }, __jsx(\"a\", {\n          title: poll.title\n        }, poll.title)), __jsx(\"span\", {\n          onClick: _this2.deleteHistory,\n          \"data-index\": i\n        }, __jsx(FontAwesomeIcon, {\n          icon: faTimes\n        })));\n      })) : __jsx(ListGroup, {\n        variant: \"flush\"\n      }, __jsx(ListGroupItem, null, __jsx(\"i\", null, \"No history...\"))));\n    }\n  }]);\n\n  return VoteHistory;\n}(React.Component);\n\nexport default VoteHistory;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/components/VoteHistory.js"],"names":["Card","ListGroup","Link","FontAwesomeIcon","faTimes","ListGroupItem","VoteHistory","state","history","deleteHistory","bind","clearHistory","console","log","localStorage","voteHistory","JSON","parse","getItem","setState","e","index","target","parentElement","dataset","splice","removeItem","length","map","poll","i","pathname","query","slug","url","title","React","Component"],"mappings":"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","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n\nclass VoteHistory extends React.Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      history: []\n    }\n\n    this.deleteHistory = this.deleteHistory.bind(this);\n    this.clearHistory = this.clearHistory.bind(this);\n  }\n\n  componentDidMount() {\n    // get history from localstorage\n    console.log(localStorage.voteHistory)\n    if (localStorage.voteHistory) {\n      const voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      console.log(voteHistory)\n      this.setState({ history: voteHistory });\n    }\n  }\n\n  \n  deleteHistory(e) {\n    // delete one item from history\n    if (localStorage.voteHistory) {\n      const index = e.target.parentElement.parentElement.dataset[\"index\"];\n      let voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      voteHistory.splice(index, 1);\n      this.setState({ history: voteHistory });\n      voteHistory = JSON.stringify(voteHistory);\n      localStorage.voteHistory = voteHistory;\n    }\n  }\n  \n\n  clearHistory() {\n    //clear all history\n    if (localStorage.voteHistory) {\n      localStorage.removeItem('voteHistory');\n      this.setState({ history: [] });\n    }\n  }\n\n  render() {\n    const { history } = this.state;\n    return (\n      <Card className='vote-history'>\n        <Card.Header>Vote History</Card.Header>\n        { history.length > 0 ?\n          <ListGroup variant=\"flush\">\n            {history.map((poll, i) => (\n              <ListGroup.Item key={i}>\n                <Link href={{ pathname: '/poll', query: { slug: poll.url } }} as={`/poll/${poll.url}`}>\n                  <a title={poll.title}>{poll.title}</a>\n                </Link>\n                <span onClick={this.deleteHistory} data-index={i}>\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </ListGroup.Item>\n            ))}\n          </ListGroup> \n        : \n          <ListGroup variant='flush'>\n            <ListGroupItem>\n              <i>No history...</i>\n            </ListGroupItem>\n          </ListGroup>\n        }\n\n      </Card>\n    )\n  }\n}\n\nexport default VoteHistory;"]},"metadata":{},"sourceType":"module"}