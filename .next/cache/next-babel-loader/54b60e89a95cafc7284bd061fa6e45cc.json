{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/Layout';\nimport PollPreview from '../components/PollPreview';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport { withRouter } from 'next/router';\nimport CategoriesList from '../helpers/CategoriesList';\nimport Cookies from 'js-cookie';\nimport getMomentTimelimit from '../helpers/momentFunctions';\n\nvar visibilityTooltip = function visibilityTooltip(props) {\n  return __jsx(\"div\", _extends({}, props, {\n    style: _objectSpread({\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '0.5rem 0.75rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem'\n    }, props.style)\n  }), \"Set whether to allow the public to see this poll or keep it private. Only those with the URL will be able to access the poll if set private.\");\n};\n\nvar votingPeriodTooltip = function votingPeriodTooltip(props) {\n  return __jsx(\"div\", _extends({}, props, {\n    style: _objectSpread({\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '0.5rem 0.75rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem'\n    }, props.style)\n  }), \"Set in hours when the poll will expire.\");\n};\n\nfunction validatePollInput(pollDataObj) {\n  var choicesArr = [];\n\n  for (var i = 0; i < pollDataObj.choices.length; i++) {\n    if (pollDataObj.choices[i].choice !== '') {\n      choicesArr.push(pollDataObj.choices[i].choice);\n    }\n  }\n\n  var pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choicesArr,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod,\n    category: pollDataObj.category\n  };\n  return pollData;\n}\n\nvar CreatePoll =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePoll, _React$Component);\n\n  function CreatePoll() {\n    var _this;\n\n    _classCallCheck(this, CreatePoll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreatePoll).call(this));\n    _this.state = {\n      title: '',\n      desc: '',\n      choices: [{\n        choice: ''\n      }, {\n        choice: ''\n      }],\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      category: 0,\n      error: false,\n      validated: false,\n      timelimit: ' 6 hours'\n    };\n    _this.inputUpdate = _this.inputUpdate.bind(_assertThisInitialized(_this));\n    _this.visibilityUpdate = _this.visibilityUpdate.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.updateTimePeriod = _this.updateTimePeriod.bind(_assertThisInitialized(_this));\n    _this.updateCategory = _this.updateCategory.bind(_assertThisInitialized(_this));\n    _this.setHourPreset = _this.setHourPreset.bind(_assertThisInitialized(_this));\n    _this.updateChoice = _this.updateChoice.bind(_assertThisInitialized(_this));\n    _this.addChoice = _this.addChoice.bind(_assertThisInitialized(_this));\n    _this.removeChoice = _this.removeChoice.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CreatePoll, [{\n    key: \"inputUpdate\",\n    value: function inputUpdate(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"updateChoice\",\n    value: function updateChoice(e) {\n      var choices = this.state.choices.slice();\n      choices[e.target.dataset['index']].choice = e.target.value;\n      this.setState({\n        choices: choices\n      });\n    }\n  }, {\n    key: \"updateCategory\",\n    value: function updateCategory(e) {\n      this.setState({\n        category: e.target.selectedIndex\n      });\n    }\n  }, {\n    key: \"visibilityUpdate\",\n    value: function visibilityUpdate(e) {\n      this.setState({\n        visibility: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, req) {\n        var form, _absoluteUrl, origin, publicAccessToken, pollData, res, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                form = e.currentTarget;\n\n                if (form.checkValidity() === false) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n\n                this.setState({\n                  validated: true\n                });\n                _absoluteUrl = absoluteUrl(req), origin = _absoluteUrl.origin;\n                publicAccessToken = Cookies.get('publicAccessToken');\n                pollData = validatePollInput(this.state);\n                _context.prev = 7;\n                _context.next = 10;\n                return fetch(\"\".concat(origin, \"/api/v1/create-poll\"), {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: _JSON$stringify(pollData)\n                });\n\n              case 10:\n                res = _context.sent;\n                _context.next = 13;\n                return res.json();\n\n              case 13:\n                data = _context.sent;\n\n                if (data.message === 'success') {\n                  Router.push(\"/poll?slug=\".concat(data.url), \"/poll/\".concat(data.url));\n                } else {\n                  this.setState({\n                    error: true\n                  });\n                  window.scrollTo({\n                    top: 56,\n                    left: 0,\n                    behavior: 'smooth'\n                  });\n                } //console.log(data);\n\n\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](7);\n                //console.log(err)\n                // display error\n                this.setState({\n                  error: true\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 17]]);\n      }));\n\n      function handleSubmit(_x, _x2) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"updateTimePeriod\",\n    value: function updateTimePeriod(e) {\n      var _this$setState2;\n\n      var timelimit = getMomentTimelimit(new Date(), e.target.value);\n      this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, e.target.name, e.target.value), _defineProperty(_this$setState2, \"timelimit\", timelimit), _this$setState2));\n    }\n  }, {\n    key: \"setHourPreset\",\n    value: function setHourPreset(e) {\n      var timelimit = getMomentTimelimit(new Date(), e.target.dataset['hours']);\n      this.setState({\n        votingPeriod: e.target.dataset['hours'],\n        timelimit: timelimit\n      });\n    }\n  }, {\n    key: \"addChoice\",\n    value: function addChoice() {\n      if (this.state.choices.length < 4) {\n        var choices = this.state.choices.slice();\n        choices.push({\n          choice: ''\n        });\n        this.setState({\n          choices: choices\n        });\n      }\n    }\n  }, {\n    key: \"removeChoice\",\n    value: function removeChoice(e) {\n      if (this.state.choices.length > 2) {\n        var choices = this.state.choices.slice();\n        choices.splice(e.target.dataset['index'], 1);\n        this.setState({\n          choices: choices\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          title = _this$state.title,\n          desc = _this$state.desc,\n          choices = _this$state.choices,\n          votingPeriod = _this$state.votingPeriod,\n          error = _this$state.error,\n          validated = _this$state.validated;\n      return __jsx(Layout, {\n        pageTitle: \"Create Poll\",\n        path: this.props.router.asPath\n      }, __jsx(\"h4\", {\n        className: \"page-header\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: faPoll\n      }), \" Create Poll\"), __jsx(\"hr\", null), error ? __jsx(Alert, {\n        variant: \"danger\"\n      }, __jsx(\"b\", null, \"Error submitting poll\")) : null, __jsx(Form, {\n        noValidate: true,\n        validated: validated,\n        autoComplete: \"off\",\n        onSubmit: this.handleSubmit,\n        style: {\n          padding: '1rem'\n        }\n      }, __jsx(Form.Group, {\n        controlId: \"validationTitle\"\n      }, __jsx(Form.Label, null, \"Title\"), __jsx(Form.Control, {\n        value: title,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"title\",\n        minLength: \"3\",\n        maxLength: \"120\",\n        required: true\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\"\n      }, \"Please provide a title. Min 3 characters.\")), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Description (Optional)\"), __jsx(Form.Control, {\n        value: desc,\n        onChange: this.inputUpdate,\n        style: {\n          maxHeight: '144px',\n          minHeight: '72px'\n        },\n        as: \"textarea\",\n        rows: \"3\",\n        name: \"desc\",\n        maxLength: \"500\"\n      }), __jsx(Form.Text, null, \"Characters remaining: \", 500 - desc.length)), choices.map(function (choiceObj, i) {\n        return __jsx(Form.Group, {\n          key: i,\n          controlId: \"validateChoice\".concat(i)\n        }, __jsx(Form.Label, null, \"Choice #\", i + 1), i > 1 ? __jsx(ButtonGroup, {\n          size: \"sm\",\n          style: {\n            marginLeft: '0.5rem'\n          }\n        }, __jsx(Button, {\n          variant: \"grey-blue\",\n          \"data-index\": i,\n          onClick: _this2.removeChoice\n        }, __jsx(FontAwesomeIcon, {\n          icon: faMinus\n        }), \" Remove choice\")) : null, __jsx(Form.Control, {\n          value: choiceObj.choice,\n          \"data-index\": i,\n          onChange: _this2.updateChoice,\n          type: \"text\",\n          minLength: \"1\",\n          maxLength: \"75\",\n          required: true\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\"\n        }, \"Please provide a choice or remove it. Duplicate choices are \", __jsx(\"b\", null, \"not\"), \" allowed. Min 1 characters.\"));\n      }), __jsx(ButtonGroup, {\n        size: \"sm\",\n        className: \"mb-3\"\n      }, __jsx(Button, {\n        variant: \"grey-blue\",\n        onClick: this.addChoice,\n        disabled: choices.length === 4\n      }, __jsx(FontAwesomeIcon, {\n        icon: faPlus\n      }), \" Add choice\")), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Category (Optional)\"), __jsx(Form.Control, {\n        onChange: this.updateCategory,\n        as: \"select\",\n        name: \"category\"\n      }, __jsx(\"option\", null, \"Select a category\"), CategoriesList.map(function (category, i) {\n        return __jsx(\"option\", {\n          key: i\n        }, category);\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Visibility\", \" \", __jsx(OverlayTrigger, {\n        placement: \"top-start\",\n        delay: {\n          show: 250,\n          hide: 400\n        },\n        overlay: visibilityTooltip\n      }, __jsx(FontAwesomeIcon, {\n        icon: faQuestionCircle\n      }))), __jsx(Form.Check, {\n        onClick: this.visibilityUpdate,\n        type: \"radio\",\n        label: \"Public\",\n        name: \"visibility\",\n        value: \"public\",\n        defaultChecked: true\n      }), __jsx(Form.Check, {\n        onClick: this.visibilityUpdate,\n        type: \"radio\",\n        label: \"Private\",\n        name: \"visibility\",\n        value: \"private\"\n      })), __jsx(Form.Group, {\n        as: Col,\n        controlId: \"validateVotingPeriod\"\n      }, __jsx(Form.Label, null, \"Voting Period (hours)\", \" \", __jsx(OverlayTrigger, {\n        placement: \"top-start\",\n        delay: {\n          show: 250,\n          hide: 400\n        },\n        overlay: votingPeriodTooltip\n      }, __jsx(FontAwesomeIcon, {\n        icon: faQuestionCircle\n      }))), __jsx(Form.Control, {\n        value: votingPeriod,\n        onChange: this.updateTimePeriod,\n        style: {\n          maxWidth: '200px'\n        },\n        type: \"number\",\n        min: \"6\",\n        max: \"168\",\n        name: \"votingPeriod\",\n        className: \"mb-1\",\n        required: true\n      }), __jsx(ButtonGroup, {\n        size: \"sm\"\n      }, __jsx(Button, {\n        variant: \"grey-blue\",\n        onClick: this.setHourPreset,\n        \"data-hours\": \"24\"\n      }, \"1 day\"), __jsx(Button, {\n        variant: \"grey-blue\",\n        onClick: this.setHourPreset,\n        \"data-hours\": \"72\"\n      }, \"3 days\"), __jsx(Button, {\n        variant: \"grey-blue\",\n        onClick: this.setHourPreset,\n        \"data-hours\": \"168\"\n      }, \"7 days\")), __jsx(Form.Control.Feedback, {\n        type: \"invalid\"\n      }, \"Voting period must be a minimum of 6 hours and a maximum of 168 hours.\"), __jsx(Form.Text, null, \"6h - 168h (7 days)\"))), __jsx(\"hr\", null), __jsx(Form.Group, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '2rem'\n        }\n      }, __jsx(Button, {\n        variant: \"light-blue\",\n        type: \"submit\",\n        style: {\n          width: '200px'\n        }\n      }, \"Create Poll\"))), __jsx(\"div\", {\n        className: \"poll-preview\"\n      }, __jsx(\"h4\", {\n        className: \"page-header\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: faEye\n      }), \" Preview\"), __jsx(\"hr\", null), __jsx(PollPreview, this.state)));\n    }\n  }]);\n\n  return CreatePoll;\n}(React.Component);\n\nexport default withRouter(CreatePoll);","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/pages/create-poll.js"],"names":["Layout","PollPreview","Form","Button","Col","Alert","OverlayTrigger","ButtonGroup","FontAwesomeIcon","faPoll","faQuestionCircle","faEye","faPlus","faMinus","Router","absoluteUrl","withRouter","CategoriesList","Cookies","getMomentTimelimit","visibilityTooltip","props","maxWidth","backgroundColor","padding","color","borderRadius","style","votingPeriodTooltip","validatePollInput","pollDataObj","choicesArr","i","choices","length","choice","push","pollData","title","desc","visibility","votingPeriod","category","CreatePoll","state","dateCreated","Date","error","validated","timelimit","inputUpdate","bind","visibilityUpdate","handleSubmit","updateTimePeriod","updateCategory","setHourPreset","updateChoice","addChoice","removeChoice","e","setState","target","name","value","slice","dataset","selectedIndex","req","preventDefault","form","currentTarget","checkValidity","stopPropagation","origin","publicAccessToken","get","fetch","method","headers","body","res","json","data","message","url","window","scrollTo","top","left","behavior","splice","router","asPath","maxHeight","minHeight","map","choiceObj","marginLeft","show","hide","display","justifyContent","marginTop","width","React","Component"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\nimport PollPreview from '../components/PollPreview';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport { withRouter } from 'next/router';\nimport CategoriesList from '../helpers/CategoriesList';\nimport Cookies from 'js-cookie';\nimport getMomentTimelimit from '../helpers/momentFunctions';\n\nconst visibilityTooltip = props => (\n  <div\n    {...props}\n    style={{\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '0.5rem 0.75rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem',\n      ...props.style,\n    }}\n  >\n    Set whether to allow the public to see this poll or keep it private.\n    Only those with the URL will be able to access the poll if set private.\n  </div>\n);\n\nconst votingPeriodTooltip = props => (\n  <div\n    {...props}\n    style={{\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '0.5rem 0.75rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem',\n      ...props.style,\n    }}\n  >\n    Set in hours when the poll will expire.\n  </div>\n);\n\nfunction validatePollInput(pollDataObj) {\n  let choicesArr = [];\n  for (let i = 0; i < pollDataObj.choices.length; i++) {\n    if (pollDataObj.choices[i].choice !== '') {\n      choicesArr.push(pollDataObj.choices[i].choice);\n    }\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choicesArr,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod,\n    category: pollDataObj.category\n  }\n\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      desc: '',\n      choices: [\n        { choice: '' },\n        { choice: '' },\n      ],\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      category: 0,\n      error: false,\n      validated: false,\n      timelimit: ' 6 hours'\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateTimePeriod = this.updateTimePeriod.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.setHourPreset = this.setHourPreset.bind(this);\n    this.updateChoice = this.updateChoice.bind(this);\n    this.addChoice = this.addChoice.bind(this);\n    this.removeChoice = this.removeChoice.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  updateChoice(e) {\n    const choices = this.state.choices.slice();\n    choices[e.target.dataset['index']].choice = e.target.value;\n    this.setState({ choices: choices });\n  }\n\n  updateCategory(e) {\n    this.setState({ category: e.target.selectedIndex });\n  }\n\n  visibilityUpdate(e) {\n    this.setState({ visibility: e.target.value });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.setState({ validated: true });\n\n    const { origin } = absoluteUrl(req);\n    const publicAccessToken = Cookies.get('publicAccessToken');\n    const pollData = validatePollInput(this.state);\n    try {\n      const res = await fetch(`${origin}/api/v1/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(pollData)\n      });\n      const data = await res.json();\n      if(data.message === 'success') {\n        Router.push(`/poll?slug=${data.url}`, `/poll/${data.url}`)\n      } else {\n        this.setState({ error: true });\n        window.scrollTo({\n          top: 56,\n          left: 0,\n          behavior: 'smooth'\n        });\n      }\n      //console.log(data);\n    } catch(err) {\n      //console.log(err)\n      // display error\n      this.setState({ error: true });\n    }\n  }\n\n  updateTimePeriod(e) {\n    const timelimit = getMomentTimelimit(new Date(), e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value,\n      timelimit: timelimit\n    });\n  }\n\n  setHourPreset(e) {\n    const timelimit = getMomentTimelimit(new Date(), e.target.dataset['hours']);\n    this.setState({ votingPeriod: e.target.dataset['hours'], timelimit: timelimit });\n    \n  }\n\n  addChoice() {\n    if (this.state.choices.length < 4) {\n      const choices = this.state.choices.slice();\n      choices.push({ choice: '' });\n      this.setState({ choices: choices })\n    }\n  }\n\n  removeChoice(e) {\n    if (this.state.choices.length > 2) {\n      const choices = this.state.choices.slice();\n      choices.splice(e.target.dataset['index'], 1);\n      this.setState({ choices: choices })\n    }\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choices,\n      votingPeriod,\n      error,\n      validated\n    } = this.state;\n\n    return (\n      <Layout\n        pageTitle='Create Poll'\n        path={this.props.router.asPath}\n      >\n        <h4 className='page-header'><FontAwesomeIcon icon={faPoll} /> Create Poll</h4>\n        <hr />\n        { error ?\n          <Alert variant='danger'>\n           <b>Error submitting poll</b>\n          </Alert> : null\n        }\n        <Form noValidate validated={validated} autoComplete='off' onSubmit={this.handleSubmit} style={{ padding: '1rem' }}>\n          <Form.Group controlId=\"validationTitle\">\n            <Form.Label>\n              Title\n            </Form.Label>\n            <Form.Control\n              value={title}\n              onChange={this.inputUpdate}\n              type='text' name='title' minLength='3' maxLength='120'\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a title. Min 3 characters.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Description (Optional)\n            </Form.Label>\n            <Form.Control\n              value={desc}\n              onChange={this.inputUpdate}\n              style={{ maxHeight: '144px', minHeight: '72px' }}\n              as=\"textarea\" rows=\"3\" name='desc' maxLength='500'\n            />\n            <Form.Text>\n              Characters remaining: {500 - desc.length}\n            </Form.Text>\n          </Form.Group>\n          {choices.map((choiceObj, i) => (\n            <Form.Group key={i} controlId={`validateChoice${i}`}>\n              <Form.Label>\n                Choice #{i+1}\n              </Form.Label>\n              {i > 1 ? \n                <ButtonGroup size='sm' style={{ marginLeft: '0.5rem' }}>\n                  <Button variant=\"grey-blue\" data-index={i} onClick={this.removeChoice}>\n                    <FontAwesomeIcon icon={faMinus} /> Remove choice\n                  </Button>\n                </ButtonGroup> : null }\n              <Form.Control\n                value={choiceObj.choice}\n                data-index={i}\n                onChange={this.updateChoice}\n                type='text' minLength='1' maxLength='75'\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a choice or remove it. Duplicate choices are <b>not</b> allowed. Min 1 characters.\n              </Form.Control.Feedback>\n            </Form.Group>\n          ))}\n          <ButtonGroup size=\"sm\" className='mb-3'>\n            <Button variant=\"grey-blue\" onClick={this.addChoice} disabled={choices.length === 4}>\n              <FontAwesomeIcon icon={faPlus} /> Add choice\n            </Button>\n          </ButtonGroup>\n\n          <Form.Group>\n            <Form.Label>\n              Category (Optional)\n            </Form.Label>\n            <Form.Control\n              onChange={this.updateCategory}\n              as=\"select\"\n              name='category'\n            >\n            <option>Select a category</option>\n            {CategoriesList.map((category, i) => (\n              <option key={i}>{category}</option>\n            ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Visibility{\" \"}\n                <OverlayTrigger\n                    placement=\"top-start\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={visibilityTooltip}>\n                  <FontAwesomeIcon icon={faQuestionCircle} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Public' name='visibility' value='public' defaultChecked\n              />\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Private' name='visibility' value='private'\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId='validateVotingPeriod'>\n              <Form.Label>\n                Voting Period (hours){\" \"}\n                <OverlayTrigger\n                  placement=\"top-start\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={votingPeriodTooltip}\n                >\n                  <FontAwesomeIcon icon={faQuestionCircle} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Control\n                value={votingPeriod}\n                onChange={this.updateTimePeriod}\n                style={{ maxWidth: '200px' }}\n                type='number' min='6' max='168' name='votingPeriod'\n                className=\"mb-1\"\n                required\n              />\n              <ButtonGroup size=\"sm\">\n                <Button variant=\"grey-blue\" onClick={this.setHourPreset} data-hours='24'>1 day</Button>\n                <Button variant=\"grey-blue\" onClick={this.setHourPreset} data-hours='72'>3 days</Button>\n                <Button variant=\"grey-blue\" onClick={this.setHourPreset} data-hours='168'>7 days</Button>\n              </ButtonGroup>\n              <Form.Control.Feedback type=\"invalid\">\n                Voting period must be a minimum of 6 hours and a maximum of 168 hours.\n              </Form.Control.Feedback>\n              <Form.Text>\n                6h - 168h (7 days) \n              </Form.Text>\n            </Form.Group>\n          </Form.Row>\n          <hr />\n          <Form.Group style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n            <Button \n              variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n              Create Poll\n            </Button>\n          </Form.Group>\n        </Form>\n        <div className='poll-preview'>\n          <h4 className='page-header'><FontAwesomeIcon icon={faEye} /> Preview</h4>\n          <hr />\n          <PollPreview {...this.state} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withRouter(CreatePoll);"]},"metadata":{},"sourceType":"module"}