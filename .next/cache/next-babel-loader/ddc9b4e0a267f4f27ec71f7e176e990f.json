{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\n\nclass ReportModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reason: '',\n      category: 0,\n      error: false,\n      success: false\n    };\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.submitReport = this.submitReport.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  updateCategory(e) {\n    this.setState({\n      category: e.target.selectedIndex\n    });\n  }\n\n  async submitReport(e) {\n    e.preventDefault();\n\n    if (this.state.reason.length <= 0 || this.state.category === 0) {\n      this.setState({\n        error: true\n      });\n      return;\n    } else {\n      try {\n        const res = await fetch(`${window.location.origin}/api/report`, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-Origin': 'statmix'\n          },\n          body: _JSON$stringify({\n            reason: this.state.reason,\n            category: this.state.category,\n            urlRef: this.props.urlref\n          })\n        });\n        const data = await res.json();\n\n        if (data.message === 'success') {\n          this.setState({\n            error: false,\n            success: true,\n            reason: '',\n            category: 0\n          }); // display sucess\n        } else {\n          this.setState({\n            error: true\n          }); // display error\n        }\n      } catch (err) {// display error\n      }\n    }\n  }\n\n  render() {\n    const {\n      reason,\n      error,\n      success\n    } = this.state;\n    return __jsx(Modal, _extends({}, this.props, {\n      size: \"lg\",\n      centered: true,\n      animation: false,\n      dialogClassName: \"modal-report\",\n      onClick: e => e.stopPropagation()\n    }), __jsx(Modal.Header, {\n      closeButton: true\n    }, __jsx(Modal.Title, null, \"Report\")), __jsx(Modal.Body, null, error ? __jsx(Alert, {\n      variant: \"danger\"\n    }, __jsx(\"b\", null, \"Error submitting poll\")) : null, success ? __jsx(Alert, {\n      variant: \"success\"\n    }, __jsx(\"b\", null, __jsx(FontAwesomeIcon, {\n      icon: faCheck\n    }), \" Report Recieved. Thank You\")) : null, __jsx(\"p\", null, \"Please provide the reasoning for this report below. Thank you.\"), __jsx(Form, {\n      autoComplete: \"off\"\n    }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Category\"), __jsx(Form.Control, {\n      onChange: this.updateCategory,\n      as: \"select\",\n      name: \"category\"\n    }, __jsx(\"option\", null, \"Select a category\"), __jsx(\"option\", null, \"Abuse\"), __jsx(\"option\", null, \"Bug\"), __jsx(\"option\", null, \"Spam\"))), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Reason:\"), __jsx(Form.Control, {\n      value: reason,\n      onChange: this.inputUpdate,\n      style: {\n        'maxHeight': '144px',\n        minHeight: '72px'\n      },\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"reason\",\n      maxLength: \"500\"\n    })))), __jsx(Modal.Footer, null, success ? __jsx(Button, {\n      variant: \"grey-blue\",\n      onClick: this.props.onHide\n    }, \"Close\") : __jsx(Button, {\n      variant: \"light-blue\",\n      type: \"submit\",\n      onClick: this.submitReport\n    }, \"Submit\")));\n  }\n\n}\n\nReportModal.propTypes = {\n  onHide: PropTypes.func.isRequired\n};\nexport default ReportModal;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/components/ReportModal.js"],"names":["Button","Modal","Form","Alert","FontAwesomeIcon","faCheck","PropTypes","ReportModal","React","Component","constructor","props","state","reason","category","error","success","inputUpdate","bind","updateCategory","submitReport","e","setState","target","name","value","selectedIndex","preventDefault","length","res","fetch","window","location","origin","method","headers","body","urlRef","urlref","data","json","message","err","render","stopPropagation","minHeight","onHide","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\n\nclass ReportModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reason: '',\n      category: 0,\n      error: false,\n      success: false,\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.submitReport = this.submitReport.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  updateCategory(e) {\n    this.setState({ category: e.target.selectedIndex });\n  }\n\n  async submitReport(e) {\n    e.preventDefault()\n    if (this.state.reason.length <= 0 || this.state.category === 0) {\n      this.setState({ error: true });\n      return;\n    } else {\n      try {\n        const res = await fetch(`${window.location.origin}/api/report`, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-Origin': 'statmix'\n          },\n          body: JSON.stringify({\n            reason: this.state.reason,\n            category: this.state.category,\n            urlRef: this.props.urlref\n          })\n        });\n  \n        const data = await res.json();\n        if (data.message === 'success') {\n           this.setState({\n            error: false,\n            success: true,\n            reason: '',\n            category: 0,\n          });\n          // display sucess\n        } else {\n          this.setState({ error: true });\n          // display error\n        }\n  \n  \n      } catch(err) {\n          // display error\n      }\n\n    }\n  }\n\n  render() {\n    const { reason, error, success } = this.state;\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        centered\n        animation={false}\n        dialogClassName=\"modal-report\"\n        onClick={e => e.stopPropagation()}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Report\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { error ?\n            <Alert variant='danger'>\n              <b>Error submitting poll</b>\n            </Alert> : null\n          }\n          { success ?\n            <Alert variant='success'>\n              <b>\n                <FontAwesomeIcon icon={faCheck} /> Report Recieved. Thank You\n              </b>\n            </Alert> : null\n          }\n          <p>Please provide the reasoning for this report below. Thank you.</p>\n          <Form autoComplete='off'>\n            <Form.Group>\n              <Form.Label>\n                Category\n              </Form.Label>\n              <Form.Control\n                onChange={this.updateCategory}\n                as=\"select\"\n                name='category'\n              >\n                <option>Select a category</option>\n                <option>Abuse</option>\n                <option>Bug</option>\n                <option>Spam</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                Reason:\n              </Form.Label>\n              <Form.Control\n                value={reason}\n                onChange={this.inputUpdate}\n                style={{ 'maxHeight': '144px', minHeight: '72px' }}\n                as=\"textarea\" rows=\"3\" name='reason' maxLength='500'\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          {success ?\n            <Button variant='grey-blue' onClick={this.props.onHide}>Close</Button>\n          : \n            <Button variant='light-blue' type='submit' onClick={this.submitReport}>Submit</Button>\n          }\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nReportModal.propTypes = {\n  onHide: PropTypes.func.isRequired\n}\n\nexport default ReportModal;"]},"metadata":{},"sourceType":"module"}