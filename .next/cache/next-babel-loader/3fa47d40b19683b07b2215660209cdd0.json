{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Alert from 'react-bootstrap/Alert';\nimport PollChoices from '../components/PollChoices';\nimport PollResults from '../components/PollResults';\nimport { Router } from 'next/router';\nimport Error from 'next/error';\nimport NotFound from './not-found';\nimport absoluteUrl from 'next-absolute-url';\n\nvar PollPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PollPage, _React$Component);\n\n  _createClass(PollPage, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var slug, req, _absoluteUrl, origin, res, errorCode, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                slug = _ref.query.slug, req = _ref.req;\n                _absoluteUrl = absoluteUrl(req), origin = _absoluteUrl.origin;\n                _context.next = 4;\n                return fetch(\"\".concat(origin, \"/api/poll/\").concat(slug));\n\n              case 4:\n                res = _context.sent;\n                errorCode = res.status > 200 ? res.status : false;\n                _context.next = 8;\n                return res.json();\n\n              case 8:\n                data = _context.sent;\n                return _context.abrupt(\"return\", {\n                  errorCode: errorCode,\n                  poll: data\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function PollPage(props) {\n    _classCallCheck(this, PollPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PollPage).call(this, props));\n  }\n\n  _createClass(PollPage, [{\n    key: \"render\",\n    value: function render() {\n      // if not data found for poll\n      if (this.props.errorCode) {\n        return __jsx(NotFound, null);\n      }\n\n      var _this$props$poll = this.props.poll,\n          title = _this$props$poll.title,\n          desc = _this$props$poll.desc,\n          visibility = _this$props$poll.visibility,\n          choices = _this$props$poll.choices,\n          votingPeriod = _this$props$poll.votingPeriod,\n          dateCreated = _this$props$poll.dateCreated,\n          visits = _this$props$poll.visits; //console.log(moment.duration(moment(dateCreated).add(votingPeriod, 'hours').diff(dateCreated)).asHours())\n      //console.log(moment(dateCreated).add(votingPeriod, 'hours'));\n\n      return __jsx(Layout, null, __jsx(\"div\", {\n        className: \"poll-wrapper\"\n      }, visibility == 'private' ? __jsx(\"div\", {\n        className: \"poll-alert\"\n      }, __jsx(Alert, {\n        variant: \"danger\"\n      }, \"This is a \", __jsx(\"b\", null, \"private\"), \" poll. Please consider before sharing the link.\")) : null, __jsx(\"h4\", {\n        className: \"poll-title\"\n      }, title.length > 0 ? title : 'Untitled'), __jsx(\"hr\", null), __jsx(\"div\", {\n        className: \"poll-desc\"\n      }, __jsx(\"h6\", null, \"Description\"), __jsx(\"div\", null, __jsx(\"p\", null, desc.length > 0 ? desc : __jsx(\"i\", null, \"No description\")), __jsx(\"hr\", null), __jsx(\"div\", {\n        className: \"poll-stat\"\n      }, visits, \" views \\u2022 \", moment(dateCreated).format('ll')))), __jsx(\"hr\", null), moment(dateCreated).add(votingPeriod, 'hours').isAfter(_Date$now()) ? __jsx(PollChoices, {\n        choices: choices,\n        dateCreated: dateCreated,\n        votingPeriod: votingPeriod\n      }) : __jsx(PollResults, null)));\n    }\n  }]);\n\n  return PollPage;\n}(React.Component);\n/*\nconst PollPage = (props) => {\n  const router = useRouter()\n  const { slug } = router.query;\n  console.log(props);\n  return (\n    <Layout>\n      <Poll {...props} />\n    </Layout>\n  )\n}\n*?\n\n/*\nconst Poll = props => (\n  <Layout>\n    \n    <h3>{props.title}</h3>\n  </Layout>\n);\n*/\n\n/*\nPollPage.getInitialProps = async function(context) {\n  const { slug } = context.query;\n  const res = await fetch(`http://localhost:3000/api/poll/${slug}`);\n  console.log(res);\n  const errorCode = res.status > 200 ? res.status : false\n  const data = await res.json()\n\n  return { errorCode, poll: data }\n  if(res.status === 200) {\n    const data = await res.json();\n    return { poll: data };\n  } else {\n    Router.push('')\n  }\n  console.log(data);\n}\n */\n\n\nexport default PollPage;","map":{"version":3,"sources":["E:\\Users\\Jordan\\Desktop\\statmix\\pages\\poll.js"],"names":["Layout","fetch","moment","InputGroup","Alert","PollChoices","PollResults","Router","Error","NotFound","absoluteUrl","PollPage","slug","query","req","origin","res","errorCode","status","json","data","poll","props","title","desc","visibility","choices","votingPeriod","dateCreated","visits","length","format","add","isAfter","React","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;IAEMC,Q;;;;;;;;;;;;;;;;;AACoCC,gBAAAA,I,QAATC,K,CAASD,I,EAAQE,G,QAAAA,G;+BAC3BJ,WAAW,CAACI,GAAD,C,EAAtBC,M,gBAAAA,M;;uBACUd,KAAK,WAAIc,MAAJ,uBAAuBH,IAAvB,E;;;AAAjBI,gBAAAA,G;AACAC,gBAAAA,S,GAAYD,GAAG,CAACE,MAAJ,GAAa,GAAb,GAAmBF,GAAG,CAACE,MAAvB,GAAgC,K;;uBAC/BF,GAAG,CAACG,IAAJ,E;;;AAAbC,gBAAAA,I;iDAEC;AAAEH,kBAAAA,SAAS,EAATA,SAAF;AAAaI,kBAAAA,IAAI,EAAED;AAAnB,iB;;;;;;;;;;;;;;;;;;AAGT,oBAAYE,KAAZ,EAAmB;AAAA;;AAAA,iFACXA,KADW;AAElB;;;;6BAEQ;AACP;AACA,UAAI,KAAKA,KAAL,CAAWL,SAAf,EAA0B;AACxB,eAAO,MAAC,QAAD,OAAP;AACD;;AAJM,6BAgBH,KAAKK,KAAL,CAAWD,IAhBR;AAAA,UAQLE,KARK,oBAQLA,KARK;AAAA,UASLC,IATK,oBASLA,IATK;AAAA,UAULC,UAVK,oBAULA,UAVK;AAAA,UAWLC,OAXK,oBAWLA,OAXK;AAAA,UAYLC,YAZK,oBAYLA,YAZK;AAAA,UAaLC,WAbK,oBAaLA,WAbK;AAAA,UAcLC,MAdK,oBAcLA,MAdK,EAiBP;AACA;;AACA,aACE,MAAC,MAAD,QACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGJ,UAAU,IAAI,SAAd,GACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf,uBACY,2BADZ,oDADF,CADD,GAMC,IAPJ,EAQE;AAAI,QAAA,SAAS,EAAC;AAAd,SAA4BF,KAAK,CAACO,MAAN,GAAe,CAAf,GAAmBP,KAAnB,GAA2B,UAAvD,CARF,EASE,iBATF,EAUE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,gCADF,EAEE,mBACE,iBACGC,IAAI,CAACM,MAAL,GAAc,CAAd,GAAkBN,IAAlB,GAAyB,kCAD5B,CADF,EAIE,iBAJF,EAKE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGK,MADH,oBACoB3B,MAAM,CAAC0B,WAAD,CAAN,CAAoBG,MAApB,CAA2B,IAA3B,CADpB,CALF,CAFF,CAVF,EAsBE,iBAtBF,EAwBI7B,MAAM,CAAC0B,WAAD,CAAN,CAAoBI,GAApB,CAAwBL,YAAxB,EAAsC,OAAtC,EAA+CM,OAA/C,CAAuD,WAAvD,IACA,MAAC,WAAD;AAAa,QAAA,OAAO,EAAEP,OAAtB;AAA+B,QAAA,WAAW,EAAEE,WAA5C;AAAyD,QAAA,YAAY,EAAED;AAAvE,QADA,GAGA,MAAC,WAAD,OA3BJ,CADF,CADF;AAkCD;;;;EAnEoBO,KAAK,CAACC,S;AAsE7B;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;AAkBA,eAAexB,QAAf","sourcesContent":["import Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Alert from 'react-bootstrap/Alert';\nimport PollChoices from '../components/PollChoices';\nimport PollResults from '../components/PollResults';\nimport { Router } from 'next/router';\nimport Error from 'next/error';\nimport NotFound from './not-found';\nimport absoluteUrl from 'next-absolute-url';\n\nclass PollPage extends React.Component {\n  static async getInitialProps({ query: { slug }, req }) {\n    const { origin } = absoluteUrl(req);\n    const res = await fetch(`${origin}/api/poll/${slug}`);\n    const errorCode = res.status > 200 ? res.status : false\n    const data = await res.json()\n  \n    return { errorCode, poll: data }\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    // if not data found for poll\n    if (this.props.errorCode) {\n      return <NotFound />\n    }\n\n    \n    const {\n      title,\n      desc,\n      visibility,\n      choices,\n      votingPeriod,\n      dateCreated,\n      visits,\n\n    } = this.props.poll;\n    //console.log(moment.duration(moment(dateCreated).add(votingPeriod, 'hours').diff(dateCreated)).asHours())\n    //console.log(moment(dateCreated).add(votingPeriod, 'hours'));\n    return (\n      <Layout>\n        <div className='poll-wrapper'>\n          {visibility == 'private' ?\n            <div className='poll-alert'>\n              <Alert variant='danger'>\n                This is a <b>private</b> poll. Please consider before sharing the link.\n              </Alert>\n            </div>\n          : null }\n          <h4 className='poll-title'>{title.length > 0 ? title : 'Untitled'}</h4>\n          <hr />\n          <div className='poll-desc'>\n            <h6>Description</h6>\n            <div>\n              <p>\n                {desc.length > 0 ? desc : <i>No description</i>}\n              </p>\n              <hr />\n              <div className='poll-stat'>\n                {visits} views • {moment(dateCreated).format('ll')}\n              </div>\n            </div>\n          </div>\n          <hr />\n          {\n            moment(dateCreated).add(votingPeriod, 'hours').isAfter(Date.now()) ?\n            <PollChoices choices={choices} dateCreated={dateCreated} votingPeriod={votingPeriod} />\n            :\n            <PollResults />\n          }\n        </div>\n      </Layout>\n    )\n  }\n}\n\n/*\nconst PollPage = (props) => {\n  const router = useRouter()\n  const { slug } = router.query;\n  console.log(props);\n  return (\n    <Layout>\n      <Poll {...props} />\n    </Layout>\n  )\n}\n*?\n\n/*\nconst Poll = props => (\n  <Layout>\n    \n    <h3>{props.title}</h3>\n  </Layout>\n);\n*/\n\n/*\nPollPage.getInitialProps = async function(context) {\n  const { slug } = context.query;\n  const res = await fetch(`http://localhost:3000/api/poll/${slug}`);\n  console.log(res);\n  const errorCode = res.status > 200 ? res.status : false\n  const data = await res.json()\n\n  return { errorCode, poll: data }\n  if(res.status === 200) {\n    const data = await res.json();\n    return { poll: data };\n  } else {\n    Router.push('')\n  }\n  console.log(data);\n}\n */\nexport default PollPage"]},"metadata":{},"sourceType":"module"}