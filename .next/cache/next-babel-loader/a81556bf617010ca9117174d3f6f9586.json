{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/Layout';\nimport PollPreview from '../components/PollPreview';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport { withRouter } from 'next/router';\nimport CategoriesList from '../helpers/CategoriesList'; //TO DO ##############################################\n//Validate Poll Inputs\n\nvar visibilityTooltip = function visibilityTooltip(props) {\n  return __jsx(\"div\", _extends({}, props, {\n    style: _objectSpread({\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '1rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem'\n    }, props.style)\n  }), \"Set whether to allow the public to see this poll or keep it private. Only those with the URL will be able to access the poll if set private.\");\n};\n\nvar votingPeriodTooltip = function votingPeriodTooltip(props) {\n  return __jsx(\"div\", _extends({}, props, {\n    style: _objectSpread({\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '1rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem'\n    }, props.style)\n  }), \"Set in hours when the poll will expire.\");\n};\n\nfunction validatePollInput(pollDataObj) {\n  var choices = [pollDataObj.choice1, pollDataObj.choice2];\n\n  if (pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n\n  if (pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  var pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod,\n    category: pollDataObj.category\n  };\n  return pollData;\n}\n\nvar CreatePoll =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePoll, _React$Component);\n\n  function CreatePoll() {\n    var _this;\n\n    _classCallCheck(this, CreatePoll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreatePoll).call(this));\n    _this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      category: 0,\n      error: false,\n      timelimit: 'Voting ends in: 6 hours'\n    };\n    _this.inputUpdate = _this.inputUpdate.bind(_assertThisInitialized(_this));\n    _this.visibilityUpdate = _this.visibilityUpdate.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.updateTimePeriod = _this.updateTimePeriod.bind(_assertThisInitialized(_this));\n    _this.updateCategory = _this.updateCategory.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CreatePoll, [{\n    key: \"inputUpdate\",\n    value: function inputUpdate(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"updateCategory\",\n    value: function updateCategory(e) {\n      this.setState({\n        category: e.target.selectedIndex\n      });\n    }\n  }, {\n    key: \"visibilityUpdate\",\n    value: function visibilityUpdate(e) {\n      this.setState({\n        visibility: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, req) {\n        var _absoluteUrl, origin, pollData, res, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _absoluteUrl = absoluteUrl(req), origin = _absoluteUrl.origin;\n                pollData = validatePollInput(this.state);\n                _context.prev = 3;\n                _context.next = 6;\n                return fetch(\"\".concat(origin, \"/api/create-poll\"), {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'X-Origin': 'statmix'\n                  },\n                  body: _JSON$stringify(pollData)\n                });\n\n              case 6:\n                res = _context.sent;\n                _context.next = 9;\n                return res.json();\n\n              case 9:\n                data = _context.sent;\n\n                if (data.message === 'success') {\n                  Router.push(\"/poll/\".concat(data.url));\n                } else {\n                  this.setState({\n                    error: true\n                  });\n                  window.scrollTo({\n                    top: 56,\n                    left: 0,\n                    behavior: 'smooth'\n                  });\n                } //console.log(data);\n\n\n                _context.next = 15;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 13]]);\n      }));\n\n      function handleSubmit(_x, _x2) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"updateTimePeriod\",\n    value: function updateTimePeriod(e) {\n      var _this$setState2;\n\n      var endTime = moment(this.state.dateCreated, 'YYYY-MM-DD HH:mm:ss').add(e.target.value, 'hours');\n      var currentTime = moment(new Date(), 'YYYY-MM-DD HH:mm:ss');\n      var timelimit = 'Voting ends in:';\n      var diff = moment.preciseDiff(endTime, currentTime, true);\n      var days = diff.days;\n      var hours = diff.hours;\n      var minutes = diff.minutes;\n      if (days > 0) timelimit += \" \".concat(days, \" days\");\n      if (hours > 0) timelimit += \" \".concat(hours, \" hours\");\n      if (minutes > 0) timelimit += \" \".concat(minutes, \" minutes\");\n      this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, e.target.name, e.target.value), _defineProperty(_this$setState2, \"timelimit\", timelimit), _this$setState2));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          title = _this$state.title,\n          desc = _this$state.desc,\n          choice1 = _this$state.choice1,\n          choice2 = _this$state.choice2,\n          choice3 = _this$state.choice3,\n          choice4 = _this$state.choice4,\n          votingPeriod = _this$state.votingPeriod,\n          error = _this$state.error;\n      return __jsx(Layout, {\n        pageTitle: \"Create Poll\",\n        pageDesc: \"Create public or private polls. Share with friends, communties and gather data.\",\n        path: this.props.router.asPath\n      }, __jsx(\"h4\", {\n        className: \"page-header\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: faPoll\n      }), \" Create Poll\"), __jsx(\"hr\", null), error ? __jsx(Alert, {\n        variant: \"danger\"\n      }, __jsx(\"b\", null, \"Error submitting poll\")) : null, __jsx(Form, {\n        autoComplete: \"off\",\n        onSubmit: this.handleSubmit\n      }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Title\"), __jsx(Form.Control, {\n        value: title,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"title\",\n        maxLength: \"100\",\n        required: true\n      })), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Description (Optional)\"), __jsx(Form.Control, {\n        value: desc,\n        onChange: this.inputUpdate,\n        style: {\n          'maxHeight': '144px',\n          minHeight: '72px'\n        },\n        as: \"textarea\",\n        rows: \"3\",\n        name: \"desc\",\n        maxLength: \"400\"\n      }), __jsx(Form.Text, null, \"Characters remaining: \", 400 - desc.length)), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Choice #1\"), __jsx(Form.Control, {\n        value: choice1,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"choice1\",\n        maxLength: \"50\",\n        required: true\n      })), __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Choice #2\"), __jsx(Form.Control, {\n        value: choice2,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"choice2\",\n        maxLength: \"50\",\n        required: true\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Choice #3 (Optional)\"), __jsx(Form.Control, {\n        value: choice3,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"choice3\",\n        maxLength: \"50\"\n      })), __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Choice #4 (Optional)\"), __jsx(Form.Control, {\n        value: choice4,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"choice4\",\n        maxLength: \"50\"\n      }))), __jsx(\"hr\", null), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Visibility\", \" \", __jsx(OverlayTrigger, {\n        placement: \"top-start\",\n        delay: {\n          show: 250,\n          hide: 400\n        },\n        overlay: visibilityTooltip\n      }, __jsx(FontAwesomeIcon, {\n        icon: faQuestionCircle\n      }))), __jsx(Form.Check, {\n        onClick: this.visibilityUpdate,\n        type: \"radio\",\n        label: \"Public\",\n        name: \"visibility\",\n        value: \"public\",\n        defaultChecked: true\n      }), __jsx(Form.Check, {\n        onClick: this.visibilityUpdate,\n        type: \"radio\",\n        label: \"Private\",\n        name: \"visibility\",\n        value: \"private\"\n      })), __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Voting Period (hours)\", \" \", __jsx(OverlayTrigger, {\n        placement: \"top-start\",\n        delay: {\n          show: 250,\n          hide: 400\n        },\n        overlay: votingPeriodTooltip\n      }, __jsx(FontAwesomeIcon, {\n        icon: faQuestionCircle\n      }))), __jsx(Form.Control, {\n        value: votingPeriod,\n        onChange: this.updateTimePeriod,\n        style: {\n          maxWidth: '200px'\n        },\n        type: \"number\",\n        min: \"6\",\n        max: \"72\",\n        name: \"votingPeriod\"\n      }), __jsx(Form.Text, null, \"6h - 72h\"))), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Category\"), __jsx(Form.Control, {\n        onChange: this.updateCategory,\n        as: \"select\",\n        name: \"category\"\n      }, __jsx(\"option\", null, \"Select a category\"), CategoriesList.map(function (category, i) {\n        return __jsx(\"option\", {\n          key: i\n        }, category);\n      }))), __jsx(\"div\", {\n        className: \"poll-preview\"\n      }, __jsx(\"h4\", {\n        className: \"page-header\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: faEye\n      }), \" Preview\"), __jsx(\"hr\", null), __jsx(PollPreview, this.state)), __jsx(\"hr\", null), __jsx(Form.Group, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '2rem'\n        }\n      }, __jsx(Button, {\n        variant: \"light-blue\",\n        type: \"submit\",\n        style: {\n          width: '200px'\n        }\n      }, \"Create Poll\"))));\n    }\n  }]);\n\n  return CreatePoll;\n}(React.Component);\n\nexport default withRouter(CreatePoll);","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/pages/create-poll.js"],"names":["Layout","PollPreview","Form","Button","Col","Alert","OverlayTrigger","FontAwesomeIcon","faPoll","faQuestionCircle","faEye","Router","absoluteUrl","moment","withRouter","CategoriesList","visibilityTooltip","props","maxWidth","backgroundColor","padding","color","borderRadius","style","votingPeriodTooltip","validatePollInput","pollDataObj","choices","choice1","choice2","choice3","push","choice4","pollData","title","desc","visibility","votingPeriod","category","CreatePoll","state","dateCreated","Date","error","timelimit","inputUpdate","bind","visibilityUpdate","handleSubmit","updateTimePeriod","updateCategory","e","setState","target","name","value","selectedIndex","req","preventDefault","origin","fetch","method","headers","body","res","json","data","message","url","window","scrollTo","top","left","behavior","endTime","add","currentTime","diff","preciseDiff","days","hours","minutes","router","asPath","minHeight","length","show","hide","map","i","display","justifyContent","marginTop","width","React","Component"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\nimport PollPreview from '../components/PollPreview';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport { withRouter } from 'next/router';\nimport CategoriesList from '../helpers/CategoriesList';\n\n//TO DO ##############################################\n//Validate Poll Inputs\n\nconst visibilityTooltip = props => (\n  <div\n    {...props}\n    style={{\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '1rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem',\n      ...props.style,\n    }}\n  >\n    Set whether to allow the public to see this poll or keep it private.\n    Only those with the URL will be able to access the poll if set private.\n  </div>\n);\n\nconst votingPeriodTooltip = props => (\n  <div\n    {...props}\n    style={{\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '1rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem',\n      ...props.style,\n    }}\n  >\n    Set in hours when the poll will expire.\n  </div>\n);\n\nfunction validatePollInput(pollDataObj) {\n  let choices = [pollDataObj.choice1, pollDataObj.choice2];\n  if(pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n  if(pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod,\n    category: pollDataObj.category\n  }\n\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      category: 0,\n      error: false,\n      timelimit: 'Voting ends in: 6 hours'\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateTimePeriod = this.updateTimePeriod.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  updateCategory(e) {\n    this.setState({ category: e.target.selectedIndex });\n  }\n\n  visibilityUpdate(e) {\n    this.setState({ visibility: e.target.value });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const { origin } = absoluteUrl(req);\n    const pollData = validatePollInput(this.state);\n    try {\n      const res = await fetch(`${origin}/api/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Origin': 'statmix'\n        },\n        body: JSON.stringify(pollData)\n      });\n      const data = await res.json();\n      if(data.message === 'success') {\n        Router.push(`/poll/${data.url}`);\n      } else {\n        this.setState({ error: true });\n        window.scrollTo({\n          top: 56,\n          left: 0,\n          behavior: 'smooth'\n        });\n      }\n      //console.log(data);\n    } catch(err) {\n      //console.log(err)\n    }\n  }\n\n  updateTimePeriod(e) {\n    const endTime = moment(this.state.dateCreated,'YYYY-MM-DD HH:mm:ss').add(e.target.value, 'hours');\n    const currentTime = moment(new Date(),'YYYY-MM-DD HH:mm:ss');\n    let timelimit = 'Voting ends in:';\n    const diff = moment.preciseDiff(endTime, currentTime, true);\n    const days = diff.days;\n    const hours = diff.hours;\n    const minutes = diff.minutes;\n    if(days > 0) timelimit += ` ${days} days`;\n    if(hours > 0) timelimit += ` ${hours} hours`;\n    if(minutes > 0) timelimit += ` ${minutes} minutes`;\n    this.setState({\n      [e.target.name]: e.target.value,\n      timelimit: timelimit\n    })\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choice1,\n      choice2,\n      choice3,\n      choice4,\n      votingPeriod,\n      error\n    } = this.state;\n\n    return (\n      <Layout\n        pageTitle='Create Poll'\n        pageDesc='Create public or private polls. Share with friends, communties and gather data.'\n        path={this.props.router.asPath}\n      >\n        <h4 className='page-header'><FontAwesomeIcon icon={faPoll} /> Create Poll</h4>\n        <hr />\n        { error ?\n          <Alert variant='danger'>\n           <b>Error submitting poll</b>\n          </Alert> : null\n        }\n        <Form autoComplete='off' onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>\n              Title\n            </Form.Label>\n            <Form.Control\n              value={title}\n              onChange={this.inputUpdate}\n              type='text' name='title' maxLength='100'\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Description (Optional)\n            </Form.Label>\n            <Form.Control\n              value={desc}\n              onChange={this.inputUpdate}\n              style={{ 'maxHeight': '144px', minHeight: '72px' }}\n              as=\"textarea\" rows=\"3\" name='desc' maxLength='400'\n            />\n            <Form.Text>\n              Characters remaining: {400 - desc.length}\n            </Form.Text>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #1\n              </Form.Label>\n              <Form.Control\n                value={choice1}\n                onChange={this.inputUpdate}\n                type='text' name='choice1' maxLength='50'\n                required\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #2\n              </Form.Label>\n              <Form.Control\n                value={choice2}\n                onChange={this.inputUpdate} \n                type='text' name='choice2' maxLength='50'\n                required\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #3 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice3}\n                onChange={this.inputUpdate}\n                type='text' name='choice3' maxLength='50'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #4 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice4}\n                onChange={this.inputUpdate}\n                type='text'name='choice4' maxLength='50'\n              />\n            </Form.Group>\n          </Form.Row>\n          <hr />\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Visibility{\" \"}\n                <OverlayTrigger\n                    placement=\"top-start\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={visibilityTooltip}>\n                  <FontAwesomeIcon icon={faQuestionCircle} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Public' name='visibility' value='public' defaultChecked\n              />\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Private' name='visibility' value='private'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Voting Period (hours){\" \"}\n                <OverlayTrigger\n                  placement=\"top-start\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={votingPeriodTooltip}\n                >\n                  <FontAwesomeIcon icon={faQuestionCircle} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Control\n                value={votingPeriod}\n                onChange={this.updateTimePeriod}\n                style={{ maxWidth: '200px' }}\n                type='number' min='6' max='72' name='votingPeriod'\n              />\n              <Form.Text>\n                6h - 72h \n              </Form.Text>\n            </Form.Group>\n          </Form.Row>\n          <Form.Group>\n            <Form.Label>\n              Category\n            </Form.Label>\n            <Form.Control\n              onChange={this.updateCategory}\n              as=\"select\"\n              name='category'\n            >\n            <option>Select a category</option>\n            {CategoriesList.map((category, i) => (\n              <option key={i}>{category}</option>\n            ))}\n            </Form.Control>\n          </Form.Group>\n          <div className='poll-preview'>\n            <h4 className='page-header'><FontAwesomeIcon icon={faEye} /> Preview</h4>\n            <hr />\n            <PollPreview {...this.state} />\n          </div>\n          <hr />\n          <Form.Group style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n            <Button \n              variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n              Create Poll\n            </Button>\n          </Form.Group>\n        </Form>\n      </Layout>\n    )\n  }\n}\n\nexport default withRouter(CreatePoll);"]},"metadata":{},"sourceType":"module"}