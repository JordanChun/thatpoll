{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\nimport Cookies from 'js-cookie';\n\nvar Feedback =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Feedback, _React$Component);\n\n  function Feedback(props) {\n    var _this;\n\n    _classCallCheck(this, Feedback);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Feedback).call(this, props));\n    _this.state = {\n      text: '',\n      error: false,\n      success: false,\n      validated: false\n    };\n    _this.inputUpdate = _this.inputUpdate.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Feedback, [{\n    key: \"inputUpdate\",\n    value: function inputUpdate(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var form, res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                form = e.currentTarget;\n\n                if (form.checkValidity() === false) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n\n                this.setState({\n                  validated: true\n                });\n                _context.prev = 4;\n                _context.next = 7;\n                return fetch(\"\".concat(window.location.origin, \"/api/v1/feedback\"), {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: _JSON$stringify({\n                    text: this.state.text\n                  })\n                });\n\n              case 7:\n                res = _context.sent;\n                _context.next = 10;\n                return res.json();\n\n              case 10:\n                data = _context.sent;\n\n                if (data.message === 'success') {\n                  this.setState({\n                    error: false,\n                    success: true,\n                    text: '',\n                    validated: false\n                  }); // display sucess\n                } else {\n                  this.setState({\n                    error: true\n                  }); // display error\n                }\n\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](4);\n                // display error\n                this.setState({\n                  error: true\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 14]]);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          text = _this$state.text,\n          error = _this$state.error,\n          success = _this$state.success,\n          validated = _this$state.validated;\n      return __jsx(Layout, null, __jsx(\"h4\", {\n        className: \"page-header\"\n      }, \"Feedback & Suggestions\"), __jsx(\"hr\", null), error ? __jsx(Alert, {\n        variant: \"danger\"\n      }, __jsx(\"b\", null, \"Error submitting form\")) : null, success ? __jsx(Alert, {\n        variant: \"success\"\n      }, __jsx(\"b\", null, __jsx(FontAwesomeIcon, {\n        icon: faCheck\n      }), \" Feedback/Suggestion Received. Thank You\")) : null, __jsx(\"p\", null, \"Got feedback or a suggestion? ThatPoll is always striving to improve our web application. Please share your thoughts below.\"), __jsx(Form, {\n        noValidate: true,\n        validated: validated,\n        autoComplete: \"off\",\n        onSubmit: this.handleSubmit,\n        style: {\n          padding: '1rem'\n        }\n      }, __jsx(Form.Group, {\n        controlId: \"validateText\"\n      }, __jsx(Form.Label, null, \"Text:\"), __jsx(Form.Control, {\n        value: text,\n        onChange: this.inputUpdate,\n        style: {\n          maxHeight: '180px',\n          minHeight: '112px'\n        },\n        as: \"textarea\",\n        rows: \"3\",\n        name: \"text\",\n        minLength: \"10\",\n        maxLength: \"500\",\n        required: true\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\"\n      }, \"Please provide some text. Min 10 characters.\")), __jsx(Form.Group, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '2rem'\n        }\n      }, __jsx(Button, {\n        variant: \"light-blue\",\n        type: \"submit\",\n        style: {\n          width: '200px'\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Feedback;\n}(React.Component);\n\nexport default Feedback;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/pages/feedback.js"],"names":["Layout","Button","Form","Alert","FontAwesomeIcon","faCheck","PropTypes","Cookies","Feedback","props","state","text","error","success","validated","inputUpdate","bind","handleSubmit","e","setState","target","name","value","preventDefault","form","currentTarget","checkValidity","stopPropagation","fetch","window","location","origin","method","headers","body","res","json","data","message","padding","maxHeight","minHeight","display","justifyContent","marginTop","width","React","Component"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\nimport Cookies from 'js-cookie';\n\nclass Feedback extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      error: false,\n      success: false,\n      validated: false,\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.setState({ validated: true });\n    try {\n      const res = await fetch(`${window.location.origin}/api/v1/feedback`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: this.state.text\n        })\n      });\n\n      const data = await res.json();\n      if (data.message === 'success') {\n          this.setState({\n          error: false,\n          success: true,\n          text: '',\n          validated: false\n        });\n        // display sucess\n      } else {\n        this.setState({ error: true });\n        // display error\n      }\n\n\n    } catch(err) {\n        // display error\n        this.setState({ error: true });\n    }\n\n  }\n\n  render() {\n    const { text, error, success, validated } = this.state;\n    return (\n      <Layout>\n        <h4 className='page-header'>Feedback & Suggestions</h4>\n        <hr />\n        { error ?\n          <Alert variant='danger'>\n            <b>Error submitting form</b>\n          </Alert> : null\n        }\n        { success ?\n          <Alert variant='success'>\n            <b>\n              <FontAwesomeIcon icon={faCheck} /> Feedback/Suggestion Received. Thank You\n            </b>\n          </Alert> : null\n        }\n        <p>Got feedback or a suggestion? ThatPoll is always striving to improve our web application. Please share your thoughts below.</p>\n        <Form noValidate validated={validated} autoComplete='off' onSubmit={this.handleSubmit} style={{ padding: '1rem' }}>\n          <Form.Group controlId='validateText'>\n            <Form.Label>\n              Text:\n            </Form.Label>\n            <Form.Control\n              value={text}\n              onChange={this.inputUpdate}\n              style={{ maxHeight: '180px', minHeight: '112px' }}\n              as=\"textarea\" rows=\"3\" name='text' minLength='10' maxLength='500'\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide some text. Min 10 characters.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n            <Button \n              variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n              Submit\n            </Button>\n          </Form.Group>\n        </Form>\n      </Layout>\n    )\n  }\n}\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}