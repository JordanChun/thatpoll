{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport PollPreview from '../components/PollPreview';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url'; //TO DO ##############################################\n//Validate Poll Inputs\n\nfunction validatePollInput(pollDataObj) {\n  var choices = [pollDataObj.choice1, pollDataObj.choice2];\n\n  if (pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n\n  if (pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  var pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod\n  };\n  return pollData;\n}\n\nvar CreatePoll =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePoll, _React$Component);\n\n  function CreatePoll() {\n    var _this;\n\n    _classCallCheck(this, CreatePoll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreatePoll).call(this));\n    _this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date()\n    };\n    _this.inputUpdate = _this.inputUpdate.bind(_assertThisInitialized(_this));\n    _this.visibilityUpdate = _this.visibilityUpdate.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CreatePoll, [{\n    key: \"inputUpdate\",\n    value: function inputUpdate(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"visibilityUpdate\",\n    value: function visibilityUpdate(e) {\n      this.setState({\n        visibility: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, req) {\n        var _absoluteUrl, origin, pollData, res, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _absoluteUrl = absoluteUrl(req), origin = _absoluteUrl.origin;\n                pollData = validatePollInput(this.state);\n                _context.prev = 3;\n                _context.next = 6;\n                return fetch(\"\".concat(origin, \"/api/create-poll\"), {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: _JSON$stringify(pollData)\n                });\n\n              case 6:\n                res = _context.sent;\n                _context.next = 9;\n                return res.json();\n\n              case 9:\n                data = _context.sent;\n\n                if (data.message === 'success') {\n                  Router.push(\"/poll/\".concat(data.url));\n                }\n\n                console.log(data);\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 14]]);\n      }));\n\n      function handleSubmit(_x, _x2) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          title = _this$state.title,\n          desc = _this$state.desc,\n          choice1 = _this$state.choice1,\n          choice2 = _this$state.choice2,\n          choice3 = _this$state.choice3,\n          choice4 = _this$state.choice4,\n          votingPeriod = _this$state.votingPeriod;\n      return __jsx(Layout, null, __jsx(\"h4\", {\n        className: \"page-header\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: faPoll\n      }), \" Create Poll\"), __jsx(\"hr\", null), __jsx(Form, {\n        autoComplete: \"off\"\n      }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Title\"), __jsx(Form.Control, {\n        value: title,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"title\",\n        maxLength: \"100\"\n      })), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Description (Optional)\"), __jsx(Form.Control, {\n        value: desc,\n        onChange: this.inputUpdate,\n        style: {\n          'maxHeight': '144px',\n          minHeight: '72px'\n        },\n        as: \"textarea\",\n        rows: \"3\",\n        name: \"desc\",\n        maxLength: \"400\"\n      }), __jsx(Form.Text, null, \"Characters remaining: \", 400 - desc.length)), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Choice #1\"), __jsx(Form.Control, {\n        value: choice1,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"choice1\",\n        maxLength: \"50\"\n      })), __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Choice #2\"), __jsx(Form.Control, {\n        value: choice2,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"choice2\",\n        maxLength: \"50\"\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Choice #3 (Optional)\"), __jsx(Form.Control, {\n        value: choice3,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"choice3\",\n        maxLength: \"50\"\n      })), __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Choice #4 (Optional)\"), __jsx(Form.Control, {\n        value: choice4,\n        onChange: this.inputUpdate,\n        type: \"text\",\n        name: \"choice4\",\n        maxLength: \"50\"\n      }))), __jsx(\"hr\", null), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Visibility \", __jsx(FontAwesomeIcon, {\n        icon: faQuestionCircle\n      })), __jsx(Form.Check, {\n        onClick: this.visibilityUpdate,\n        type: \"radio\",\n        label: \"Public\",\n        name: \"visibility\",\n        value: \"public\",\n        defaultChecked: true\n      }), __jsx(Form.Check, {\n        onClick: this.visibilityUpdate,\n        type: \"radio\",\n        label: \"Private\",\n        name: \"visibility\",\n        value: \"private\"\n      })), __jsx(Form.Group, {\n        as: Col\n      }, __jsx(Form.Label, null, \"Voting Period (hours) \", __jsx(FontAwesomeIcon, {\n        icon: faQuestionCircle\n      })), __jsx(Form.Control, {\n        value: votingPeriod,\n        onChange: this.inputUpdate,\n        style: {\n          maxWidth: '200px'\n        },\n        type: \"number\",\n        min: \"6\",\n        max: \"72\",\n        name: \"votingPeriod\"\n      }), __jsx(Form.Text, null, \"6h - 72h\"))), __jsx(\"div\", {\n        className: \"poll-preview\"\n      }, __jsx(\"h4\", {\n        className: \"page-header\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: faEye\n      }), \" Preview\"), __jsx(\"hr\", null), __jsx(PollPreview, this.state)), __jsx(\"hr\", null), __jsx(Form.Group, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '2rem'\n        }\n      }, __jsx(Button, {\n        onClick: this.handleSubmit,\n        variant: \"light-blue\",\n        type: \"submit\",\n        style: {\n          width: '200px'\n        }\n      }, \"Create Poll\"))));\n    }\n  }]);\n\n  return CreatePoll;\n}(React.Component);\n\nexport default CreatePoll;","map":{"version":3,"sources":["E:\\Users\\Jordan\\Desktop\\statmix\\pages\\create-poll.js"],"names":["Layout","Form","Button","Col","FontAwesomeIcon","faPoll","faQuestionCircle","faEye","PollPreview","Router","absoluteUrl","validatePollInput","pollDataObj","choices","choice1","choice2","choice3","push","choice4","pollData","title","desc","visibility","votingPeriod","CreatePoll","state","dateCreated","Date","inputUpdate","bind","visibilityUpdate","handleSubmit","e","setState","target","name","value","req","preventDefault","origin","fetch","method","headers","body","res","json","data","message","url","console","log","minHeight","length","maxWidth","display","justifyContent","marginTop","width","React","Component"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport PollPreview from '../components/PollPreview';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\n\n//TO DO ##############################################\n//Validate Poll Inputs\n\nfunction validatePollInput(pollDataObj) {\n  let choices = [pollDataObj.choice1, pollDataObj.choice2];\n  if(pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n  if(pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod\n  }\n\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date()\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  visibilityUpdate(e) {\n    this.setState({ visibility: e.target.value });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const { origin } = absoluteUrl(req);\n    const pollData = validatePollInput(this.state);\n    try {\n      const res = await fetch(`${origin}/api/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(pollData)\n      });\n      const data = await res.json();\n      if(data.message === 'success') {\n        Router.push(`/poll/${data.url}`);\n      }\n      console.log(data);\n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choice1,\n      choice2,\n      choice3,\n      choice4,\n      votingPeriod,\n    } = this.state;\n\n    return (\n      <Layout>\n        <h4 className='page-header'><FontAwesomeIcon icon={faPoll} /> Create Poll</h4>\n        <hr />\n        <Form autoComplete='off'>\n          <Form.Group>\n            <Form.Label>\n              Title\n            </Form.Label>\n            <Form.Control\n              value={title}\n              onChange={this.inputUpdate}\n              type='text' name='title' maxLength='100'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Description (Optional)\n            </Form.Label>\n            <Form.Control\n              value={desc}\n              onChange={this.inputUpdate}\n              style={{ 'maxHeight': '144px', minHeight: '72px' }}\n              as=\"textarea\" rows=\"3\" name='desc' maxLength='400'\n            />\n            <Form.Text>\n              Characters remaining: {400 - desc.length}\n            </Form.Text>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #1\n              </Form.Label>\n              <Form.Control\n                value={choice1}\n                onChange={this.inputUpdate}\n                type='text' name='choice1' maxLength='50'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #2\n              </Form.Label>\n              <Form.Control\n                value={choice2}\n                onChange={this.inputUpdate} \n                type='text' name='choice2' maxLength='50'\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #3 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice3}\n                onChange={this.inputUpdate}\n                type='text' name='choice3' maxLength='50'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #4 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice4}\n                onChange={this.inputUpdate}\n                type='text'name='choice4' maxLength='50'\n              />\n            </Form.Group>\n          </Form.Row>\n          <hr />\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Visibility <FontAwesomeIcon icon={faQuestionCircle} />\n              </Form.Label>\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Public' name='visibility' value='public' defaultChecked\n              />\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Private' name='visibility' value='private'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Voting Period (hours) <FontAwesomeIcon icon={faQuestionCircle} />\n              </Form.Label>\n              <Form.Control\n                value={votingPeriod}\n                onChange={this.inputUpdate}\n                style={{ maxWidth: '200px' }}\n                type='number' min='6' max='72' name='votingPeriod'\n              />\n              <Form.Text>\n                6h - 72h \n              </Form.Text>\n            </Form.Group>\n\n          </Form.Row>\n          <div className='poll-preview'>\n            <h4 className='page-header'><FontAwesomeIcon icon={faEye} /> Preview</h4>\n            <hr />\n            <PollPreview {...this.state} />\n          </div>\n          <hr />\n          <Form.Group style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n            <Button \n              onClick={this.handleSubmit}\n              variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n              Create Poll\n            </Button>\n          </Form.Group>\n        </Form>\n      </Layout>\n    )\n  }\n}\n\nexport default CreatePoll;"]},"metadata":{},"sourceType":"module"}