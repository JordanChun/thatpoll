{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport { ReportButton, ReportButtonDropdown } from '../Report';\nimport CustomDropdownToggle from '../layout/CustomDropdownToggle';\n\nfunction redirectToPoll(slug) {\n  Router.push(`/poll?slug=${slug}`, `/poll/${slug}`);\n}\n\nconst PollCard = props => __jsx(\"div\", {\n  className: \"poll-card-container\",\n  onClick: () => redirectToPoll(props.poll.url)\n}, __jsx(Link, {\n  href: {\n    pathname: '/poll',\n    query: {\n      slug: props.poll.url\n    }\n  },\n  as: `/poll/${props.poll.url}`\n}, __jsx(\"a\", null, __jsx(\"h6\", {\n  className: \"poll-card-title\",\n  onClick: e => {\n    e.stopPropagation();\n  },\n  title: props.poll.title\n}, props.poll.title))), __jsx(\"hr\", null), __jsx(\"div\", {\n  className: \"poll-card-desc\"\n}, props.poll.desc.length > 0 ? __jsx(\"p\", null, props.poll.desc) : __jsx(\"i\", null, \"No Description\")), __jsx(\"hr\", null), __jsx(\"div\", {\n  className: \"poll-card-actions\"\n}, __jsx(\"div\", null, __jsx(Link, {\n  href: {\n    pathname: '/poll',\n    query: {\n      slug: props.poll.url\n    }\n  },\n  as: `/poll/${props.poll.url}`\n}, __jsx(\"a\", null, __jsx(Button, {\n  variant: \"grey-blue\",\n  size: \"sm\",\n  onClick: e => {\n    e.stopPropagation();\n  }\n}, \"View Poll\"))), __jsx(\"div\", {\n  className: \"poll-stat\",\n  style: {\n    lineHeight: '2.5',\n    marginLeft: '0.75rem'\n  }\n}, __jsx(\"span\", null, props.poll.totalVotes.toLocaleString(), \" votes \\u2022 \", props.poll.dateCreated, \" \\u2022 \", props.poll.active ? __jsx(\"b\", {\n  style: {\n    color: 'red'\n  }\n}, \"LIVE\") : __jsx(\"b\", null, \"ENDED\")))), __jsx(\"div\", {\n  className: \"poll-card-actions-options\",\n  onClick: e => {\n    e.stopPropagation();\n  }\n}, __jsx(\"div\", null, __jsx(ReportButton, {\n  urlref: props.poll.url,\n  polltitle: props.poll.title\n})), __jsx(\"div\", {\n  className: \"poll-card-actions-compact\"\n}, __jsx(Dropdown, {\n  alignRight: true\n}, __jsx(Dropdown.Toggle, {\n  as: CustomDropdownToggle,\n  id: \"poll-card-options-compact\"\n}, __jsx(FontAwesomeIcon, {\n  icon: faEllipsisV\n})), __jsx(Dropdown.Menu, null, __jsx(Dropdown.Item, null, __jsx(ReportButtonDropdown, {\n  urlref: props.poll.url\n}))))))));\n\nPollCard.propTypes = {\n  poll: PropTypes.object.isRequired\n};\nexport default PollCard;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/poll/PollCard.js"],"names":["Link","Button","Dropdown","FontAwesomeIcon","faFlag","faEllipsisV","PropTypes","Router","ReportButton","ReportButtonDropdown","CustomDropdownToggle","redirectToPoll","slug","push","PollCard","props","poll","url","pathname","query","e","stopPropagation","title","desc","length","lineHeight","marginLeft","totalVotes","toLocaleString","dateCreated","active","color","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport { ReportButton, ReportButtonDropdown } from '../Report';\nimport CustomDropdownToggle from '../layout/CustomDropdownToggle';\n\n\nfunction redirectToPoll(slug) {\n  Router.push(`/poll?slug=${slug}`, `/poll/${slug}`)\n}\n\nconst PollCard = props => (\n  <div\n    className='poll-card-container'\n    onClick={() => redirectToPoll(props.poll.url)}\n    >\n    <Link href={{ pathname: '/poll', query: { slug: props.poll.url } }} as={`/poll/${props.poll.url}`}>\n      <a>\n        <h6\n          className='poll-card-title'\n          onClick={(e) => {e.stopPropagation()}}\n          title={props.poll.title}  \n        >\n          {props.poll.title}\n        </h6>\n      </a>\n    </Link>\n    <hr />\n    <div className='poll-card-desc'>\n      {props.poll.desc.length > 0 ? <p>{props.poll.desc}</p> : <i>No Description</i> }\n    </div>\n    <hr />\n    <div className='poll-card-actions'>\n      <div>\n        <Link href={{ pathname: '/poll', query: { slug: props.poll.url } }} as={`/poll/${props.poll.url}`}>\n          <a>\n            <Button variant=\"grey-blue\" size=\"sm\" onClick={(e) => {e.stopPropagation()}}>\n              View Poll\n            </Button>\n          </a>\n        </Link>\n        <div className='poll-stat' style={{ lineHeight: '2.5', marginLeft: '0.75rem' }}>\n          <span>{props.poll.totalVotes.toLocaleString()} votes • {props.poll.dateCreated} • {props.poll.active ? <b style={{ color: 'red' }}>LIVE</b> : <b>ENDED</b>}</span>\n        </div>\n      </div>\n      <div className='poll-card-actions-options' onClick={(e) => {e.stopPropagation()}}>\n        <div>\n          <ReportButton urlref={props.poll.url} polltitle={props.poll.title} />\n        </div>\n        <div className='poll-card-actions-compact'>\n          <Dropdown alignRight>\n            <Dropdown.Toggle as={CustomDropdownToggle} id=\"poll-card-options-compact\">\n              <FontAwesomeIcon icon={faEllipsisV} />\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <ReportButtonDropdown urlref={props.poll.url} />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPollCard.propTypes = {\n  poll: PropTypes.object.isRequired\n}\n\nexport default PollCard;"]},"metadata":{},"sourceType":"module"}