{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport PollPreview from '../components/PollPreview';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin'; //TO DO ##############################################\n//Validate Poll Inputs\n\nfunction validatePollInput(pollDataObj) {\n  let choices = [pollDataObj.choice1, pollDataObj.choice2];\n\n  if (pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n\n  if (pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod\n  };\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      error: false,\n      timelimit: 'Voting ends in: 6 hours'\n    };\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateTimePeriod = this.updateTimePeriod.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  visibilityUpdate(e) {\n    this.setState({\n      visibility: e.target.value\n    });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const {\n      origin\n    } = absoluteUrl(req);\n    const pollData = validatePollInput(this.state);\n\n    try {\n      const res = await fetch(`${origin}/api/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Origin': 'statmix'\n        },\n        body: _JSON$stringify(pollData)\n      });\n      const data = await res.json();\n\n      if (data.message === 'success') {\n        Router.push(`/poll/${data.url}`);\n      } else {\n        this.setState({\n          error: true\n        });\n        window.scrollTo({\n          top: 56,\n          left: 0,\n          behavior: 'smooth'\n        });\n      } //console.log(data);\n\n    } catch (err) {//console.log(err)\n    }\n  }\n\n  updateTimePeriod(e) {\n    const endTime = moment(this.state.dateCreated, 'YYYY-MM-DD HH:mm:ss').add(e.target.value, 'hours');\n    const currentTime = moment(new Date(), 'YYYY-MM-DD HH:mm:ss');\n    let timelimit = 'Voting ends in:';\n    const diff = moment.preciseDiff(endTime, currentTime, true);\n    const days = diff.days;\n    const hours = diff.hours;\n    const minutes = diff.minutes;\n    if (days > 0) timelimit += ` ${days} days`;\n    if (hours > 0) timelimit += ` ${hours} hours`;\n    if (minutes > 0) timelimit += ` ${minutes} minutes`;\n    this.setState({\n      [e.target.name]: e.target.value,\n      timelimit: timelimit\n    });\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choice1,\n      choice2,\n      choice3,\n      choice4,\n      votingPeriod,\n      error\n    } = this.state;\n    return __jsx(Layout, {\n      pageTitle: \"Create Poll\"\n    }, __jsx(\"h4\", {\n      className: \"page-header\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPoll\n    }), \" Create Poll\"), __jsx(\"hr\", null), error ? __jsx(Alert, {\n      variant: \"danger\"\n    }, __jsx(\"b\", null, \"Error submitting poll\")) : null, __jsx(Form, {\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit\n    }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Title\"), __jsx(Form.Control, {\n      value: title,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"title\",\n      maxLength: \"100\",\n      required: true\n    })), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Description (Optional)\"), __jsx(Form.Control, {\n      value: desc,\n      onChange: this.inputUpdate,\n      style: {\n        'maxHeight': '144px',\n        minHeight: '72px'\n      },\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"desc\",\n      maxLength: \"400\"\n    }), __jsx(Form.Text, null, \"Characters remaining: \", 400 - desc.length)), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #1\"), __jsx(Form.Control, {\n      value: choice1,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice1\",\n      maxLength: \"50\",\n      required: true\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #2\"), __jsx(Form.Control, {\n      value: choice2,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice2\",\n      maxLength: \"50\",\n      required: true\n    }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #3 (Optional)\"), __jsx(Form.Control, {\n      value: choice3,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice3\",\n      maxLength: \"50\"\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #4 (Optional)\"), __jsx(Form.Control, {\n      value: choice4,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice4\",\n      maxLength: \"50\"\n    }))), __jsx(\"hr\", null), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Visibility \", __jsx(FontAwesomeIcon, {\n      icon: faQuestionCircle\n    })), __jsx(Form.Check, {\n      onClick: this.visibilityUpdate,\n      type: \"radio\",\n      label: \"Public\",\n      name: \"visibility\",\n      value: \"public\",\n      defaultChecked: true\n    }), __jsx(Form.Check, {\n      onClick: this.visibilityUpdate,\n      type: \"radio\",\n      label: \"Private\",\n      name: \"visibility\",\n      value: \"private\"\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Voting Period (hours) \", __jsx(FontAwesomeIcon, {\n      icon: faQuestionCircle\n    })), __jsx(Form.Control, {\n      value: votingPeriod,\n      onChange: this.updateTimePeriod,\n      style: {\n        maxWidth: '200px'\n      },\n      type: \"number\",\n      min: \"6\",\n      max: \"72\",\n      name: \"votingPeriod\"\n    }), __jsx(Form.Text, null, \"6h - 72h\"))), __jsx(\"div\", {\n      className: \"poll-preview\"\n    }, __jsx(\"h4\", {\n      className: \"page-header\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faEye\n    }), \" Preview\"), __jsx(\"hr\", null), __jsx(PollPreview, this.state)), __jsx(\"hr\", null), __jsx(Form.Group, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '2rem'\n      }\n    }, __jsx(Button, {\n      variant: \"light-blue\",\n      type: \"submit\",\n      style: {\n        width: '200px'\n      }\n    }, \"Create Poll\"))));\n  }\n\n}\n\nexport default CreatePoll;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/pages/create-poll.js"],"names":["Layout","Form","Button","Col","Alert","FontAwesomeIcon","faPoll","faQuestionCircle","faEye","PollPreview","Router","absoluteUrl","moment","validatePollInput","pollDataObj","choices","choice1","choice2","choice3","push","choice4","pollData","title","desc","visibility","votingPeriod","CreatePoll","React","Component","constructor","state","dateCreated","Date","error","timelimit","inputUpdate","bind","visibilityUpdate","handleSubmit","updateTimePeriod","e","setState","target","name","value","req","preventDefault","origin","res","fetch","method","headers","body","data","json","message","url","window","scrollTo","top","left","behavior","err","endTime","add","currentTime","diff","preciseDiff","days","hours","minutes","render","minHeight","length","maxWidth","display","justifyContent","marginTop","width"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport PollPreview from '../components/PollPreview';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\n\n//TO DO ##############################################\n//Validate Poll Inputs\n\nfunction validatePollInput(pollDataObj) {\n  let choices = [pollDataObj.choice1, pollDataObj.choice2];\n  if(pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n  if(pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod\n  }\n\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      error: false,\n      timelimit: 'Voting ends in: 6 hours'\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateTimePeriod = this.updateTimePeriod.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  visibilityUpdate(e) {\n    this.setState({ visibility: e.target.value });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const { origin } = absoluteUrl(req);\n    const pollData = validatePollInput(this.state);\n    try {\n      const res = await fetch(`${origin}/api/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Origin': 'statmix'\n        },\n        body: JSON.stringify(pollData)\n      });\n      const data = await res.json();\n      if(data.message === 'success') {\n        Router.push(`/poll/${data.url}`);\n      } else {\n        this.setState({ error: true });\n        window.scrollTo({\n          top: 56,\n          left: 0,\n          behavior: 'smooth'\n        });\n      }\n      //console.log(data);\n    } catch(err) {\n      //console.log(err)\n    }\n  }\n\n  updateTimePeriod(e) {\n    const endTime = moment(this.state.dateCreated,'YYYY-MM-DD HH:mm:ss').add(e.target.value, 'hours');\n    const currentTime = moment(new Date(),'YYYY-MM-DD HH:mm:ss');\n    let timelimit = 'Voting ends in:';\n    const diff = moment.preciseDiff(endTime, currentTime, true);\n    const days = diff.days;\n    const hours = diff.hours;\n    const minutes = diff.minutes;\n    if(days > 0) timelimit += ` ${days} days`;\n    if(hours > 0) timelimit += ` ${hours} hours`;\n    if(minutes > 0) timelimit += ` ${minutes} minutes`;\n    this.setState({\n      [e.target.name]: e.target.value,\n      timelimit: timelimit\n    })\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choice1,\n      choice2,\n      choice3,\n      choice4,\n      votingPeriod,\n      error\n    } = this.state;\n\n    return (\n      <Layout pageTitle='Create Poll'>\n        <h4 className='page-header'><FontAwesomeIcon icon={faPoll} /> Create Poll</h4>\n        <hr />\n        { error ?\n          <Alert variant='danger'>\n           <b>Error submitting poll</b>\n          </Alert> : null\n        }\n        <Form autoComplete='off' onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>\n              Title\n            </Form.Label>\n            <Form.Control\n              value={title}\n              onChange={this.inputUpdate}\n              type='text' name='title' maxLength='100'\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Description (Optional)\n            </Form.Label>\n            <Form.Control\n              value={desc}\n              onChange={this.inputUpdate}\n              style={{ 'maxHeight': '144px', minHeight: '72px' }}\n              as=\"textarea\" rows=\"3\" name='desc' maxLength='400'\n            />\n            <Form.Text>\n              Characters remaining: {400 - desc.length}\n            </Form.Text>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #1\n              </Form.Label>\n              <Form.Control\n                value={choice1}\n                onChange={this.inputUpdate}\n                type='text' name='choice1' maxLength='50'\n                required\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #2\n              </Form.Label>\n              <Form.Control\n                value={choice2}\n                onChange={this.inputUpdate} \n                type='text' name='choice2' maxLength='50'\n                required\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #3 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice3}\n                onChange={this.inputUpdate}\n                type='text' name='choice3' maxLength='50'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #4 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice4}\n                onChange={this.inputUpdate}\n                type='text'name='choice4' maxLength='50'\n              />\n            </Form.Group>\n          </Form.Row>\n          <hr />\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Visibility <FontAwesomeIcon icon={faQuestionCircle} />\n              </Form.Label>\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Public' name='visibility' value='public' defaultChecked\n              />\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Private' name='visibility' value='private'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Voting Period (hours) <FontAwesomeIcon icon={faQuestionCircle} />\n              </Form.Label>\n              <Form.Control\n                value={votingPeriod}\n                onChange={this.updateTimePeriod}\n                style={{ maxWidth: '200px' }}\n                type='number' min='6' max='72' name='votingPeriod'\n              />\n              <Form.Text>\n                6h - 72h \n              </Form.Text>\n            </Form.Group>\n\n          </Form.Row>\n          <div className='poll-preview'>\n            <h4 className='page-header'><FontAwesomeIcon icon={faEye} /> Preview</h4>\n            <hr />\n            <PollPreview {...this.state} />\n          </div>\n          <hr />\n          <Form.Group style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n            <Button \n              variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n              Create Poll\n            </Button>\n          </Form.Group>\n        </Form>\n      </Layout>\n    )\n  }\n}\n\nexport default CreatePoll;"]},"metadata":{},"sourceType":"module"}