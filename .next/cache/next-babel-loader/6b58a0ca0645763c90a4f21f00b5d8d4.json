{"ast":null,"code":"import moment from 'moment';\nimport 'moment-precise-range-plugin';\n\nfunction getMomentTimelimit(dateCreated, votingPeriod) {\n  var endTime = moment.utc(dateCreated).local().add(votingPeriod, 'hours');\n  var currentTime = moment.utc(new Date()).local();\n  var timelimit = 'Voting ends in:';\n\n  if (endTime > currentTime) {\n    var diff = moment.preciseDiff(endTime, currentTime, true);\n    var days = diff.days;\n    var hours = diff.hours;\n    var minutes = diff.minutes;\n    if (days > 0) timelimit += \" \".concat(days, \" days\");\n    if (hours > 0) timelimit += \" \".concat(hours, \" hours\");\n    if (minutes > 0) timelimit += \" \".concat(minutes, \" minutes\");\n    if (timelimit === 'Voting ends in:') timelimit = ' less than 1 minute';\n  } else {\n    timelimit = 'Voting has ended';\n  }\n\n  return timelimit;\n}\n\nexport default getMomentTimelimit;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/helpers/momentFunctions.js"],"names":["moment","getMomentTimelimit","dateCreated","votingPeriod","endTime","utc","local","add","currentTime","Date","timelimit","diff","preciseDiff","days","hours","minutes"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,6BAAP;;AAEA,SAASC,kBAAT,CAA4BC,WAA5B,EAAyCC,YAAzC,EAAuD;AACrD,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAP,CAAWH,WAAX,EAAwBI,KAAxB,GAAgCC,GAAhC,CAAoCJ,YAApC,EAAkD,OAAlD,CAAhB;AACA,MAAMK,WAAW,GAAGR,MAAM,CAACK,GAAP,CAAW,IAAII,IAAJ,EAAX,EAAuBH,KAAvB,EAApB;AACA,MAAII,SAAS,GAAG,iBAAhB;;AAEA,MAAIN,OAAO,GAAGI,WAAd,EAA2B;AACzB,QAAMG,IAAI,GAAGX,MAAM,CAACY,WAAP,CAAmBR,OAAnB,EAA4BI,WAA5B,EAAyC,IAAzC,CAAb;AACA,QAAMK,IAAI,GAAGF,IAAI,CAACE,IAAlB;AACA,QAAMC,KAAK,GAAGH,IAAI,CAACG,KAAnB;AACA,QAAMC,OAAO,GAAGJ,IAAI,CAACI,OAArB;AACA,QAAGF,IAAI,GAAG,CAAV,EAAaH,SAAS,eAAQG,IAAR,UAAT;AACb,QAAGC,KAAK,GAAG,CAAX,EAAcJ,SAAS,eAAQI,KAAR,WAAT;AACd,QAAGC,OAAO,GAAG,CAAb,EAAgBL,SAAS,eAAQK,OAAR,aAAT;AAChB,QAAGL,SAAS,KAAK,iBAAjB,EAAoCA,SAAS,GAAG,qBAAZ;AACrC,GATD,MASO;AACLA,IAAAA,SAAS,GAAG,kBAAZ;AACD;;AAED,SAAOA,SAAP;AACD;;AAED,eAAeT,kBAAf","sourcesContent":["import moment from 'moment';\nimport 'moment-precise-range-plugin';\n\nfunction getMomentTimelimit(dateCreated, votingPeriod) {\n  const endTime = moment.utc(dateCreated).local().add(votingPeriod, 'hours');\n  const currentTime = moment.utc(new Date()).local();\n  let timelimit = 'Voting ends in:';\n\n  if (endTime > currentTime) {\n    const diff = moment.preciseDiff(endTime, currentTime, true);\n    const days = diff.days;\n    const hours = diff.hours;\n    const minutes = diff.minutes;\n    if(days > 0) timelimit += ` ${days} days`;\n    if(hours > 0) timelimit += ` ${hours} hours`;\n    if(minutes > 0) timelimit += ` ${minutes} minutes`;\n    if(timelimit === 'Voting ends in:') timelimit = ' less than 1 minute';\n  } else {\n    timelimit = 'Voting has ended';\n  }\n\n  return timelimit;\n}\n\nexport default getMomentTimelimit;"]},"metadata":{},"sourceType":"module"}