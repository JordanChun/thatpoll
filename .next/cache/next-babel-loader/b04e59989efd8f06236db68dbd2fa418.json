{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faMinus, faArrowUp, faChevronUp, faTrash, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router'; //import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n// function ToggleHistoryCard({ children, eventKey }) {\n//   const decoratedOnClick = useAccordionToggle(eventKey);\n//   return (\n//     <span onClick={decoratedOnClick}>\n//       {children}\n//     </span>\n//   );\n// }\n\nfunction VoteHistory() {\n  var _useState = useState([]),\n      history = _useState[0],\n      setHistory = _useState[1];\n\n  function getHistory() {\n    // get history from localstorage\n    if (localStorage.voteHistory) {\n      var voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      return voteHistory;\n    }\n\n    return [];\n  }\n\n  function deleteHistory(e) {\n    e.stopPropagation(); // delete one item from history\n\n    if (localStorage.voteHistory) {\n      var index = e.currentTarget.dataset[\"index\"];\n      console.log(index);\n      var voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      voteHistory.splice(index, 1);\n      localStorage.voteHistory = _JSON$stringify(voteHistory);\n      return voteHistory;\n    }\n  }\n\n  function clearHistory() {\n    //clear all history\n    if (localStorage.voteHistory) {\n      localStorage.removeItem('voteHistory');\n    }\n\n    return [];\n  }\n\n  function redirectToPoll(url) {\n    Router.push(\"/poll?slug=\".concat(url), \"/poll/\".concat(url));\n  }\n\n  useEffect(function () {\n    setHistory(getHistory());\n  }, []);\n  return __jsx(Accordion, {\n    defaultActiveKey: \"0\"\n  }, __jsx(Card, {\n    className: \"vote-history\"\n  }, __jsx(Card.Header, null, __jsx(\"span\", null, \"Vote History\"), __jsx(\"span\", {\n    onClick: function onClick() {\n      return setHistory(clearHistory());\n    },\n    title: \"Clear History\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faTrashAlt\n  }))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\"\n  }, history.length > 0 ? __jsx(ListGroup, {\n    variant: \"flush\"\n  }, history.map(function (poll, i) {\n    return __jsx(ListGroup.Item, {\n      key: i,\n      onClick: function onClick() {\n        return redirectToPoll(poll.url);\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/poll',\n        query: {\n          slug: poll.url\n        }\n      },\n      as: \"/poll/\".concat(poll.url)\n    }, __jsx(\"a\", {\n      title: poll.title,\n      onClick: function onClick(e) {\n        e.stopPropagation();\n      }\n    }, poll.title)), __jsx(\"span\", {\n      onClick: function onClick(e) {\n        return setHistory(deleteHistory(e));\n      },\n      \"data-index\": i\n    }, __jsx(FontAwesomeIcon, {\n      icon: faTimes\n    })));\n  })) : __jsx(ListGroup, {\n    variant: \"flush\"\n  }, __jsx(ListGroupItem, null, __jsx(\"i\", null, \"No history...\"))))));\n}\n\nexport default VoteHistory;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/VoteHistory.js"],"names":["Card","ListGroup","Link","FontAwesomeIcon","faTimes","faMinus","faArrowUp","faChevronUp","faTrash","faTrashAlt","ListGroupItem","Accordion","useState","useEffect","Router","VoteHistory","history","setHistory","getHistory","localStorage","voteHistory","JSON","parse","getItem","deleteHistory","e","stopPropagation","index","currentTarget","dataset","console","log","splice","clearHistory","removeItem","redirectToPoll","url","push","length","map","poll","i","pathname","query","slug","title"],"mappings":"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","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faMinus, faArrowUp, faChevronUp, faTrash, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\n//import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\n// function ToggleHistoryCard({ children, eventKey }) {\n//   const decoratedOnClick = useAccordionToggle(eventKey);\n\n//   return (\n//     <span onClick={decoratedOnClick}>\n//       {children}\n//     </span>\n//   );\n// }\n\n\nfunction VoteHistory() {\n  const [history, setHistory] = useState([]);\n\n  function getHistory() {\n    // get history from localstorage\n    if (localStorage.voteHistory) {\n      const voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n      return voteHistory;\n    }\n    return [];\n  }\n\n  function deleteHistory(e) {\n    e.stopPropagation();\n  // delete one item from history\n  if (localStorage.voteHistory) {\n    const index = e.currentTarget.dataset[\"index\"];\n    console.log(index)\n    let voteHistory = JSON.parse(localStorage.getItem('voteHistory'));\n    voteHistory.splice(index, 1);\n    localStorage.voteHistory = JSON.stringify(voteHistory);\n    return voteHistory;\n  }\n}\n\n\nfunction clearHistory() {\n  //clear all history\n  if (localStorage.voteHistory) {\n    localStorage.removeItem('voteHistory');\n  }\n  return [];\n}\n\nfunction redirectToPoll(url) {\n  Router.push(`/poll?slug=${url}`, `/poll/${url}`);\n}\n\n  useEffect(() => {\n    setHistory(getHistory());\n  }, []);\n\n\n  return (\n    <Accordion defaultActiveKey=\"0\">\n      <Card className='vote-history'>\n        <Card.Header>\n          <span>Vote History</span>\n          <span onClick={() => setHistory(clearHistory())} title='Clear History'>\n            <FontAwesomeIcon icon={faTrashAlt} />\n          </span>\n          {/*\n            <ToggleHistoryCard eventKey='0'>\n              <FontAwesomeIcon icon={faChevronUp} />\n            </ToggleHistoryCard>\n            */\n          }\n        </Card.Header>\n      <Accordion.Collapse eventKey=\"0\">\n        { history.length > 0 ?\n          <ListGroup variant=\"flush\">\n            {history.map((poll, i) => (\n              <ListGroup.Item key={i} onClick={() => redirectToPoll(poll.url)}>\n                <Link href={{ pathname: '/poll', query: { slug: poll.url } }} as={`/poll/${poll.url}`}>\n                  <a title={poll.title} onClick={e => {e.stopPropagation()}}>{poll.title}</a>\n                </Link>\n                <span onClick={(e) => setHistory(deleteHistory(e))} data-index={i}>\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </ListGroup.Item>\n            ))}\n          </ListGroup> \n        : \n        <ListGroup variant='flush'>\n            <ListGroupItem>\n              <i>No history...</i>\n            </ListGroupItem>\n          </ListGroup>\n        }\n      </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  )\n}\n\nexport default VoteHistory;"]},"metadata":{},"sourceType":"module"}