{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport Cookies from 'js-cookie';\n\nclass MainHeaderSettings extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: 'light'\n    };\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  componentDidMount() {\n    // get theme\n    // if theme not light or dark set theme to light and set cookie\n    let theme = Cookies.get('theme');\n\n    if (theme !== 'light' && theme !== 'dark') {\n      theme = 'light';\n      Cookies.set('theme', theme, {\n        expires: 365\n      });\n    } else {\n      this.setState({\n        theme\n      });\n    }\n  }\n\n  toggleTheme() {\n    let theme = Cookies.get('theme');\n    theme = theme === 'light' ? 'dark' : 'light';\n    Cookies.set('theme', theme, {\n      expires: 365\n    });\n    document.documentElement.setAttribute('data-theme', theme);\n    this.setState({\n      theme\n    });\n  }\n\n  render() {\n    const {\n      className,\n      style\n    } = this.props;\n    const {\n      theme\n    } = this.state;\n    return __jsx(\"div\", {\n      className: className,\n      style: style\n    }, __jsx(\"h6\", null, \"Settings\"), __jsx(\"div\", {\n      className: \"dropdown-divider\"\n    }), __jsx(\"div\", null, __jsx(\"div\", null, \"Theme: \", theme === 'light' ? 'Light' : 'Dark'), __jsx(Form, null, __jsx(Form.Check, {\n      id: \"switch-theme\",\n      type: \"switch\",\n      label: \"\",\n      onChange: this.toggleTheme,\n      checked: theme === 'light' ? false : true\n    }))));\n  }\n\n}\n\nexport default MainHeaderSettings;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/layout/MainHeaderSettings.js"],"names":["Form","FontAwesomeIcon","faSun","faMoon","Cookies","MainHeaderSettings","React","Component","constructor","props","context","state","theme","toggleTheme","bind","componentDidMount","get","set","expires","setState","document","documentElement","setAttribute","render","className","style"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mCAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,kBAAN,SAAiCC,KAAK,CAACC,SAAvC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA,QAAIH,KAAK,GAAGR,OAAO,CAACY,GAAR,CAAY,OAAZ,CAAZ;;AACA,QAAIJ,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,MAAnC,EAA2C;AACzCA,MAAAA,KAAK,GAAG,OAAR;AACAR,MAAAA,OAAO,CAACa,GAAR,CAAY,OAAZ,EAAqBL,KAArB,EAA4B;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAA5B;AACD,KAHD,MAGO;AACL,WAAKC,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD;AACF;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAID,KAAK,GAAGR,OAAO,CAACY,GAAR,CAAY,OAAZ,CAAZ;AACAJ,IAAAA,KAAK,GAAGA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAArC;AACAR,IAAAA,OAAO,CAACa,GAAR,CAAY,OAAZ,EAAqBL,KAArB,EAA4B;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAA5B;AACAE,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoDV,KAApD;AACA,SAAKO,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAuB,KAAKhB,KAAlC;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,WACE;AAAK,MAAA,SAAS,EAAEa,SAAhB;AAA2B,MAAA,KAAK,EAAEC;AAAlC,OACE,6BADF,EAEE;AAAK,MAAA,SAAS,EAAC;AAAf,MAFF,EAGE,mBACE,8BACUb,KAAK,KAAK,OAAV,GAAoB,OAApB,GAA8B,MADxC,CADF,EAIE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,EAHR;AAIE,MAAA,QAAQ,EAAE,KAAKC,WAJjB;AAKE,MAAA,OAAO,EAAED,KAAK,KAAK,OAAV,GAAoB,KAApB,GAA4B;AALvC,MADF,CAJF,CAHF,CADF;AAqBD;;AAxD8C;;AA4DjD,eAAeP,kBAAf","sourcesContent":["import Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport Cookies from 'js-cookie';\n\nclass MainHeaderSettings extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    \n    this.state = {\n      theme: 'light'\n    };\n    \n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n  \n  componentDidMount() {\n    // get theme\n    // if theme not light or dark set theme to light and set cookie\n    let theme = Cookies.get('theme');\n    if (theme !== 'light' && theme !== 'dark') {\n      theme = 'light';\n      Cookies.set('theme', theme, { expires: 365 });\n    } else {\n      this.setState({ theme });\n    }\n  }\n  \n  toggleTheme() {\n    let theme = Cookies.get('theme');\n    theme = theme === 'light' ? 'dark' : 'light';\n    Cookies.set('theme', theme, { expires: 365 });\n    document.documentElement.setAttribute('data-theme', theme)\n    this.setState({ theme });\n  }\n\n  render() {\n    const { className, style } = this.props;\n    const { theme } = this.state;\n\n    return (\n      <div className={className} style={style}>\n        <h6>Settings</h6>\n        <div className=\"dropdown-divider\"></div>\n        <div>\n          <div>\n            Theme: {theme === 'light' ? 'Light' : 'Dark' }\n          </div>\n          <Form>\n            <Form.Check \n              id='switch-theme'\n              type=\"switch\"\n              label=''\n              onChange={this.toggleTheme}\n              checked={theme === 'light' ? false : true }\n            />\n          </Form>\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default MainHeaderSettings;"]},"metadata":{},"sourceType":"module"}