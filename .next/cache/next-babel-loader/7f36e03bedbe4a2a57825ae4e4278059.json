{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard, faShare } from '@fortawesome/free-solid-svg-icons';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nfunction ShareButton(props) {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: showToolTip,\n    1: setShowToolTip\n  } = useState(false);\n  const target = useRef(null);\n\n  function copyToClipboard(e) {\n    console.log(target);\n    target.current.select();\n    target.current.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n    setShowToolTip(true);\n    setTimeout(() => {\n      setShowToolTip(false);\n    }, 1200);\n  }\n\n  return __jsx(\"div\", {\n    className: \"share-poll\"\n  }, !show ? __jsx(Button, {\n    variant: \"simple\",\n    size: \"sm\",\n    onClick: () => setShow(!show),\n    className: \"share-btn\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faShare\n  }), \" Share\") : __jsx(InputGroup, {\n    size: \"sm\"\n  }, __jsx(FormControl, {\n    readOnly: true,\n    value: props.url,\n    ref: target\n  }), __jsx(Overlay, {\n    target: target.current,\n    show: showToolTip,\n    placement: \"top\"\n  }, props => __jsx(Tooltip, _extends({\n    id: \"tooltip-copied\"\n  }, props, {\n    show: showToolTip.toString()\n  }), \"Copied!\")), __jsx(InputGroup.Append, null, __jsx(Button, {\n    variant: \"grey-blue\",\n    onClick: e => copyToClipboard(e)\n  }, __jsx(FontAwesomeIcon, {\n    icon: faClipboard\n  }), \" Copy\"))));\n}\n\nexport default ShareButton;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/ShareButton.js"],"names":["useState","useRef","FontAwesomeIcon","faClipboard","faShare","InputGroup","Button","FormControl","Row","Col","Overlay","Tooltip","ShareButton","props","show","setShow","showToolTip","setShowToolTip","target","copyToClipboard","e","console","log","current","select","setSelectionRange","document","execCommand","setTimeout","url","toString"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,mCAArC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACgB,WAAD;AAAA,OAAcC;AAAd,MAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMkB,MAAM,GAAGjB,MAAM,CAAC,IAAD,CAArB;;AAEA,WAASkB,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,IAAAA,MAAM,CAACK,OAAP,CAAeC,MAAf;AACAN,IAAAA,MAAM,CAACK,OAAP,CAAeE,iBAAf,CAAiC,CAAjC,EAAoC,KAApC;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AACAV,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAW,IAAAA,UAAU,CAAC,MAAM;AACfX,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,CAACH,IAAD,GACF,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,IAAI,EAAC,IAA9B;AAAmC,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CAAzD;AAAkE,IAAA,SAAS,EAAC;AAA5E,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV;AAAvB,IADF,WADE,GAIF,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC;AAAjB,KACE,MAAC,WAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,EAAES,KAAK,CAACgB,GAFf;AAGE,IAAA,GAAG,EAAEX;AAHP,IADF,EAME,MAAC,OAAD;AAAS,IAAA,MAAM,EAAEA,MAAM,CAACK,OAAxB;AAAiC,IAAA,IAAI,EAAEP,WAAvC;AAAoD,IAAA,SAAS,EAAC;AAA9D,KACGH,KAAK,IACJ,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC;AAAZ,KAAiCA,KAAjC;AAAwC,IAAA,IAAI,EAAEG,WAAW,CAACc,QAAZ;AAA9C,gBAFJ,CANF,EAaE,MAAC,UAAD,CAAY,MAAZ,QACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAGV,CAAD,IAAOD,eAAe,CAACC,CAAD;AAA3D,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEjB;AAAvB,IADF,UADF,CAbF,CALF,CADF;AA4BD;;AAGD,eAAeS,WAAf","sourcesContent":["import { useState, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard, faShare } from '@fortawesome/free-solid-svg-icons';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nfunction ShareButton(props) {\n  const [show, setShow] = useState(false);\n  const [showToolTip, setShowToolTip] = useState(false);\n  const target = useRef(null);\n\n  function copyToClipboard(e) {\n    console.log(target)\n    target.current.select();\n    target.current.setSelectionRange(0, 99999); \n    document.execCommand(\"copy\");\n    setShowToolTip(true)\n    setTimeout(() => {\n      setShowToolTip(false);\n    }, 1200)\n  }\n\n  return (\n    <div className='share-poll'>\n      { !show ?\n      <Button variant=\"simple\" size='sm' onClick={() => setShow(!show)} className='share-btn'>\n        <FontAwesomeIcon icon={faShare} /> Share\n      </Button> : \n      <InputGroup size='sm'>\n        <FormControl\n          readOnly\n          value={props.url}\n          ref={target} \n        />\n        <Overlay target={target.current} show={showToolTip} placement=\"top\">\n          {props => (\n            <Tooltip id=\"tooltip-copied\" {...props} show={showToolTip.toString()}>\n              Copied!\n            </Tooltip>\n          )}\n        </Overlay>\n        <InputGroup.Append>\n          <Button variant=\"grey-blue\" onClick={(e) => copyToClipboard(e)}>\n            <FontAwesomeIcon icon={faClipboard}/> Copy\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n      }\n    </div>\n  )\n}\n\n\nexport default ShareButton;"]},"metadata":{},"sourceType":"module"}