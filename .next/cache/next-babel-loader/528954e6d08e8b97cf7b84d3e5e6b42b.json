{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Pagination from 'react-bootstrap/Pagination';\nimport Link from 'next/link';\n\nconst PollPagination = props => {\n  let active = props.active;\n  let items = [];\n  let offset = 0;\n\n  if (active > 3) {\n    offset = active - 3;\n    items.push(__jsx(\"li\", {\n      className: \"page-item\",\n      key: \"prev\"\n    }, __jsx(Link, {\n      href: {\n        pathname: '/page',\n        query: {\n          num: active - 1\n        }\n      },\n      as: `/page/${active - 1}`\n    }, __jsx(\"a\", {\n      className: \"page-link\",\n      role: \"button\"\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\u2039\"), __jsx(\"span\", {\n      className: \"sr-only\"\n    }, \"Previous\")))));\n  }\n\n  const totalItems = props.totalItems;\n  const totalPages = Math.ceil(totalItems / 10);\n  active = Math.min(Math.max(active, 1), totalPages); // max offset = total pages - max pagination items\n\n  offset = Math.min(Math.max(offset, 0), Math.max(totalPages - 5, 0)); //offset = Math.min(Math.max(offset, 0), (totalPages - 5));\n\n  for (let i = 1; i <= 5; i++) {\n    if (i > totalPages) break;\n\n    if (i + offset === active) {\n      items.push(__jsx(\"li\", {\n        className: \"page-item active\",\n        key: i\n      }, __jsx(\"span\", {\n        className: \"page-link\"\n      }, __jsx(Link, {\n        href: {\n          pathname: '/page',\n          query: {\n            num: i + offset\n          }\n        },\n        as: `/page/${i + offset}`\n      }, __jsx(\"a\", null, i + offset)), __jsx(\"span\", {\n        className: \"sr-only\"\n      }, \"(current)\"))));\n    } else {\n      items.push(__jsx(\"li\", {\n        className: \"page-item\",\n        key: i\n      }, __jsx(Link, {\n        href: {\n          pathname: '/page',\n          query: {\n            num: i + offset\n          }\n        },\n        as: `/page/${i + offset}`\n      }, __jsx(\"a\", {\n        className: \"page-link\"\n      }, i + offset))));\n    }\n  }\n  /*\n   for (let i = 1; i <= 5; i++) {\n    items.push(\n      <Pagination.Item key={i} active={(i+offset) === active}>\n        <Link href={{ pathname: '/page', query: { num: i + offset } }} as={`/page/${i + offset}`}>\n          <a>{i + offset}</a>\n        </Link>\n      </Pagination.Item>\n    );\n  }\n  */\n\n\n  if (active < totalPages - 2) {\n    items.push(__jsx(\"li\", {\n      className: \"page-item\",\n      key: \"next\"\n    }, __jsx(Link, {\n      href: {\n        pathname: '/page',\n        query: {\n          num: active + 1\n        }\n      },\n      as: `/page/${active + 1}`\n    }, __jsx(\"a\", {\n      className: \"page-link\",\n      role: \"button\"\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\u203A\"), __jsx(\"span\", {\n      className: \"sr-only\"\n    }, \"Next\")))));\n  }\n\n  return __jsx(Pagination, null, items);\n};\n\nexport default PollPagination;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/components/PollPagination.js"],"names":["Pagination","Link","PollPagination","props","active","items","offset","push","pathname","query","num","totalItems","totalPages","Math","ceil","min","max","i"],"mappings":"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","sourcesContent":["import Pagination from 'react-bootstrap/Pagination';\nimport Link from 'next/link';\n\nconst PollPagination = props => {\n  let active = props.active;\n  let items = [];\n  let offset = 0;\n\n  if (active > 3) {\n    offset = active - 3;\n    items.push(\n      <li className='page-item' key='prev'>\n        <Link href={{ pathname: '/page', query: { num: active - 1 } }} as={`/page/${active - 1}`}>\n          <a className=\"page-link\" role=\"button\">\n            <span aria-hidden=\"true\">‹</span>\n            <span className=\"sr-only\">Previous</span>\n          </a>\n        </Link>\n      </li>\n    )\n  }\n  \n  const totalItems = props.totalItems;\n  const totalPages = Math.ceil(totalItems/10);\n  active = Math.min(Math.max(active, 1), totalPages);\n  // max offset = total pages - max pagination items\n  offset = Math.min(Math.max(offset, 0), Math.max((totalPages - 5), 0));\n  //offset = Math.min(Math.max(offset, 0), (totalPages - 5));\n  \n\n  for (let i = 1; i <= 5; i++) {\n    if (i > totalPages) break;\n    if ((i + offset) === active) {\n      items.push(\n        <li className=\"page-item active\" key={i}>\n          <span className=\"page-link\">\n            <Link href={{ pathname: '/page', query: { num: i + offset } }} as={`/page/${i + offset}`}>\n              <a>{i + offset}</a>\n            </Link>\n            <span className=\"sr-only\">(current)</span>\n          </span>\n        </li>\n      );\n    } else {\n      items.push(\n        <li className=\"page-item\" key={i}>\n          <Link href={{ pathname: '/page', query: { num: i + offset } }} as={`/page/${i + offset}`}>\n            <a className=\"page-link\">{i + offset}</a>\n          </Link>\n        </li>\n      )\n    }\n  }\n\n  /*\n\n  for (let i = 1; i <= 5; i++) {\n    items.push(\n      <Pagination.Item key={i} active={(i+offset) === active}>\n        <Link href={{ pathname: '/page', query: { num: i + offset } }} as={`/page/${i + offset}`}>\n          <a>{i + offset}</a>\n        </Link>\n      </Pagination.Item>\n    );\n  }\n  */ \n\n  if (active < totalPages - 2) {\n    items.push(\n      <li className='page-item' key='next'>\n        <Link href={{ pathname: '/page', query: { num: active + 1 } }} as={`/page/${active + 1}`}>\n          <a className=\"page-link\" role=\"button\">\n            <span aria-hidden=\"true\">›</span>\n            <span className=\"sr-only\">Next</span>\n          </a>\n        </Link>\n      </li>\n    )\n  }\n\n  return (\n    <Pagination>\n      {items}\n    </Pagination>\n  )\n}\n\nexport default PollPagination;"]},"metadata":{},"sourceType":"module"}