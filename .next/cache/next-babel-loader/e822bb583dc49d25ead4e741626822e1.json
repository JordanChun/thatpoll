{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/Layout';\nimport PollPreview from '../components/PollPreview';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport { withRouter } from 'next/router';\nimport CategoriesList from '../helpers/CategoriesList'; //TO DO ##############################################\n//Validate Poll Inputs\n\nconst visibilityTooltip = props => __jsx(\"div\", _extends({}, props, {\n  style: _objectSpread({\n    maxWidth: '400px',\n    backgroundColor: '#1c2c40',\n    padding: '1rem',\n    color: '#e6e6e6',\n    borderRadius: '0.25rem'\n  }, props.style)\n}), \"Set whether to allow the public to see this poll or keep it private. Only those with the URL will be able to access the poll if set private.\");\n\nconst votingPeriodTooltip = props => __jsx(\"div\", _extends({}, props, {\n  style: _objectSpread({\n    maxWidth: '400px',\n    backgroundColor: '#1c2c40',\n    padding: '1rem',\n    color: '#e6e6e6',\n    borderRadius: '0.25rem'\n  }, props.style)\n}), \"Set in hours when the poll will expire.\");\n\nfunction validatePollInput(pollDataObj) {\n  let choices = [pollDataObj.choice1, pollDataObj.choice2];\n\n  if (pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n\n  if (pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod,\n    category: pollDataObj.category\n  };\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      category: 0,\n      error: false,\n      timelimit: 'Voting ends in: 6 hours'\n    };\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateTimePeriod = this.updateTimePeriod.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  updateCategory(e) {\n    this.setState({\n      category: e.target.selectedIndex\n    });\n  }\n\n  visibilityUpdate(e) {\n    this.setState({\n      visibility: e.target.value\n    });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const {\n      origin\n    } = absoluteUrl(req);\n    const pollData = validatePollInput(this.state);\n\n    try {\n      const res = await fetch(`${origin}/api/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Origin': 'statmix'\n        },\n        body: _JSON$stringify(pollData)\n      });\n      const data = await res.json();\n\n      if (data.message === 'success') {\n        Router.push(`/poll/${data.url}`);\n      } else {\n        this.setState({\n          error: true\n        });\n        window.scrollTo({\n          top: 56,\n          left: 0,\n          behavior: 'smooth'\n        });\n      } //console.log(data);\n\n    } catch (err) {//console.log(err)\n    }\n  }\n\n  updateTimePeriod(e) {\n    const endTime = moment(this.state.dateCreated, 'YYYY-MM-DD HH:mm:ss').add(e.target.value, 'hours');\n    const currentTime = moment(new Date(), 'YYYY-MM-DD HH:mm:ss');\n    let timelimit = 'Voting ends in:';\n    const diff = moment.preciseDiff(endTime, currentTime, true);\n    const days = diff.days;\n    const hours = diff.hours;\n    const minutes = diff.minutes;\n    if (days > 0) timelimit += ` ${days} days`;\n    if (hours > 0) timelimit += ` ${hours} hours`;\n    if (minutes > 0) timelimit += ` ${minutes} minutes`;\n    this.setState({\n      [e.target.name]: e.target.value,\n      timelimit: timelimit\n    });\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choice1,\n      choice2,\n      choice3,\n      choice4,\n      votingPeriod,\n      error\n    } = this.state;\n    return __jsx(Layout, {\n      pageTitle: \"Create Poll\",\n      pageDesc: \"Create public or private polls. Share with friends, communties and gather data.\",\n      path: this.props.router.asPath\n    }, __jsx(\"h4\", {\n      className: \"page-header\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPoll\n    }), \" Create Poll\"), __jsx(\"hr\", null), error ? __jsx(Alert, {\n      variant: \"danger\"\n    }, __jsx(\"b\", null, \"Error submitting poll\")) : null, __jsx(Form, {\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit\n    }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Title\"), __jsx(Form.Control, {\n      value: title,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"title\",\n      maxLength: \"100\",\n      required: true\n    })), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Description (Optional)\"), __jsx(Form.Control, {\n      value: desc,\n      onChange: this.inputUpdate,\n      style: {\n        'maxHeight': '144px',\n        minHeight: '72px'\n      },\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"desc\",\n      maxLength: \"400\"\n    }), __jsx(Form.Text, null, \"Characters remaining: \", 400 - desc.length)), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #1\"), __jsx(Form.Control, {\n      value: choice1,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice1\",\n      maxLength: \"50\",\n      required: true\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #2\"), __jsx(Form.Control, {\n      value: choice2,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice2\",\n      maxLength: \"50\",\n      required: true\n    }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #3 (Optional)\"), __jsx(Form.Control, {\n      value: choice3,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice3\",\n      maxLength: \"50\"\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #4 (Optional)\"), __jsx(Form.Control, {\n      value: choice4,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice4\",\n      maxLength: \"50\"\n    }))), __jsx(\"hr\", null), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Visibility\", \" \", __jsx(OverlayTrigger, {\n      placement: \"top-start\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: visibilityTooltip\n    }, __jsx(FontAwesomeIcon, {\n      icon: faQuestionCircle\n    }))), __jsx(Form.Check, {\n      onClick: this.visibilityUpdate,\n      type: \"radio\",\n      label: \"Public\",\n      name: \"visibility\",\n      value: \"public\",\n      defaultChecked: true\n    }), __jsx(Form.Check, {\n      onClick: this.visibilityUpdate,\n      type: \"radio\",\n      label: \"Private\",\n      name: \"visibility\",\n      value: \"private\"\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Voting Period (hours)\", \" \", __jsx(OverlayTrigger, {\n      placement: \"top-start\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: votingPeriodTooltip\n    }, __jsx(FontAwesomeIcon, {\n      icon: faQuestionCircle\n    }))), __jsx(Form.Control, {\n      value: votingPeriod,\n      onChange: this.updateTimePeriod,\n      style: {\n        maxWidth: '200px'\n      },\n      type: \"number\",\n      min: \"6\",\n      max: \"72\",\n      name: \"votingPeriod\"\n    }), __jsx(Form.Text, null, \"6h - 72h\"))), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Category\"), __jsx(Form.Control, {\n      onChange: this.updateCategory,\n      as: \"select\",\n      name: \"category\"\n    }, __jsx(\"option\", null, \"Select a category\"), CategoriesList.map((category, i) => __jsx(\"option\", {\n      key: i\n    }, category)))), __jsx(\"div\", {\n      className: \"poll-preview\"\n    }, __jsx(\"h4\", {\n      className: \"page-header\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faEye\n    }), \" Preview\"), __jsx(\"hr\", null), __jsx(PollPreview, this.state)), __jsx(\"hr\", null), __jsx(Form.Group, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '2rem'\n      }\n    }, __jsx(Button, {\n      variant: \"light-blue\",\n      type: \"submit\",\n      style: {\n        width: '200px'\n      }\n    }, \"Create Poll\"))));\n  }\n\n}\n\nexport default withRouter(CreatePoll);","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/pages/create-poll.js"],"names":["Layout","PollPreview","Form","Button","Col","Alert","OverlayTrigger","FontAwesomeIcon","faPoll","faQuestionCircle","faEye","Router","absoluteUrl","moment","withRouter","CategoriesList","visibilityTooltip","props","maxWidth","backgroundColor","padding","color","borderRadius","style","votingPeriodTooltip","validatePollInput","pollDataObj","choices","choice1","choice2","choice3","push","choice4","pollData","title","desc","visibility","votingPeriod","category","CreatePoll","React","Component","constructor","state","dateCreated","Date","error","timelimit","inputUpdate","bind","visibilityUpdate","handleSubmit","updateTimePeriod","updateCategory","e","setState","target","name","value","selectedIndex","req","preventDefault","origin","res","fetch","method","headers","body","data","json","message","url","window","scrollTo","top","left","behavior","err","endTime","add","currentTime","diff","preciseDiff","days","hours","minutes","render","router","asPath","minHeight","length","show","hide","map","i","display","justifyContent","marginTop","width"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\nimport PollPreview from '../components/PollPreview';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport { withRouter } from 'next/router';\nimport CategoriesList from '../helpers/CategoriesList';\n\n//TO DO ##############################################\n//Validate Poll Inputs\n\nconst visibilityTooltip = props => (\n  <div\n    {...props}\n    style={{\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '1rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem',\n      ...props.style,\n    }}\n  >\n    Set whether to allow the public to see this poll or keep it private.\n    Only those with the URL will be able to access the poll if set private.\n  </div>\n);\n\nconst votingPeriodTooltip = props => (\n  <div\n    {...props}\n    style={{\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '1rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem',\n      ...props.style,\n    }}\n  >\n    Set in hours when the poll will expire.\n  </div>\n);\n\nfunction validatePollInput(pollDataObj) {\n  let choices = [pollDataObj.choice1, pollDataObj.choice2];\n  if(pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n  if(pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod,\n    category: pollDataObj.category\n  }\n\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      category: 0,\n      error: false,\n      timelimit: 'Voting ends in: 6 hours'\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateTimePeriod = this.updateTimePeriod.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  updateCategory(e) {\n    this.setState({ category: e.target.selectedIndex });\n  }\n\n  visibilityUpdate(e) {\n    this.setState({ visibility: e.target.value });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const { origin } = absoluteUrl(req);\n    const pollData = validatePollInput(this.state);\n    try {\n      const res = await fetch(`${origin}/api/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Origin': 'statmix'\n        },\n        body: JSON.stringify(pollData)\n      });\n      const data = await res.json();\n      if(data.message === 'success') {\n        Router.push(`/poll/${data.url}`);\n      } else {\n        this.setState({ error: true });\n        window.scrollTo({\n          top: 56,\n          left: 0,\n          behavior: 'smooth'\n        });\n      }\n      //console.log(data);\n    } catch(err) {\n      //console.log(err)\n    }\n  }\n\n  updateTimePeriod(e) {\n    const endTime = moment(this.state.dateCreated,'YYYY-MM-DD HH:mm:ss').add(e.target.value, 'hours');\n    const currentTime = moment(new Date(),'YYYY-MM-DD HH:mm:ss');\n    let timelimit = 'Voting ends in:';\n    const diff = moment.preciseDiff(endTime, currentTime, true);\n    const days = diff.days;\n    const hours = diff.hours;\n    const minutes = diff.minutes;\n    if(days > 0) timelimit += ` ${days} days`;\n    if(hours > 0) timelimit += ` ${hours} hours`;\n    if(minutes > 0) timelimit += ` ${minutes} minutes`;\n    this.setState({\n      [e.target.name]: e.target.value,\n      timelimit: timelimit\n    })\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choice1,\n      choice2,\n      choice3,\n      choice4,\n      votingPeriod,\n      error\n    } = this.state;\n\n    return (\n      <Layout\n        pageTitle='Create Poll'\n        pageDesc='Create public or private polls. Share with friends, communties and gather data.'\n        path={this.props.router.asPath}\n      >\n        <h4 className='page-header'><FontAwesomeIcon icon={faPoll} /> Create Poll</h4>\n        <hr />\n        { error ?\n          <Alert variant='danger'>\n           <b>Error submitting poll</b>\n          </Alert> : null\n        }\n        <Form autoComplete='off' onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>\n              Title\n            </Form.Label>\n            <Form.Control\n              value={title}\n              onChange={this.inputUpdate}\n              type='text' name='title' maxLength='100'\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Description (Optional)\n            </Form.Label>\n            <Form.Control\n              value={desc}\n              onChange={this.inputUpdate}\n              style={{ 'maxHeight': '144px', minHeight: '72px' }}\n              as=\"textarea\" rows=\"3\" name='desc' maxLength='400'\n            />\n            <Form.Text>\n              Characters remaining: {400 - desc.length}\n            </Form.Text>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #1\n              </Form.Label>\n              <Form.Control\n                value={choice1}\n                onChange={this.inputUpdate}\n                type='text' name='choice1' maxLength='50'\n                required\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #2\n              </Form.Label>\n              <Form.Control\n                value={choice2}\n                onChange={this.inputUpdate} \n                type='text' name='choice2' maxLength='50'\n                required\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #3 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice3}\n                onChange={this.inputUpdate}\n                type='text' name='choice3' maxLength='50'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #4 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice4}\n                onChange={this.inputUpdate}\n                type='text'name='choice4' maxLength='50'\n              />\n            </Form.Group>\n          </Form.Row>\n          <hr />\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Visibility{\" \"}\n                <OverlayTrigger\n                    placement=\"top-start\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={visibilityTooltip}>\n                  <FontAwesomeIcon icon={faQuestionCircle} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Public' name='visibility' value='public' defaultChecked\n              />\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Private' name='visibility' value='private'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Voting Period (hours){\" \"}\n                <OverlayTrigger\n                  placement=\"top-start\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={votingPeriodTooltip}\n                >\n                  <FontAwesomeIcon icon={faQuestionCircle} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Control\n                value={votingPeriod}\n                onChange={this.updateTimePeriod}\n                style={{ maxWidth: '200px' }}\n                type='number' min='6' max='72' name='votingPeriod'\n              />\n              <Form.Text>\n                6h - 72h \n              </Form.Text>\n            </Form.Group>\n          </Form.Row>\n          <Form.Group>\n            <Form.Label>\n              Category\n            </Form.Label>\n            <Form.Control\n              onChange={this.updateCategory}\n              as=\"select\"\n              name='category'\n            >\n            <option>Select a category</option>\n            {CategoriesList.map((category, i) => (\n              <option key={i}>{category}</option>\n            ))}\n            </Form.Control>\n          </Form.Group>\n          <div className='poll-preview'>\n            <h4 className='page-header'><FontAwesomeIcon icon={faEye} /> Preview</h4>\n            <hr />\n            <PollPreview {...this.state} />\n          </div>\n          <hr />\n          <Form.Group style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n            <Button \n              variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n              Create Poll\n            </Button>\n          </Form.Group>\n        </Form>\n      </Layout>\n    )\n  }\n}\n\nexport default withRouter(CreatePoll);"]},"metadata":{},"sourceType":"module"}