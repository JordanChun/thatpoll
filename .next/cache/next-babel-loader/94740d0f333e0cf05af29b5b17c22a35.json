{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Transition } from 'react-transition-group';\nimport { useState, useEffect } from 'react';\nvar defaultStyle = {\n  width: 0\n};\n\nvar transitionStyles = function transitionStyles(resultWidth) {\n  var style = {\n    entering: {\n      width: \"\".concat(resultWidth, \"%\")\n    },\n    entered: {\n      width: \"\".concat(resultWidth, \"%\")\n    },\n    exit: {\n      width: 0\n    }\n  };\n  return style;\n};\n\nfunction ResultsBars(props) {\n  var _useState = useState(false),\n      resultsBar = _useState[0],\n      setResultsBar = _useState[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setResultsBar(true);\n    }, 0);\n  }, []);\n  return __jsx(\"div\", null, __jsx(Transition, {\n    \"in\": resultsBar,\n    timeout: 300,\n    appear: true\n  }, function (state) {\n    return __jsx(\"div\", {\n      className: \"results-container\"\n    }, props.results.map(function (result, i) {\n      return __jsx(\"div\", {\n        key: i\n      }, __jsx(\"h6\", null, props.choices[i]), __jsx(\"div\", {\n        className: \"poll-result\"\n      }, __jsx(\"div\", {\n        className: \"result-bar mb-3\",\n        style: _objectSpread({}, defaultStyle, {}, transitionStyles(Math.round(result / props.totalVotes * 100))[state])\n      }, result !== 0 ? __jsx(\"div\", null, __jsx(\"div\", null, result.toLocaleString(), \" votes\"), __jsx(\"div\", null, Math.round(result / props.totalVotes * 100), \"%\")) : __jsx(\"div\", null, __jsx(\"div\", null, \"0 votes\"), __jsx(\"div\", null, \"0%\")))));\n    }));\n  }));\n}\n\nexport default ResultsBars;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/poll/ResultsBars.js"],"names":["Transition","useState","useEffect","defaultStyle","width","transitionStyles","resultWidth","style","entering","entered","exit","ResultsBars","props","resultsBar","setResultsBar","setTimeout","state","results","map","result","i","choices","Math","round","totalVotes","toLocaleString"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,WAAW,EAAI;AACtC,MAAMC,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAE;AAAEJ,MAAAA,KAAK,YAAKE,WAAL;AAAP,KADE;AAEZG,IAAAA,OAAO,EAAG;AAAEL,MAAAA,KAAK,YAAKE,WAAL;AAAP,KAFE;AAGZI,IAAAA,IAAI,EAAE;AAAEN,MAAAA,KAAK,EAAE;AAAT;AAHM,GAAd;AAMA,SAAOG,KAAP;AACD,CARD;;AAUA,SAASI,WAAT,CAAqBC,KAArB,EAA2B;AAAA,kBACWX,QAAQ,CAAC,KAAD,CADnB;AAAA,MAClBY,UADkB;AAAA,MACNC,aADM;;AAGzBZ,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GAJQ,EAIP,EAJO,CAAT;AAMA,SACE,mBACE,MAAC,UAAD;AAAY,UAAID,UAAhB;AAA4B,IAAA,OAAO,EAAE,GAArC;AAA0C,IAAA,MAAM;AAAhD,KACG,UAAAG,KAAK;AAAA,WACJ;AAAK,MAAA,SAAS,EAAC;AAAf,OACKJ,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAkB,UAACC,MAAD,EAASC,CAAT;AAAA,aACjB;AAAK,QAAA,GAAG,EAAEA;AAAV,SACE,kBAAKR,KAAK,CAACS,OAAN,CAAcD,CAAd,CAAL,CADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AACE,QAAA,KAAK,oBACAjB,YADA,MAEAE,gBAAgB,CAACiB,IAAI,CAACC,KAAL,CAAYJ,MAAM,GAACP,KAAK,CAACY,UAAd,GAA4B,GAAvC,CAAD,CAAhB,CAA8DR,KAA9D,CAFA;AADP,SAMCG,MAAM,KAAK,CAAX,GACC,mBACE,mBAAMA,MAAM,CAACM,cAAP,EAAN,WADF,EAEE,mBAAMH,IAAI,CAACC,KAAL,CAAYJ,MAAM,GAACP,KAAK,CAACY,UAAd,GAA4B,GAAvC,CAAN,MAFF,CADD,GAMC,mBACE,6BADF,EAEE,wBAFF,CAZF,CADF,CAFF,CADiB;AAAA,KAAlB,CADL,CADI;AAAA,GADR,CADF,CADF;AAoCD;;AAED,eAAeb,WAAf","sourcesContent":["import { Transition } from 'react-transition-group';\nimport { useState, useEffect } from 'react';\n\nconst defaultStyle = {\n  width: 0,\n}\n\nconst transitionStyles = resultWidth => {\n  const style = {\n    entering: { width: `${resultWidth}%` },\n    entered:  { width: `${resultWidth}%` },\n    exit: { width: 0 }\n  }\n\n  return style\n};\n\nfunction ResultsBars(props){\n  const [resultsBar, setResultsBar] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setResultsBar(true);\n    }, 0)\n  },[]);\n\n  return (\n    <div>\n      <Transition in={resultsBar} timeout={300} appear>\n        {state => (\n          <div className='results-container'>\n              {props.results.map((result, i) => (\n                <div key={i}>\n                  <h6>{props.choices[i]}</h6>\n                  <div className='poll-result'>\n                    <div className='result-bar mb-3'\n                      style={{\n                        ...defaultStyle,\n                        ...transitionStyles(Math.round((result/props.totalVotes) * 100))[state]\n                      }}\n                    >\n                    {result !== 0 ?\n                      <div>\n                        <div>{result.toLocaleString()} votes</div>\n                        <div>{Math.round((result/props.totalVotes) * 100)}%</div>\n                      </div>\n                    : \n                      <div>\n                        <div>0 votes</div>\n                        <div>0%</div>\n                      </div>\n                    }\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        )}\n      </Transition>\n    </div>\n\n  )\n}\n\nexport default ResultsBars;"]},"metadata":{},"sourceType":"module"}