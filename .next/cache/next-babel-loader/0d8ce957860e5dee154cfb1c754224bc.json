{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport PieChart from 'react-minimal-pie-chart';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction ResultsPieChart(props) {\n  const data = [];\n  const labels = [];\n  const colors = ['#28a745', '#3f86a5', '#dc4144', '#9ca02a'];\n\n  for (let i = 0; i < props.results.length; i++) {\n    if (props.results[i] !== 0) {\n      data.push({\n        title: props.choices[i],\n        value: props.results[i],\n        color: colors[i]\n      });\n    }\n\n    labels.push({\n      title: props.choices[i],\n      value: props.results[i],\n      color: colors[i]\n    });\n  }\n\n  let labelPosX = 80;\n\n  if (data.length < 2) {\n    labelPosX = -25;\n  }\n\n  if (data.length === 0) {\n    data.push({\n      title: 'No results',\n      value: 1,\n      color: '#7b7b7b'\n    });\n    labelPosX = 0;\n  }\n\n  return __jsx(\"div\", {\n    className: \"results-container\"\n  }, __jsx(\"div\", {\n    className: \"pie-chart-container\"\n  }, __jsx(Row, {\n    style: {\n      justifyContent: 'center'\n    }\n  }, __jsx(Col, {\n    md: 5,\n    lg: 3\n  }, __jsx(PieChart, {\n    className: \"pie-chart\",\n    animate: true,\n    cx: 50,\n    cy: 50,\n    label: ({\n      data,\n      dataIndex\n    }) => data[0].color !== '#7b7b7b' ? Math.round(data[dataIndex].percentage) + '%' : data[0].title,\n    labelPosition: labelPosX,\n    labelStyle: {\n      fill: 'var(--primaryTextColor)',\n      fontWeight: 600,\n      fontSize: '0.5rem'\n    },\n    data: data,\n    lineWidth: 40\n  })), __jsx(Col, {\n    md: \"auto\",\n    sm: true\n  }, __jsx(\"div\", {\n    className: \"pie-chart-labels\"\n  }, labels.map((data, i) => __jsx(\"div\", {\n    key: i\n  }, __jsx(\"div\", {\n    className: \"label-box\"\n  }), __jsx(\"div\", {\n    className: \"label-data\"\n  }, __jsx(\"h6\", null, data.title), __jsx(\"span\", {\n    className: \"poll-stat\"\n  }, data.value.toLocaleString(), \" votes\")))))))));\n}\n\nexport default ResultsPieChart;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/ResultsPieChart.js"],"names":["PieChart","Row","Col","ResultsPieChart","props","data","labels","colors","i","results","length","push","title","choices","value","color","labelPosX","justifyContent","dataIndex","Math","round","percentage","fill","fontWeight","fontSize","map","toLocaleString"],"mappings":"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","sourcesContent":["import PieChart from 'react-minimal-pie-chart';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction ResultsPieChart(props) {\n  const data = [];\n  const labels = [];\n  const colors = ['#28a745', '#3f86a5', '#dc4144', '#9ca02a'];\n  for (let i = 0; i < props.results.length; i++) {\n    if (props.results[i] !== 0) {\n      data.push({\n        title: props.choices[i],\n        value: props.results[i],\n        color: colors[i]\n      });\n    }\n    labels.push({\n      title: props.choices[i],\n      value: props.results[i],\n      color: colors[i]\n    });\n  }\n\n  let labelPosX = 80;\n  if (data.length < 2) {\n    labelPosX = -25;\n  }\n  if (data.length === 0) {\n    data.push({\n      title: 'No results',\n      value: 1,\n      color: '#7b7b7b'\n    });\n    labelPosX = 0;\n  }\n\n\n  return (\n    <div className='results-container'>\n      <div className='pie-chart-container'>\n        <Row style={{ justifyContent: 'center' }}>\n          <Col md={5} lg={3}>\n           <PieChart\n              className='pie-chart'\n              animate\n              cx={50}\n              cy={50}\n              label={({ data, dataIndex }) =>\n                data[0].color !== '#7b7b7b' ? Math.round(data[dataIndex].percentage) + '%' : data[0].title\n              }\n              labelPosition={labelPosX}\n              labelStyle={{\n                fill: 'var(--primaryTextColor)',\n                fontWeight: 600,\n                fontSize: '0.5rem'\n              }}\n              data={data}\n              lineWidth={40}\n            />\n          \n          </Col>\n          <Col md='auto' sm>\n            <div className='pie-chart-labels'>\n              {labels.map((data, i) => (\n                <div key={i}>\n                  <div className='label-box'></div>\n                  <div className='label-data'>\n                    <h6>{data.title}</h6>\n                    <span className='poll-stat'>{data.value.toLocaleString()} votes</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Col>\n        </Row>\n\n      </div>\n    </div>\n  )\n}\n\nexport default ResultsPieChart;"]},"metadata":{},"sourceType":"module"}