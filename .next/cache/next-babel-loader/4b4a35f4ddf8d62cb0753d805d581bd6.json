{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport CustomDropdownToggle from \"./CustomDropdownToggle\";\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\nclass MainHeaderSettings extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: 'dark'\n    };\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.theme) {\n      let theme = localStorage.getItem('theme');\n      if (theme !== 'dark' && theme !== 'light') theme = 'dark';\n      document.documentElement.setAttribute('data-theme', theme);\n      this.setState({\n        theme\n      });\n    } else {\n      localStorage.setItem('theme', 'dark');\n    }\n  }\n\n  toggleTheme(e) {\n    const theme = this.state.theme === 'light' ? 'dark' : 'light';\n    localStorage.setItem('theme', theme);\n    document.documentElement.setAttribute('data-theme', theme);\n    this.setState({\n      theme\n    });\n  }\n\n  render() {\n    const {\n      className,\n      style\n    } = this.props;\n    const {\n      theme\n    } = this.state;\n    return __jsx(\"div\", {\n      className: className,\n      style: style\n    }, __jsx(\"div\", null, __jsx(\"div\", null, \"Theme\"), __jsx(Form, null, __jsx(Form.Check, {\n      id: \"switch-theme\",\n      type: \"switch\",\n      label: theme === 'dark' ? 'Dark' : 'Light',\n      onChange: this.toggleTheme\n    }))));\n  }\n\n}\n\nexport default MainHeaderSettings;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/components/MainHeaderSettings.js"],"names":["CustomDropdownToggle","Form","Dropdown","FontAwesomeIcon","faCog","MainHeaderSettings","React","Component","constructor","props","context","state","theme","toggleTheme","bind","componentDidMount","localStorage","getItem","document","documentElement","setAttribute","setState","setItem","e","render","className","style"],"mappings":";;AAAA,OAAOA,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,mCAAtB;;AAEA,MAAMC,kBAAN,SAAiCC,KAAK,CAACC,SAAvC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,YAAY,CAACJ,KAAjB,EAAwB;AACtB,UAAIA,KAAK,GAAGI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAIL,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,OAAlC,EAA2CA,KAAK,GAAG,MAAR;AAC3CM,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoDR,KAApD;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KALD,MAKO;AACLI,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACD;AACF;;AAEDT,EAAAA,WAAW,CAACU,CAAD,EAAI;AACb,UAAMX,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,KAAqB,OAArB,GAA+B,MAA/B,GAAwC,OAAtD;AACAI,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BV,KAA9B;AACAM,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoDR,KAApD;AACA,SAAKS,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAuB,KAAKjB,KAAlC;AAEA,UAAM;AAAEG,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,WACE;AAAK,MAAA,SAAS,EAAEc,SAAhB;AAA2B,MAAA,KAAK,EAAEC;AAAlC,OACE,mBACE,2BADF,EAEE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAEd,KAAK,KAAK,MAAV,GAAmB,MAAnB,GAA4B,OAHrC;AAIE,MAAA,QAAQ,EAAE,KAAKC;AAJjB,MADF,CAFF,CADF,CADF;AAgBD;;AAnD8C;;AAuDjD,eAAeR,kBAAf","sourcesContent":["import CustomDropdownToggle from \"./CustomDropdownToggle\";\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\nclass MainHeaderSettings extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      theme: 'dark'\n\n    };\n\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n  \n  componentDidMount() {\n    if (localStorage.theme) {\n      let theme = localStorage.getItem('theme');\n      if (theme !== 'dark' && theme !== 'light') theme = 'dark';\n      document.documentElement.setAttribute('data-theme', theme)\n      this.setState({ theme });\n    } else {\n      localStorage.setItem('theme', 'dark');\n    }\n  }\n\n  toggleTheme(e) {\n    const theme = this.state.theme === 'light' ? 'dark' : 'light';\n    localStorage.setItem('theme', theme);\n    document.documentElement.setAttribute('data-theme', theme)\n    this.setState({ theme });\n  }\n\n  render() {\n    const { className, style } = this.props;\n\n    const { theme } = this.state;\n\n    return (\n      <div className={className} style={style}>\n        <div>\n          <div>Theme</div>\n          <Form>\n            <Form.Check \n              id='switch-theme'\n              type=\"switch\"\n              label={theme === 'dark' ? 'Dark' : 'Light' }\n              onChange={this.toggleTheme}\n            />\n          </Form>\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default MainHeaderSettings;"]},"metadata":{},"sourceType":"module"}