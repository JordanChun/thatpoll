{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport PollPreview from '../components/PollPreview';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url'; //TO DO ##############################################\n//Validate Poll Inputs\n\nfunction validatePollInput(pollDataObj) {\n  let choices = [pollDataObj.choice1, pollDataObj.choice2];\n\n  if (pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n\n  if (pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod\n  };\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date()\n    };\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  visibilityUpdate(e) {\n    this.setState({\n      visibility: e.target.value\n    });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const {\n      origin\n    } = absoluteUrl(req);\n    const pollData = validatePollInput(this.state);\n\n    try {\n      const res = await fetch(`${origin}/api/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify(pollData)\n      });\n      const data = await res.json();\n\n      if (data.message === 'success') {\n        Router.push(`/poll/${data.url}`);\n      }\n\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choice1,\n      choice2,\n      choice3,\n      choice4,\n      votingPeriod\n    } = this.state;\n    return __jsx(Layout, null, __jsx(\"h4\", {\n      className: \"page-header\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPoll\n    }), \" Create Poll\"), __jsx(\"hr\", null), __jsx(Form, {\n      autoComplete: \"off\"\n    }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Title\"), __jsx(Form.Control, {\n      value: title,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"title\",\n      maxLength: \"100\"\n    })), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Description (Optional)\"), __jsx(Form.Control, {\n      value: desc,\n      onChange: this.inputUpdate,\n      style: {\n        'maxHeight': '144px',\n        minHeight: '72px'\n      },\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"desc\",\n      maxLength: \"400\"\n    }), __jsx(Form.Text, null, \"Characters remaining: \", 400 - desc.length)), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #1\"), __jsx(Form.Control, {\n      value: choice1,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice1\",\n      maxLength: \"50\"\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #2\"), __jsx(Form.Control, {\n      value: choice2,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice2\",\n      maxLength: \"50\"\n    }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #3 (Optional)\"), __jsx(Form.Control, {\n      value: choice3,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice3\",\n      maxLength: \"50\"\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Choice #4 (Optional)\"), __jsx(Form.Control, {\n      value: choice4,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"choice4\",\n      maxLength: \"50\"\n    }))), __jsx(\"hr\", null), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Visibility \", __jsx(FontAwesomeIcon, {\n      icon: faQuestionCircle\n    })), __jsx(Form.Check, {\n      onClick: this.visibilityUpdate,\n      type: \"radio\",\n      label: \"Public\",\n      name: \"visibility\",\n      value: \"public\",\n      defaultChecked: true\n    }), __jsx(Form.Check, {\n      onClick: this.visibilityUpdate,\n      type: \"radio\",\n      label: \"Private\",\n      name: \"visibility\",\n      value: \"private\"\n    })), __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Voting Period (hours) \", __jsx(FontAwesomeIcon, {\n      icon: faQuestionCircle\n    })), __jsx(Form.Control, {\n      value: votingPeriod,\n      onChange: this.inputUpdate,\n      style: {\n        maxWidth: '200px'\n      },\n      type: \"number\",\n      min: \"6\",\n      max: \"72\",\n      name: \"votingPeriod\"\n    }), __jsx(Form.Text, null, \"6h - 72h\"))), __jsx(\"div\", {\n      className: \"poll-preview\"\n    }, __jsx(\"h4\", {\n      className: \"page-header\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faEye\n    }), \" Preview\"), __jsx(\"hr\", null), __jsx(PollPreview, this.state)), __jsx(\"hr\", null), __jsx(Form.Group, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '2rem'\n      }\n    }, __jsx(Button, {\n      onClick: this.handleSubmit,\n      variant: \"light-blue\",\n      type: \"submit\",\n      style: {\n        width: '200px'\n      }\n    }, \"Create Poll\"))));\n  }\n\n}\n\nexport default CreatePoll;","map":{"version":3,"sources":["E:\\Users\\Jordan\\Desktop\\statmix\\pages\\create-poll.js"],"names":["Layout","Form","Button","Col","FontAwesomeIcon","faPoll","faQuestionCircle","faEye","PollPreview","Router","absoluteUrl","validatePollInput","pollDataObj","choices","choice1","choice2","choice3","push","choice4","pollData","title","desc","visibility","votingPeriod","CreatePoll","React","Component","constructor","state","dateCreated","Date","inputUpdate","bind","visibilityUpdate","handleSubmit","e","setState","target","name","value","req","preventDefault","origin","res","fetch","method","headers","body","data","json","message","url","console","log","err","render","minHeight","length","maxWidth","display","justifyContent","marginTop","width"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye } from '@fortawesome/free-solid-svg-icons';\nimport PollPreview from '../components/PollPreview';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\n\n//TO DO ##############################################\n//Validate Poll Inputs\n\nfunction validatePollInput(pollDataObj) {\n  let choices = [pollDataObj.choice1, pollDataObj.choice2];\n  if(pollDataObj.choice3 !== '') {\n    choices.push(pollDataObj.choice3);\n  }\n  if(pollDataObj.choice4 !== '') {\n    choices.push(pollDataObj.choice4);\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choices,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod\n  }\n\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      desc: '',\n      choice1: '',\n      choice2: '',\n      choice3: '',\n      choice4: '',\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date()\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  visibilityUpdate(e) {\n    this.setState({ visibility: e.target.value });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const { origin } = absoluteUrl(req);\n    const pollData = validatePollInput(this.state);\n    try {\n      const res = await fetch(`${origin}/api/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(pollData)\n      });\n      const data = await res.json();\n      if(data.message === 'success') {\n        Router.push(`/poll/${data.url}`);\n      }\n      console.log(data);\n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choice1,\n      choice2,\n      choice3,\n      choice4,\n      votingPeriod,\n    } = this.state;\n\n    return (\n      <Layout>\n        <h4 className='page-header'><FontAwesomeIcon icon={faPoll} /> Create Poll</h4>\n        <hr />\n        <Form autoComplete='off'>\n          <Form.Group>\n            <Form.Label>\n              Title\n            </Form.Label>\n            <Form.Control\n              value={title}\n              onChange={this.inputUpdate}\n              type='text' name='title' maxLength='100'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Description (Optional)\n            </Form.Label>\n            <Form.Control\n              value={desc}\n              onChange={this.inputUpdate}\n              style={{ 'maxHeight': '144px', minHeight: '72px' }}\n              as=\"textarea\" rows=\"3\" name='desc' maxLength='400'\n            />\n            <Form.Text>\n              Characters remaining: {400 - desc.length}\n            </Form.Text>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #1\n              </Form.Label>\n              <Form.Control\n                value={choice1}\n                onChange={this.inputUpdate}\n                type='text' name='choice1' maxLength='50'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #2\n              </Form.Label>\n              <Form.Control\n                value={choice2}\n                onChange={this.inputUpdate} \n                type='text' name='choice2' maxLength='50'\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #3 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice3}\n                onChange={this.inputUpdate}\n                type='text' name='choice3' maxLength='50'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Choice #4 (Optional)\n              </Form.Label>\n              <Form.Control\n                value={choice4}\n                onChange={this.inputUpdate}\n                type='text'name='choice4' maxLength='50'\n              />\n            </Form.Group>\n          </Form.Row>\n          <hr />\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Visibility <FontAwesomeIcon icon={faQuestionCircle} />\n              </Form.Label>\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Public' name='visibility' value='public' defaultChecked\n              />\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Private' name='visibility' value='private'\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Voting Period (hours) <FontAwesomeIcon icon={faQuestionCircle} />\n              </Form.Label>\n              <Form.Control\n                value={votingPeriod}\n                onChange={this.inputUpdate}\n                style={{ maxWidth: '200px' }}\n                type='number' min='6' max='72' name='votingPeriod'\n              />\n              <Form.Text>\n                6h - 72h \n              </Form.Text>\n            </Form.Group>\n\n          </Form.Row>\n          <div className='poll-preview'>\n            <h4 className='page-header'><FontAwesomeIcon icon={faEye} /> Preview</h4>\n            <hr />\n            <PollPreview {...this.state} />\n          </div>\n          <hr />\n          <Form.Group style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n            <Button \n              onClick={this.handleSubmit}\n              variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n              Create Poll\n            </Button>\n          </Form.Group>\n        </Form>\n      </Layout>\n    )\n  }\n}\n\nexport default CreatePoll;"]},"metadata":{},"sourceType":"module"}