{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\n\nvar ReportModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportModal, _React$Component);\n\n  function ReportModal(props) {\n    var _this;\n\n    _classCallCheck(this, ReportModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReportModal).call(this, props));\n    _this.state = {\n      reason: '',\n      category: 0,\n      error: false,\n      success: false\n    };\n    _this.inputUpdate = _this.inputUpdate.bind(_assertThisInitialized(_this));\n    _this.updateCategory = _this.updateCategory.bind(_assertThisInitialized(_this));\n    _this.submitReport = _this.submitReport.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReportModal, [{\n    key: \"inputUpdate\",\n    value: function inputUpdate(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"updateCategory\",\n    value: function updateCategory(e) {\n      this.setState({\n        category: e.target.selectedIndex\n      });\n    }\n  }, {\n    key: \"submitReport\",\n    value: function () {\n      var _submitReport = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!(this.state.reason.length <= 0 || this.state.category === 0)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.setState({\n                  error: true\n                });\n                return _context.abrupt(\"return\");\n\n              case 6:\n                _context.prev = 6;\n                _context.next = 9;\n                return fetch(\"\".concat(window.location.origin, \"/api/report\"), {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'X-Origin': 'statmix'\n                  },\n                  body: _JSON$stringify({\n                    reason: this.state.reason,\n                    category: this.state.category,\n                    urlRef: this.props.urlref\n                  })\n                });\n\n              case 9:\n                res = _context.sent;\n                _context.next = 12;\n                return res.json();\n\n              case 12:\n                data = _context.sent;\n\n                if (data.message === 'success') {\n                  this.setState({\n                    error: false,\n                    success: true,\n                    reason: '',\n                    category: 0\n                  }); // display sucess\n                } else {\n                  this.setState({\n                    error: true\n                  }); // display error\n                }\n\n                _context.next = 18;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](6);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 16]]);\n      }));\n\n      function submitReport(_x) {\n        return _submitReport.apply(this, arguments);\n      }\n\n      return submitReport;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          reason = _this$state.reason,\n          error = _this$state.error,\n          success = _this$state.success;\n      return __jsx(Modal, _extends({}, this.props, {\n        size: \"lg\",\n        centered: true,\n        animation: false,\n        dialogClassName: \"modal-report\",\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        }\n      }), __jsx(Modal.Header, {\n        closeButton: true\n      }, __jsx(Modal.Title, null, \"Report\")), __jsx(Modal.Body, null, error ? __jsx(Alert, {\n        variant: \"danger\"\n      }, __jsx(\"b\", null, \"Error submitting report\")) : null, success ? __jsx(Alert, {\n        variant: \"success\"\n      }, __jsx(\"b\", null, __jsx(FontAwesomeIcon, {\n        icon: faCheck\n      }), \" Report Recieved. Thank You\")) : null, __jsx(\"div\", {\n        className: \"report-details mb-3\"\n      }, __jsx(\"h6\", null, \"Poll Title\"), __jsx(\"div\", null, this.props.title)), __jsx(\"p\", null, \"Please describe the reason for this report below.\"), __jsx(Form, {\n        autoComplete: \"off\"\n      }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Category\"), __jsx(Form.Control, {\n        onChange: this.updateCategory,\n        as: \"select\",\n        name: \"category\"\n      }, __jsx(\"option\", null, \"Select a category\"), __jsx(\"option\", null, \"Abuse\"), __jsx(\"option\", null, \"Bug\"), __jsx(\"option\", null, \"Spam\"))), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Reason:\"), __jsx(Form.Control, {\n        value: reason,\n        onChange: this.inputUpdate,\n        style: {\n          'maxHeight': '144px',\n          minHeight: '72px'\n        },\n        as: \"textarea\",\n        rows: \"3\",\n        name: \"reason\",\n        maxLength: \"500\"\n      })))), __jsx(Modal.Footer, null, success ? __jsx(Button, {\n        variant: \"grey-blue\",\n        onClick: this.props.onHide\n      }, \"Close\") : __jsx(Button, {\n        variant: \"light-blue\",\n        type: \"submit\",\n        onClick: this.submitReport\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ReportModal;\n}(React.Component);\n\nReportModal.propTypes = {\n  onHide: PropTypes.func.isRequired\n};\nexport default ReportModal;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/components/ReportModal.js"],"names":["Button","Modal","Form","Alert","FontAwesomeIcon","faCheck","PropTypes","ReportModal","props","state","reason","category","error","success","inputUpdate","bind","updateCategory","submitReport","e","setState","target","name","value","selectedIndex","preventDefault","length","fetch","window","location","origin","method","headers","body","urlRef","urlref","res","json","data","message","stopPropagation","title","minHeight","onHide","React","Component","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\n\nclass ReportModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reason: '',\n      category: 0,\n      error: false,\n      success: false,\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.submitReport = this.submitReport.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  updateCategory(e) {\n    this.setState({ category: e.target.selectedIndex });\n  }\n\n  async submitReport(e) {\n    e.preventDefault()\n    if (this.state.reason.length <= 0 || this.state.category === 0) {\n      this.setState({ error: true });\n      return;\n    } else {\n      try {\n        const res = await fetch(`${window.location.origin}/api/report`, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-Origin': 'statmix'\n          },\n          body: JSON.stringify({\n            reason: this.state.reason,\n            category: this.state.category,\n            urlRef: this.props.urlref\n          })\n        });\n  \n        const data = await res.json();\n        if (data.message === 'success') {\n           this.setState({\n            error: false,\n            success: true,\n            reason: '',\n            category: 0,\n          });\n          // display sucess\n        } else {\n          this.setState({ error: true });\n          // display error\n        }\n  \n  \n      } catch(err) {\n          // display error\n      }\n\n    }\n  }\n\n  render() {\n    const { reason, error, success } = this.state;\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        centered\n        animation={false}\n        dialogClassName=\"modal-report\"\n        onClick={e => e.stopPropagation()}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Report\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { error ?\n            <Alert variant='danger'>\n              <b>Error submitting report</b>\n            </Alert> : null\n          }\n          { success ?\n            <Alert variant='success'>\n              <b>\n                <FontAwesomeIcon icon={faCheck} /> Report Recieved. Thank You\n              </b>\n            </Alert> : null\n          }\n          <div className='report-details mb-3'>\n            <h6>Poll Title</h6>\n            <div>\n              {this.props.title}\n            </div>\n          </div>\n          <p>Please describe the reason for this report below.</p>\n          <Form autoComplete='off'>\n            <Form.Group>\n              <Form.Label>\n                Category\n              </Form.Label>\n              <Form.Control\n                onChange={this.updateCategory}\n                as=\"select\"\n                name='category'\n              >\n                <option>Select a category</option>\n                <option>Abuse</option>\n                <option>Bug</option>\n                <option>Spam</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                Reason:\n              </Form.Label>\n              <Form.Control\n                value={reason}\n                onChange={this.inputUpdate}\n                style={{ 'maxHeight': '144px', minHeight: '72px' }}\n                as=\"textarea\" rows=\"3\" name='reason' maxLength='500'\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          {success ?\n            <Button variant='grey-blue' onClick={this.props.onHide}>Close</Button>\n          : \n            <Button variant='light-blue' type='submit' onClick={this.submitReport}>Submit</Button>\n          }\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nReportModal.propTypes = {\n  onHide: PropTypes.func.isRequired\n}\n\nexport default ReportModal;"]},"metadata":{},"sourceType":"module"}