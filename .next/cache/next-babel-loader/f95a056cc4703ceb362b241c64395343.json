{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout/Layout';\nimport { withRouter } from 'next/router';\nimport Router from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nconst ErrorLayout = props => __jsx(Container, null, __jsx(\"div\", {\n  className: \"error-container\"\n}, __jsx(\"h4\", {\n  className: \"page-header\"\n}, props.errorCode, \" \", props.errorInfo), __jsx(Button, {\n  variant: \"grey-blue\",\n  onClick: () => Router.back()\n}, \"Go back\")));\n\nclass ErrorPage extends React.Component {\n  static propTypes() {\n    return {\n      errorCode: React.PropTypes.number.isRequired\n    };\n  }\n\n  static getInitialProps({\n    res,\n    xhr\n  }) {\n    const errorCode = res ? res.statusCode : xhr ? xhr.status : null;\n    return {\n      errorCode\n    };\n  }\n\n  render() {\n    var response;\n\n    switch (this.props.errorCode) {\n      case 200: // Also display a 404 if someone requests /_error explicitly\n\n      case 401:\n        response = __jsx(Layout, {\n          pageTitle: \"Not Authorized\"\n        }, __jsx(ErrorLayout, {\n          errorCode: this.props.errorCode,\n          errorInfo: \"Not Authorized\"\n        }));\n        break;\n\n      case 404:\n        response = __jsx(Layout, {\n          pageTitle: \"Page Not Found\"\n        }, __jsx(ErrorLayout, {\n          errorCode: this.props.errorCode,\n          errorInfo: \"Page Not Found\"\n        }));\n        break;\n\n      case 500:\n        response = __jsx(Layout, {\n          pageTitle: \"Internal Server Error\"\n        }, __jsx(ErrorLayout, {\n          errorCode: this.props.errorCode,\n          errorInfo: \"Internal Server Error\"\n        }));\n        break;\n\n      default:\n        response = __jsx(Layout, {\n          pageTitle: \"An Error Occured\"\n        }, __jsx(Container, null, __jsx(\"div\", {\n          className: \"error-container\"\n        }, __jsx(\"h4\", {\n          className: \"page-header\"\n        }, \"An error occured while trying to access this page.\"), __jsx(Button, {\n          variant: \"grey-blue\",\n          onClick: () => Router.back()\n        }, \"Go back\"))));\n    }\n\n    return response;\n  }\n\n}\n\nexport default withRouter(ErrorPage);","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/pages/_error.js"],"names":["Layout","withRouter","Router","Container","Button","ErrorLayout","props","errorCode","errorInfo","back","ErrorPage","React","Component","propTypes","PropTypes","number","isRequired","getInitialProps","res","xhr","statusCode","status","render","response"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IACvB,MAAC,SAAD,QACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAI,EAAA,SAAS,EAAC;AAAd,GAA6BA,KAAK,CAACC,SAAnC,OAA+CD,KAAK,CAACE,SAArD,CADF,EAEE,MAAC,MAAD;AAAQ,EAAA,OAAO,EAAC,WAAhB;AAA4B,EAAA,OAAO,EAAE,MAAMN,MAAM,CAACO,IAAP;AAA3C,aAFF,CADF,CADF;;AASA,MAAMC,SAAN,SAAwBC,KAAK,CAACC,SAA9B,CAAwC;AAEtC,SAAOC,SAAP,GAAmB;AACjB,WAAO;AACLN,MAAAA,SAAS,EAAEI,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuBC;AAD7B,KAAP;AAGD;;AAED,SAAOC,eAAP,CAAuB;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAvB,EAAmC;AACjC,UAAMZ,SAAS,GAAGW,GAAG,GAAGA,GAAG,CAACE,UAAP,GAAqBD,GAAG,GAAGA,GAAG,CAACE,MAAP,GAAgB,IAA7D;AACA,WAAO;AAACd,MAAAA;AAAD,KAAP;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAJ;;AACA,YAAQ,KAAKjB,KAAL,CAAWC,SAAnB;AACE,WAAK,GAAL,CADF,CACY;;AACV,WAAK,GAAL;AACEgB,QAAAA,QAAQ,GACN,MAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB,WACE,MAAC,WAAD;AACE,UAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWC,SADxB;AAEE,UAAA,SAAS,EAAC;AAFZ,UADF,CADF;AAQA;;AACF,WAAK,GAAL;AACEgB,QAAAA,QAAQ,GACN,MAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB,WACE,MAAC,WAAD;AACE,UAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWC,SADxB;AAEE,UAAA,SAAS,EAAC;AAFZ,UADF,CADF;AAQA;;AACF,WAAK,GAAL;AACEgB,QAAAA,QAAQ,GACN,MAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB,WACE,MAAC,WAAD;AACE,UAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWC,SADxB;AAEE,UAAA,SAAS,EAAC;AAFZ,UADF,CADF;AAQA;;AACF;AACEgB,QAAAA,QAAQ,GACN,MAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB,WACE,MAAC,SAAD,QACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAI,UAAA,SAAS,EAAC;AAAd,gEADF,EAEE,MAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAE,MAAMrB,MAAM,CAACO,IAAP;AAA3C,qBAFF,CADF,CADF,CADF;AAjCJ;;AA6CA,WAAOc,QAAP;AACD;;AA7DqC;;AAiExC,eAAetB,UAAU,CAACS,SAAD,CAAzB","sourcesContent":["import Layout from '../components/layout/Layout';\nimport { withRouter } from 'next/router';\nimport Router from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nconst ErrorLayout = props => (\n  <Container>\n    <div className='error-container'>\n      <h4 className='page-header'>{props.errorCode} {props.errorInfo}</h4>\n      <Button variant='grey-blue' onClick={() => Router.back()}>Go back</Button>\n    </div>\n  </Container>\n);\n\nclass ErrorPage extends React.Component {\n\n  static propTypes() {\n    return {\n      errorCode: React.PropTypes.number.isRequired,\n    }\n  }\n\n  static getInitialProps({res, xhr}) {\n    const errorCode = res ? res.statusCode : (xhr ? xhr.status : null)\n    return {errorCode}\n  }\n\n  render() {\n    var response\n    switch (this.props.errorCode) {\n      case 200: // Also display a 404 if someone requests /_error explicitly\n      case 401:\n        response = (\n          <Layout pageTitle='Not Authorized'>\n            <ErrorLayout\n              errorCode={this.props.errorCode}\n              errorInfo='Not Authorized'  \n            />\n          </Layout>\n        )\n        break\n      case 404:\n        response = (\n          <Layout pageTitle='Page Not Found'>\n            <ErrorLayout\n              errorCode={this.props.errorCode}\n              errorInfo='Page Not Found'  \n            />\n          </Layout>\n        )\n        break\n      case 500:\n        response = (\n          <Layout pageTitle='Internal Server Error'>\n            <ErrorLayout\n              errorCode={this.props.errorCode}\n              errorInfo='Internal Server Error'  \n            />\n          </Layout>\n        )\n        break\n      default:\n        response = (\n          <Layout pageTitle='An Error Occured'>\n            <Container>\n              <div className='error-container'>\n                <h4 className='page-header'>An error occured while trying to access this page.</h4>\n                <Button variant='grey-blue' onClick={() => Router.back()}>Go back</Button>\n              </div>\n            </Container>\n          </Layout>\n        )\n    }\n\n    return response\n  }\n\n}\n\nexport default withRouter(ErrorPage)"]},"metadata":{},"sourceType":"module"}