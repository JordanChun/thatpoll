{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChartBar } from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { withRouter } from 'next/router';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport getMomentTimelimit from '../helpers/momentFunctions';\nvar defaultStyle = {\n  width: 0\n};\n\nvar transitionStyles = function transitionStyles(resultWidth) {\n  var style = {\n    entering: {\n      width: \"\".concat(resultWidth, \"%\")\n    },\n    entered: {\n      width: \"\".concat(resultWidth, \"%\")\n    },\n    exit: {\n      width: 0\n    }\n  };\n  return style;\n};\n\nvar PollResults =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PollResults, _React$Component);\n\n  function PollResults(props) {\n    var _this;\n\n    _classCallCheck(this, PollResults);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PollResults).call(this, props));\n    _this.state = {\n      resultsBar: false\n    };\n    return _this;\n  }\n\n  _createClass(PollResults, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.setState({\n          resultsBar: true\n        });\n      }, 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        className: \"poll-results\"\n      }, __jsx(\"hr\", null), __jsx(\"h5\", null, __jsx(FontAwesomeIcon, {\n        icon: faChartBar\n      }), \" Results\"), this.props.resultsLoading ? __jsx(\"div\", {\n        className: \"justify-content-center align-items-center\",\n        style: {\n          height: '200px',\n          display: 'flex'\n        }\n      }, __jsx(Spinner, {\n        animation: \"grow\",\n        variant: \"light\"\n      })) : __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"mb-3\"\n      }, this.props.active ? __jsx(Button, {\n        variant: \"grey-blue\",\n        size: \"sm\",\n        onClick: this.props.loadResults\n      }, this.props.refreshResultsLoading ? __jsx(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }) : null, \"Refresh Results\") : null), __jsx(Transition, {\n        \"in\": this.state.resultsBar,\n        timeout: 300,\n        appear: true\n      }, function (state) {\n        return __jsx(\"div\", {\n          className: \"results-container\"\n        }, _this3.props.results.map(function (result, i) {\n          return __jsx(\"div\", {\n            key: i\n          }, __jsx(\"h6\", null, _this3.props.choices[i]), __jsx(\"div\", {\n            className: \"poll-result\"\n          }, __jsx(\"div\", {\n            className: \"result-bar mb-3\",\n            style: _objectSpread({}, defaultStyle, {}, transitionStyles(Math.round(result / _this3.props.totalVotes * 100))[state])\n          }, result !== 0 ? __jsx(\"div\", null, __jsx(\"div\", null, result, \" votes\"), __jsx(\"div\", null, Math.round(result / _this3.props.totalVotes * 100), \"%\")) : __jsx(\"div\", null, __jsx(\"div\", null, \"0 votes\"), __jsx(\"div\", null, \"0%\")))));\n        }));\n      })));\n    }\n  }]);\n\n  return PollResults;\n}(React.Component);\n\nPollResults.propTypes = {\n  totalVotes: PropTypes.number.isRequired,\n  results: PropTypes.array.isRequired,\n  choices: PropTypes.array.isRequired,\n  resultsLoading: PropTypes.bool.isRequired,\n  refreshResultsLoading: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  loadResults: PropTypes.func.isRequired\n};\nexport default withRouter(PollResults);","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/components/PollResults.js"],"names":["FontAwesomeIcon","faChartBar","Spinner","Button","PropTypes","Transition","withRouter","moment","getMomentTimelimit","defaultStyle","width","transitionStyles","resultWidth","style","entering","entered","exit","PollResults","props","state","resultsBar","setTimeout","setState","resultsLoading","height","display","active","loadResults","refreshResultsLoading","results","map","result","i","choices","Math","round","totalVotes","React","Component","propTypes","number","isRequired","array","bool","func"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChartBar } from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { withRouter } from 'next/router';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport getMomentTimelimit from '../helpers/momentFunctions';\n\nconst defaultStyle = {\n  width: 0,\n}\n\nconst transitionStyles = resultWidth => {\n  const style = {\n    entering: { width: `${resultWidth}%` },\n    entered:  { width: `${resultWidth}%` },\n    exit: { width: 0 }\n  }\n\n  return style\n};\n\nclass PollResults extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { resultsBar: false }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ resultsBar: true });\n    }, 0)\n  }\n\n  render() {\n    return (\n      <div className='poll-results'>\n        <hr />\n        <h5><FontAwesomeIcon icon={faChartBar}/> Results</h5>\n        { this.props.resultsLoading ?\n          <div className='justify-content-center align-items-center' style={{height: '200px', display: 'flex'}}>\n            <Spinner animation=\"grow\" variant=\"light\" />\n          </div>\n          :\n          <div>\n            <div className='mb-3'>\n            { this.props.active ?\n              <Button variant='grey-blue' size='sm' onClick={this.props.loadResults}>\n                { this.props.refreshResultsLoading ? \n                  <Spinner\n                  as=\"span\"\n                  animation=\"grow\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  /> : null\n                }\n                Refresh Results\n              </Button> : null }\n            </div>\n            <Transition in={this.state.resultsBar} timeout={300} appear>\n              {state => (\n                <div className='results-container'>\n                    {this.props.results.map((result, i) => (\n                      <div key={i}>\n                        <h6>{this.props.choices[i]}</h6>\n                        <div className='poll-result'>\n                          <div className='result-bar mb-3'\n                            style={{\n                              ...defaultStyle,\n                              ...transitionStyles(Math.round((result/this.props.totalVotes) * 100))[state]\n                            }}\n                          >\n                          {result !== 0 ?\n                            <div>\n                              <div>{result} votes</div>\n                              <div>{Math.round((result/this.props.totalVotes) * 100)}%</div>\n                            </div>\n                          : \n                            <div>\n                              <div>0 votes</div>\n                              <div>0%</div>\n                            </div>\n                          }\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              )}\n            </Transition>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nPollResults.propTypes = {\n  totalVotes: PropTypes.number.isRequired,\n  results: PropTypes.array.isRequired,\n  choices: PropTypes.array.isRequired,\n  resultsLoading: PropTypes.bool.isRequired,\n  refreshResultsLoading: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  loadResults: PropTypes.func.isRequired,\n}\n\nexport default withRouter(PollResults);\n"]},"metadata":{},"sourceType":"module"}