{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/Layout';\nimport PollPreview from '../components/PollPreview';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport { withRouter } from 'next/router';\nimport CategoriesList from '../helpers/CategoriesList';\nimport Cookies from 'js-cookie';\nimport getMomentTimelimit from '../helpers/momentFunctions';\n\nconst visibilityTooltip = props => __jsx(\"div\", _extends({}, props, {\n  style: _objectSpread({\n    maxWidth: '400px',\n    backgroundColor: '#1c2c40',\n    padding: '0.5rem 0.75rem',\n    color: '#e6e6e6',\n    borderRadius: '0.25rem'\n  }, props.style)\n}), \"Set whether to allow the public to see this poll or keep it private. Only those with the URL will be able to access the poll if set private.\");\n\nconst votingPeriodTooltip = props => __jsx(\"div\", _extends({}, props, {\n  style: _objectSpread({\n    maxWidth: '400px',\n    backgroundColor: '#1c2c40',\n    padding: '0.5rem 0.75rem',\n    color: '#e6e6e6',\n    borderRadius: '0.25rem'\n  }, props.style)\n}), \"Set in hours when the poll will expire.\");\n\nfunction validatePollInput(pollDataObj) {\n  let choicesArr = [];\n\n  for (let i = 0; i < pollDataObj.choices.length; i++) {\n    if (pollDataObj.choices[i].choice !== '') {\n      choicesArr.push(pollDataObj.choices[i].choice);\n    }\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choicesArr,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod,\n    category: pollDataObj.category\n  };\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      desc: '',\n      choices: [{\n        choice: ''\n      }, {\n        choice: ''\n      }],\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      category: 0,\n      error: false,\n      validated: false,\n      timelimit: ' 6 hours'\n    };\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateTimePeriod = this.updateTimePeriod.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.setHourPreset = this.setHourPreset.bind(this);\n    this.updateChoice = this.updateChoice.bind(this);\n    this.addChoice = this.addChoice.bind(this);\n    this.removeChoice = this.removeChoice.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  updateChoice(e) {\n    const choices = this.state.choices.slice();\n    choices[e.target.dataset['index']].choice = e.target.value;\n    this.setState({\n      choices: choices\n    });\n  }\n\n  updateCategory(e) {\n    this.setState({\n      category: e.target.selectedIndex\n    });\n  }\n\n  visibilityUpdate(e) {\n    this.setState({\n      visibility: e.target.value\n    });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.setState({\n      validated: true\n    });\n    const {\n      origin\n    } = absoluteUrl(req);\n    const publicAccessToken = Cookies.get('publicAccessToken');\n    const pollData = validatePollInput(this.state);\n\n    try {\n      const res = await fetch(`${origin}/api/v1/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify(pollData)\n      });\n      const data = await res.json();\n\n      if (data.message === 'success') {\n        Router.push(`/poll?slug=${data.url}`, `/poll/${data.url}`);\n      } else {\n        this.setState({\n          error: true\n        });\n        window.scrollTo({\n          top: 56,\n          left: 0,\n          behavior: 'smooth'\n        });\n      } //console.log(data);\n\n    } catch (err) {\n      //console.log(err)\n      // display error\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  updateTimePeriod(e) {\n    const timelimit = getMomentTimelimit(new Date(), e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value,\n      timelimit: timelimit\n    });\n  }\n\n  setHourPreset(e) {\n    const timelimit = getMomentTimelimit(new Date(), e.target.dataset['hours']);\n    this.setState({\n      votingPeriod: e.target.dataset['hours'],\n      timelimit: timelimit\n    });\n  }\n\n  addChoice() {\n    if (this.state.choices.length < 4) {\n      const choices = this.state.choices.slice();\n      choices.push({\n        choice: ''\n      });\n      this.setState({\n        choices: choices\n      });\n    }\n  }\n\n  removeChoice(e) {\n    if (this.state.choices.length > 2) {\n      const choices = this.state.choices.slice();\n      choices.splice(e.target.dataset['index'], 1);\n      this.setState({\n        choices: choices\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choices,\n      votingPeriod,\n      error,\n      validated\n    } = this.state;\n    return __jsx(Layout, {\n      pageTitle: \"Create Poll\",\n      path: this.props.router.asPath\n    }, __jsx(\"h4\", {\n      className: \"page-header\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPoll\n    }), \" Create Poll\"), __jsx(\"hr\", null), error ? __jsx(Alert, {\n      variant: \"danger\"\n    }, __jsx(\"b\", null, \"Error submitting poll\")) : null, __jsx(Form, {\n      noValidate: true,\n      validated: validated,\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      style: {\n        padding: '1rem'\n      }\n    }, __jsx(Form.Group, {\n      controlId: \"validationTitle\"\n    }, __jsx(Form.Label, null, \"Title\"), __jsx(Form.Control, {\n      value: title,\n      onChange: this.inputUpdate,\n      type: \"text\",\n      name: \"title\",\n      minLength: \"3\",\n      maxLength: \"120\",\n      required: true\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, \"Please provide a title. Min 3 characters.\")), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Description (Optional)\"), __jsx(Form.Control, {\n      value: desc,\n      onChange: this.inputUpdate,\n      style: {\n        maxHeight: '144px',\n        minHeight: '72px'\n      },\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"desc\",\n      maxLength: \"500\"\n    }), __jsx(Form.Text, null, \"Characters remaining: \", 500 - desc.length)), choices.map((choiceObj, i) => __jsx(Form.Group, {\n      key: i,\n      controlId: `validateChoice${i}`\n    }, __jsx(Form.Label, null, \"Choice #\", i + 1), i > 1 ? __jsx(ButtonGroup, {\n      size: \"sm\",\n      style: {\n        marginLeft: '0.5rem'\n      }\n    }, __jsx(Button, {\n      variant: \"grey-blue\",\n      \"data-index\": i,\n      onClick: this.removeChoice\n    }, __jsx(FontAwesomeIcon, {\n      icon: faMinus\n    }), \" Remove choice\")) : null, __jsx(Form.Control, {\n      value: choiceObj.choice,\n      \"data-index\": i,\n      onChange: this.updateChoice,\n      type: \"text\",\n      minLength: \"1\",\n      maxLength: \"75\",\n      required: true\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, \"Please provide a choice or remove it. Duplicate choices are \", __jsx(\"b\", null, \"not\"), \" allowed. Min 1 characters.\"))), __jsx(ButtonGroup, {\n      size: \"sm\",\n      className: \"mb-3\"\n    }, __jsx(Button, {\n      variant: \"grey-blue\",\n      onClick: this.addChoice,\n      disabled: choices.length === 4\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPlus\n    }), \" Add choice\")), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Category (Optional)\"), __jsx(Form.Control, {\n      onChange: this.updateCategory,\n      as: \"select\",\n      name: \"category\"\n    }, __jsx(\"option\", null, \"Select a category\"), CategoriesList.map((category, i) => __jsx(\"option\", {\n      key: i\n    }, category)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, null, \"Visibility\", \" \", __jsx(OverlayTrigger, {\n      placement: \"top-start\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: visibilityTooltip\n    }, __jsx(FontAwesomeIcon, {\n      icon: faQuestionCircle\n    }))), __jsx(Form.Check, {\n      onClick: this.visibilityUpdate,\n      type: \"radio\",\n      label: \"Public\",\n      name: \"visibility\",\n      value: \"public\",\n      defaultChecked: true\n    }), __jsx(Form.Check, {\n      onClick: this.visibilityUpdate,\n      type: \"radio\",\n      label: \"Private\",\n      name: \"visibility\",\n      value: \"private\"\n    })), __jsx(Form.Group, {\n      as: Col,\n      controlId: \"validateVotingPeriod\"\n    }, __jsx(Form.Label, null, \"Voting Period (hours)\", \" \", __jsx(OverlayTrigger, {\n      placement: \"top-start\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: votingPeriodTooltip\n    }, __jsx(FontAwesomeIcon, {\n      icon: faQuestionCircle\n    }))), __jsx(Form.Control, {\n      value: votingPeriod,\n      onChange: this.updateTimePeriod,\n      style: {\n        maxWidth: '200px'\n      },\n      type: \"number\",\n      min: \"6\",\n      max: \"168\",\n      name: \"votingPeriod\",\n      className: \"mb-1\",\n      required: true\n    }), __jsx(ButtonGroup, {\n      size: \"sm\"\n    }, __jsx(Button, {\n      variant: \"grey-blue\",\n      onClick: this.setHourPreset,\n      \"data-hours\": \"24\"\n    }, \"1 day\"), __jsx(Button, {\n      variant: \"grey-blue\",\n      onClick: this.setHourPreset,\n      \"data-hours\": \"72\"\n    }, \"3 days\"), __jsx(Button, {\n      variant: \"grey-blue\",\n      onClick: this.setHourPreset,\n      \"data-hours\": \"168\"\n    }, \"7 days\")), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, \"Voting period must be a minimum of 6 hours and a maximum of 168 hours.\"), __jsx(Form.Text, null, \"6h - 168h (7 days)\"))), __jsx(\"hr\", null), __jsx(Form.Group, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '2rem'\n      }\n    }, __jsx(Button, {\n      variant: \"light-blue\",\n      type: \"submit\",\n      style: {\n        width: '200px'\n      }\n    }, \"Create Poll\"))), __jsx(\"div\", {\n      className: \"poll-preview\"\n    }, __jsx(\"h4\", {\n      className: \"page-header\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faEye\n    }), \" Preview\"), __jsx(\"hr\", null), __jsx(PollPreview, this.state)));\n  }\n\n}\n\nexport default withRouter(CreatePoll);","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/pages/create-poll.js"],"names":["Layout","PollPreview","Form","Button","Col","Alert","OverlayTrigger","ButtonGroup","FontAwesomeIcon","faPoll","faQuestionCircle","faEye","faPlus","faMinus","Router","absoluteUrl","withRouter","CategoriesList","Cookies","getMomentTimelimit","visibilityTooltip","props","maxWidth","backgroundColor","padding","color","borderRadius","style","votingPeriodTooltip","validatePollInput","pollDataObj","choicesArr","i","choices","length","choice","push","pollData","title","desc","visibility","votingPeriod","category","CreatePoll","React","Component","constructor","state","dateCreated","Date","error","validated","timelimit","inputUpdate","bind","visibilityUpdate","handleSubmit","updateTimePeriod","updateCategory","setHourPreset","updateChoice","addChoice","removeChoice","e","setState","target","name","value","slice","dataset","selectedIndex","req","preventDefault","form","currentTarget","checkValidity","stopPropagation","origin","publicAccessToken","get","res","fetch","method","headers","body","data","json","message","url","window","scrollTo","top","left","behavior","err","splice","render","router","asPath","maxHeight","minHeight","map","choiceObj","marginLeft","show","hide","display","justifyContent","marginTop","width"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\nimport PollPreview from '../components/PollPreview';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPoll, faQuestionCircle, faEye, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport absoluteUrl from 'next-absolute-url';\nimport { withRouter } from 'next/router';\nimport CategoriesList from '../helpers/CategoriesList';\nimport Cookies from 'js-cookie';\nimport getMomentTimelimit from '../helpers/momentFunctions';\n\nconst visibilityTooltip = props => (\n  <div\n    {...props}\n    style={{\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '0.5rem 0.75rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem',\n      ...props.style,\n    }}\n  >\n    Set whether to allow the public to see this poll or keep it private.\n    Only those with the URL will be able to access the poll if set private.\n  </div>\n);\n\nconst votingPeriodTooltip = props => (\n  <div\n    {...props}\n    style={{\n      maxWidth: '400px',\n      backgroundColor: '#1c2c40',\n      padding: '0.5rem 0.75rem',\n      color: '#e6e6e6',\n      borderRadius: '0.25rem',\n      ...props.style,\n    }}\n  >\n    Set in hours when the poll will expire.\n  </div>\n);\n\nfunction validatePollInput(pollDataObj) {\n  let choicesArr = [];\n  for (let i = 0; i < pollDataObj.choices.length; i++) {\n    if (pollDataObj.choices[i].choice !== '') {\n      choicesArr.push(pollDataObj.choices[i].choice);\n    }\n  }\n\n  const pollData = {\n    title: pollDataObj.title,\n    desc: pollDataObj.desc,\n    choices: choicesArr,\n    visibility: pollDataObj.visibility,\n    votingPeriod: pollDataObj.votingPeriod,\n    category: pollDataObj.category\n  }\n\n  return pollData;\n}\n\nclass CreatePoll extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      desc: '',\n      choices: [\n        { choice: '' },\n        { choice: '' },\n      ],\n      visibility: 'public',\n      votingPeriod: 6,\n      dateCreated: new Date(),\n      category: 0,\n      error: false,\n      validated: false,\n      timelimit: ' 6 hours'\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.visibilityUpdate = this.visibilityUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateTimePeriod = this.updateTimePeriod.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.setHourPreset = this.setHourPreset.bind(this);\n    this.updateChoice = this.updateChoice.bind(this);\n    this.addChoice = this.addChoice.bind(this);\n    this.removeChoice = this.removeChoice.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  updateChoice(e) {\n    const choices = this.state.choices.slice();\n    choices[e.target.dataset['index']].choice = e.target.value;\n    this.setState({ choices: choices });\n  }\n\n  updateCategory(e) {\n    this.setState({ category: e.target.selectedIndex });\n  }\n\n  visibilityUpdate(e) {\n    this.setState({ visibility: e.target.value });\n  }\n\n  async handleSubmit(e, req) {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.setState({ validated: true });\n\n    const { origin } = absoluteUrl(req);\n    const publicAccessToken = Cookies.get('publicAccessToken');\n    const pollData = validatePollInput(this.state);\n    try {\n      const res = await fetch(`${origin}/api/v1/create-poll`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(pollData)\n      });\n      const data = await res.json();\n      if(data.message === 'success') {\n        Router.push(`/poll?slug=${data.url}`, `/poll/${data.url}`)\n      } else {\n        this.setState({ error: true });\n        window.scrollTo({\n          top: 56,\n          left: 0,\n          behavior: 'smooth'\n        });\n      }\n      //console.log(data);\n    } catch(err) {\n      //console.log(err)\n      // display error\n      this.setState({ error: true });\n    }\n  }\n\n  updateTimePeriod(e) {\n    const timelimit = getMomentTimelimit(new Date(), e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value,\n      timelimit: timelimit\n    });\n  }\n\n  setHourPreset(e) {\n    const timelimit = getMomentTimelimit(new Date(), e.target.dataset['hours']);\n    this.setState({ votingPeriod: e.target.dataset['hours'], timelimit: timelimit });\n    \n  }\n\n  addChoice() {\n    if (this.state.choices.length < 4) {\n      const choices = this.state.choices.slice();\n      choices.push({ choice: '' });\n      this.setState({ choices: choices })\n    }\n  }\n\n  removeChoice(e) {\n    if (this.state.choices.length > 2) {\n      const choices = this.state.choices.slice();\n      choices.splice(e.target.dataset['index'], 1);\n      this.setState({ choices: choices })\n    }\n  }\n\n  render() {\n    const {\n      title,\n      desc,\n      choices,\n      votingPeriod,\n      error,\n      validated\n    } = this.state;\n\n    return (\n      <Layout\n        pageTitle='Create Poll'\n        path={this.props.router.asPath}\n      >\n        <h4 className='page-header'><FontAwesomeIcon icon={faPoll} /> Create Poll</h4>\n        <hr />\n        { error ?\n          <Alert variant='danger'>\n           <b>Error submitting poll</b>\n          </Alert> : null\n        }\n        <Form noValidate validated={validated} autoComplete='off' onSubmit={this.handleSubmit} style={{ padding: '1rem' }}>\n          <Form.Group controlId=\"validationTitle\">\n            <Form.Label>\n              Title\n            </Form.Label>\n            <Form.Control\n              value={title}\n              onChange={this.inputUpdate}\n              type='text' name='title' minLength='3' maxLength='120'\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a title. Min 3 characters.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Description (Optional)\n            </Form.Label>\n            <Form.Control\n              value={desc}\n              onChange={this.inputUpdate}\n              style={{ maxHeight: '144px', minHeight: '72px' }}\n              as=\"textarea\" rows=\"3\" name='desc' maxLength='500'\n            />\n            <Form.Text>\n              Characters remaining: {500 - desc.length}\n            </Form.Text>\n          </Form.Group>\n          {choices.map((choiceObj, i) => (\n            <Form.Group key={i} controlId={`validateChoice${i}`}>\n              <Form.Label>\n                Choice #{i+1}\n              </Form.Label>\n              {i > 1 ? \n                <ButtonGroup size='sm' style={{ marginLeft: '0.5rem' }}>\n                  <Button variant=\"grey-blue\" data-index={i} onClick={this.removeChoice}>\n                    <FontAwesomeIcon icon={faMinus} /> Remove choice\n                  </Button>\n                </ButtonGroup> : null }\n              <Form.Control\n                value={choiceObj.choice}\n                data-index={i}\n                onChange={this.updateChoice}\n                type='text' minLength='1' maxLength='75'\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a choice or remove it. Duplicate choices are <b>not</b> allowed. Min 1 characters.\n              </Form.Control.Feedback>\n            </Form.Group>\n          ))}\n          <ButtonGroup size=\"sm\" className='mb-3'>\n            <Button variant=\"grey-blue\" onClick={this.addChoice} disabled={choices.length === 4}>\n              <FontAwesomeIcon icon={faPlus} /> Add choice\n            </Button>\n          </ButtonGroup>\n\n          <Form.Group>\n            <Form.Label>\n              Category (Optional)\n            </Form.Label>\n            <Form.Control\n              onChange={this.updateCategory}\n              as=\"select\"\n              name='category'\n            >\n            <option>Select a category</option>\n            {CategoriesList.map((category, i) => (\n              <option key={i}>{category}</option>\n            ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>\n                Visibility{\" \"}\n                <OverlayTrigger\n                    placement=\"top-start\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={visibilityTooltip}>\n                  <FontAwesomeIcon icon={faQuestionCircle} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Public' name='visibility' value='public' defaultChecked\n              />\n              <Form.Check\n                onClick={this.visibilityUpdate}\n                type='radio' label='Private' name='visibility' value='private'\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId='validateVotingPeriod'>\n              <Form.Label>\n                Voting Period (hours){\" \"}\n                <OverlayTrigger\n                  placement=\"top-start\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={votingPeriodTooltip}\n                >\n                  <FontAwesomeIcon icon={faQuestionCircle} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Control\n                value={votingPeriod}\n                onChange={this.updateTimePeriod}\n                style={{ maxWidth: '200px' }}\n                type='number' min='6' max='168' name='votingPeriod'\n                className=\"mb-1\"\n                required\n              />\n              <ButtonGroup size=\"sm\">\n                <Button variant=\"grey-blue\" onClick={this.setHourPreset} data-hours='24'>1 day</Button>\n                <Button variant=\"grey-blue\" onClick={this.setHourPreset} data-hours='72'>3 days</Button>\n                <Button variant=\"grey-blue\" onClick={this.setHourPreset} data-hours='168'>7 days</Button>\n              </ButtonGroup>\n              <Form.Control.Feedback type=\"invalid\">\n                Voting period must be a minimum of 6 hours and a maximum of 168 hours.\n              </Form.Control.Feedback>\n              <Form.Text>\n                6h - 168h (7 days) \n              </Form.Text>\n            </Form.Group>\n          </Form.Row>\n          <hr />\n          <Form.Group style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\n            <Button \n              variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n              Create Poll\n            </Button>\n          </Form.Group>\n        </Form>\n        <div className='poll-preview'>\n          <h4 className='page-header'><FontAwesomeIcon icon={faEye} /> Preview</h4>\n          <hr />\n          <PollPreview {...this.state} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withRouter(CreatePoll);"]},"metadata":{},"sourceType":"module"}