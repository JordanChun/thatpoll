{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChartBar } from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { withRouter } from 'next/router';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport getMomentTimelimit from '../helpers/momentFunctions';\nconst defaultStyle = {\n  width: 0\n};\n\nconst transitionStyles = resultWidth => {\n  const style = {\n    entering: {\n      width: `${resultWidth}%`\n    },\n    entered: {\n      width: `${resultWidth}%`\n    },\n    exit: {\n      width: 0\n    }\n  };\n  return style;\n};\n\nclass PollResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resultsBar: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        resultsBar: true\n      });\n    }, 0);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"poll-results\"\n    }, __jsx(\"hr\", null), __jsx(\"h5\", null, __jsx(FontAwesomeIcon, {\n      icon: faChartBar\n    }), \" Results\", ' ', this.props.active ? __jsx(Button, {\n      variant: \"grey-blue\",\n      size: \"sm\",\n      onClick: this.props.loadResults,\n      style: {\n        margin: '0 0.5rem'\n      },\n      disabled: this.props.refreshResultsLoading\n    }, \"Refresh Results\") : null, this.props.refreshResultsLoading ? __jsx(Spinner, {\n      animation: \"border\",\n      size: \"sm\",\n      \"aria-hidden\": \"true\"\n    }) : null), this.props.resultsLoading ? __jsx(\"div\", {\n      className: \"justify-content-center align-items-center\",\n      style: {\n        height: '200px',\n        display: 'flex'\n      }\n    }, __jsx(Spinner, {\n      animation: \"border\",\n      variant: \"light\"\n    })) : __jsx(\"div\", null, __jsx(Transition, {\n      in: this.state.resultsBar,\n      timeout: 300,\n      appear: true\n    }, state => __jsx(\"div\", {\n      className: \"results-container\"\n    }, this.props.results.map((result, i) => __jsx(\"div\", {\n      key: i\n    }, __jsx(\"h6\", null, this.props.choices[i]), __jsx(\"div\", {\n      className: \"poll-result\"\n    }, __jsx(\"div\", {\n      className: \"result-bar mb-3\",\n      style: _objectSpread({}, defaultStyle, {}, transitionStyles(Math.round(result / this.props.totalVotes * 100))[state])\n    }, result !== 0 ? __jsx(\"div\", null, __jsx(\"div\", null, result.toLocaleString(), \" votes\"), __jsx(\"div\", null, Math.round(result / this.props.totalVotes * 100), \"%\")) : __jsx(\"div\", null, __jsx(\"div\", null, \"0 votes\"), __jsx(\"div\", null, \"0%\"))))))))));\n  }\n\n}\n\nPollResults.propTypes = {\n  totalVotes: PropTypes.number.isRequired,\n  results: PropTypes.array.isRequired,\n  choices: PropTypes.array.isRequired,\n  resultsLoading: PropTypes.bool.isRequired,\n  refreshResultsLoading: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  loadResults: PropTypes.func.isRequired\n};\nexport default withRouter(PollResults);","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/PollResults.js"],"names":["FontAwesomeIcon","faChartBar","Spinner","Button","PropTypes","Transition","withRouter","moment","getMomentTimelimit","defaultStyle","width","transitionStyles","resultWidth","style","entering","entered","exit","PollResults","React","Component","constructor","props","state","resultsBar","componentDidMount","setTimeout","setState","render","active","loadResults","margin","refreshResultsLoading","resultsLoading","height","display","results","map","result","i","choices","Math","round","totalVotes","toLocaleString","propTypes","number","isRequired","array","bool","func"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChartBar } from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { withRouter } from 'next/router';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport getMomentTimelimit from '../helpers/momentFunctions';\n\nconst defaultStyle = {\n  width: 0,\n}\n\nconst transitionStyles = resultWidth => {\n  const style = {\n    entering: { width: `${resultWidth}%` },\n    entered:  { width: `${resultWidth}%` },\n    exit: { width: 0 }\n  }\n\n  return style\n};\n\nclass PollResults extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { resultsBar: false }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ resultsBar: true });\n    }, 0)\n  }\n\n  render() {\n    return (\n      <div className='poll-results'>\n        <hr />\n        <h5>\n          <FontAwesomeIcon icon={faChartBar}/> Results{' '}\n          { this.props.active ?\n            <Button\n            variant='grey-blue'\n            size='sm'\n            onClick={this.props.loadResults}\n            style={{ margin: '0 0.5rem' }}\n            disabled={this.props.refreshResultsLoading}\n            >\n              Refresh Results\n            </Button> : null }\n              { this.props.refreshResultsLoading ? \n                <Spinner\n                  animation=\"border\"\n                  size=\"sm\"\n                  aria-hidden=\"true\"\n                /> : null\n              }\n        </h5>\n        { this.props.resultsLoading ?\n          <div className='justify-content-center align-items-center' style={{height: '200px', display: 'flex'}}>\n            <Spinner animation=\"border\" variant=\"light\" />\n          </div>\n          :\n          <div>\n            <Transition in={this.state.resultsBar} timeout={300} appear>\n              {state => (\n                <div className='results-container'>\n                    {this.props.results.map((result, i) => (\n                      <div key={i}>\n                        <h6>{this.props.choices[i]}</h6>\n                        <div className='poll-result'>\n                          <div className='result-bar mb-3'\n                            style={{\n                              ...defaultStyle,\n                              ...transitionStyles(Math.round((result/this.props.totalVotes) * 100))[state]\n                            }}\n                          >\n                          {result !== 0 ?\n                            <div>\n                              <div>{result.toLocaleString()} votes</div>\n                              <div>{Math.round((result/this.props.totalVotes) * 100)}%</div>\n                            </div>\n                          : \n                            <div>\n                              <div>0 votes</div>\n                              <div>0%</div>\n                            </div>\n                          }\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              )}\n            </Transition>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nPollResults.propTypes = {\n  totalVotes: PropTypes.number.isRequired,\n  results: PropTypes.array.isRequired,\n  choices: PropTypes.array.isRequired,\n  resultsLoading: PropTypes.bool.isRequired,\n  refreshResultsLoading: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  loadResults: PropTypes.func.isRequired,\n}\n\nexport default withRouter(PollResults);\n"]},"metadata":{},"sourceType":"module"}