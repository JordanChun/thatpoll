{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\n\nclass ReportModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reason: '',\n      category: 0,\n      error: false,\n      success: false,\n      validated: false\n    };\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.submitReport = this.submitReport.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  updateCategory(e) {\n    this.setState({\n      category: e.target.selectedIndex\n    });\n  }\n\n  async submitReport(e) {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.setState({\n      validated: true\n    });\n\n    try {\n      const res = await fetch(`${window.location.origin}/api/v1/report`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          reason: this.state.reason,\n          category: this.state.category,\n          urlRef: this.props.urlref,\n          title: this.props.polltitle\n        })\n      });\n      const data = await res.json();\n\n      if (data.message === 'success') {\n        this.setState({\n          error: false,\n          success: true,\n          reason: '',\n          category: 0\n        }); // display sucess\n      } else {\n        this.setState({\n          error: true\n        }); // display error\n      }\n    } catch (err) {\n      // display error\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      reason,\n      error,\n      success,\n      validated\n    } = this.state;\n    return __jsx(Modal, _extends({}, this.props, {\n      size: \"lg\",\n      centered: true,\n      animation: false,\n      dialogClassName: \"modal-report\",\n      onClick: e => e.stopPropagation()\n    }), __jsx(Modal.Header, {\n      closeButton: true\n    }, __jsx(Modal.Title, null, \"Report\")), __jsx(Modal.Body, null, error ? __jsx(Alert, {\n      variant: \"danger\"\n    }, __jsx(\"b\", null, \"Error submitting report\")) : null, success ? __jsx(\"div\", null, __jsx(Alert, {\n      variant: \"success\"\n    }, __jsx(\"b\", null, __jsx(FontAwesomeIcon, {\n      icon: faCheck\n    }), \" Report Received. Thank You.\")), __jsx(\"div\", {\n      style: {\n        padding: '1rem',\n        textAlign: 'center'\n      }\n    }, __jsx(Button, {\n      variant: \"grey-blue\",\n      onClick: this.props.onHide\n    }, \"Close\"))) : __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"report-details mb-3\"\n    }, __jsx(\"h6\", null, \"Poll Title\"), __jsx(\"div\", null, this.props.polltitle)), __jsx(\"p\", null, \"Please describe the reason for this report below.\"), __jsx(Form, {\n      noValidate: true,\n      validated: validated,\n      autoComplete: \"off\"\n    }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Category\"), __jsx(Form.Control, {\n      onChange: this.updateCategory,\n      as: \"select\",\n      name: \"category\"\n    }, __jsx(\"option\", null, \"Abuse\"), __jsx(\"option\", null, \"Bug\"), __jsx(\"option\", null, \"Spam\"))), __jsx(Form.Group, {\n      controlId: \"validateReason\"\n    }, __jsx(Form.Label, null, \"Reason:\"), __jsx(Form.Control, {\n      value: reason,\n      onChange: this.inputUpdate,\n      style: {\n        maxHeight: '144px',\n        minHeight: '72px'\n      },\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"reason\",\n      minLength: \"5\",\n      maxLength: \"500\",\n      required: true\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, \"Please provide a reason. Min 5 characters.\"))))), success ? null : __jsx(Modal.Footer, null, __jsx(Button, {\n      variant: \"light-blue\",\n      type: \"submit\",\n      onClick: this.submitReport\n    }, \"Submit\")));\n  }\n\n}\n\nReportModal.propTypes = {\n  onHide: PropTypes.func.isRequired\n};\nexport default ReportModal;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/ReportModal.js"],"names":["Button","Modal","Form","Alert","FontAwesomeIcon","faCheck","PropTypes","ReportModal","React","Component","constructor","props","state","reason","category","error","success","validated","inputUpdate","bind","updateCategory","submitReport","e","setState","target","name","value","selectedIndex","preventDefault","form","currentTarget","checkValidity","stopPropagation","res","fetch","window","location","origin","method","headers","body","urlRef","urlref","title","polltitle","data","json","message","err","render","padding","textAlign","onHide","maxHeight","minHeight","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\n\nclass ReportModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reason: '',\n      category: 0,\n      error: false,\n      success: false,\n      validated: false\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.submitReport = this.submitReport.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  updateCategory(e) {\n    this.setState({ category: e.target.selectedIndex });\n  }\n\n  async submitReport(e) {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.setState({ validated: true });\n\n    try {\n      const res = await fetch(`${window.location.origin}/api/v1/report`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reason: this.state.reason,\n          category: this.state.category,\n          urlRef: this.props.urlref,\n          title: this.props.polltitle\n        })\n      });\n\n      const data = await res.json();\n      if (data.message === 'success') {\n          this.setState({\n          error: false,\n          success: true,\n          reason: '',\n          category: 0,\n        });\n        // display sucess\n      } else {\n        this.setState({ error: true });\n        // display error\n      }\n\n\n    } catch(err) {\n        // display error\n        this.setState({ error: true });\n    }\n  }\n\n  render() {\n    const { reason, error, success, validated } = this.state;\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        centered\n        animation={false}\n        dialogClassName=\"modal-report\"\n        onClick={e => e.stopPropagation()}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Report\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { error ?\n            <Alert variant='danger'>\n              <b>Error submitting report</b>\n            </Alert> : null\n          }\n          { success ?\n            <div>\n              <Alert variant='success'>\n                <b>\n                  <FontAwesomeIcon icon={faCheck} /> Report Received. Thank You.\n                </b>\n              </Alert>\n              <div style={{ padding: '1rem', textAlign: 'center' }}>\n                <Button variant='grey-blue' onClick={this.props.onHide}>Close</Button>\n              </div>\n            </div>\n            : \n            <div>\n              <div className='report-details mb-3'>\n                <h6>Poll Title</h6>\n                <div>\n                  {this.props.polltitle}\n                </div>\n              </div>\n              <p>Please describe the reason for this report below.</p>\n              <Form noValidate validated={validated} autoComplete='off'>\n                <Form.Group>\n                  <Form.Label>\n                    Category\n                  </Form.Label>\n                  <Form.Control\n                    onChange={this.updateCategory}\n                    as=\"select\"\n                    name='category'\n                  >\n                    <option>Abuse</option>\n                    <option>Bug</option>\n                    <option>Spam</option>\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='validateReason'>\n                  <Form.Label>\n                    Reason:\n                  </Form.Label>\n                  <Form.Control\n                    value={reason}\n                    onChange={this.inputUpdate}\n                    style={{ maxHeight: '144px', minHeight: '72px' }}\n                    as=\"textarea\" rows=\"3\" name='reason' minLength='5' maxLength='500'\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide a reason. Min 5 characters.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form>\n            </div>\n          }\n          </Modal.Body>\n          { success ? null :\n            <Modal.Footer>\n              <Button variant='light-blue' type='submit' onClick={this.submitReport}>Submit</Button>\n            </Modal.Footer> }\n      </Modal>\n    );\n  }\n}\n\nReportModal.propTypes = {\n  onHide: PropTypes.func.isRequired\n}\n\nexport default ReportModal;"]},"metadata":{},"sourceType":"module"}