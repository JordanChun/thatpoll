{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\n\nvar ReportModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportModal, _React$Component);\n\n  function ReportModal(props) {\n    var _this;\n\n    _classCallCheck(this, ReportModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReportModal).call(this, props));\n    _this.state = {\n      reason: '',\n      category: 0,\n      error: false,\n      success: false,\n      validated: false\n    };\n    _this.inputUpdate = _this.inputUpdate.bind(_assertThisInitialized(_this));\n    _this.updateCategory = _this.updateCategory.bind(_assertThisInitialized(_this));\n    _this.submitReport = _this.submitReport.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReportModal, [{\n    key: \"inputUpdate\",\n    value: function inputUpdate(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"updateCategory\",\n    value: function updateCategory(e) {\n      this.setState({\n        category: e.target.selectedIndex\n      });\n    }\n  }, {\n    key: \"submitReport\",\n    value: function () {\n      var _submitReport = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var form, res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                form = e.currentTarget;\n\n                if (form.checkValidity() === false) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n\n                this.setState({\n                  validated: true\n                });\n                _context.prev = 4;\n                _context.next = 7;\n                return fetch(\"\".concat(window.location.origin, \"/api/v1/report\"), {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: _JSON$stringify({\n                    reason: this.state.reason,\n                    category: this.state.category,\n                    urlRef: this.props.urlref,\n                    title: this.props.polltitle\n                  })\n                });\n\n              case 7:\n                res = _context.sent;\n                _context.next = 10;\n                return res.json();\n\n              case 10:\n                data = _context.sent;\n\n                if (data.message === 'success') {\n                  this.setState({\n                    error: false,\n                    success: true,\n                    reason: '',\n                    category: 0\n                  }); // display sucess\n                } else {\n                  this.setState({\n                    error: true\n                  }); // display error\n                }\n\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](4);\n                // display error\n                this.setState({\n                  error: true\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 14]]);\n      }));\n\n      function submitReport(_x) {\n        return _submitReport.apply(this, arguments);\n      }\n\n      return submitReport;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          reason = _this$state.reason,\n          error = _this$state.error,\n          success = _this$state.success,\n          validated = _this$state.validated;\n      return __jsx(Modal, _extends({}, this.props, {\n        size: \"lg\",\n        centered: true,\n        animation: false,\n        dialogClassName: \"modal-report\",\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        }\n      }), __jsx(Modal.Header, {\n        closeButton: true\n      }, __jsx(Modal.Title, null, \"Report\")), __jsx(Modal.Body, null, error ? __jsx(Alert, {\n        variant: \"danger\"\n      }, __jsx(\"b\", null, \"Error submitting report\")) : null, success ? __jsx(\"div\", null, __jsx(Alert, {\n        variant: \"success\"\n      }, __jsx(\"b\", null, __jsx(FontAwesomeIcon, {\n        icon: faCheck\n      }), \" Report Received. Thank You.\")), __jsx(\"div\", {\n        style: {\n          padding: '1rem',\n          textAlign: 'center'\n        }\n      }, __jsx(Button, {\n        variant: \"grey-blue\",\n        onClick: this.props.onHide\n      }, \"Close\"))) : __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"report-details mb-3\"\n      }, __jsx(\"h6\", null, \"Poll Title\"), __jsx(\"div\", null, this.props.polltitle)), __jsx(\"p\", null, \"Please describe the reason for this report below.\"), __jsx(Form, {\n        noValidate: true,\n        validated: validated,\n        autoComplete: \"off\"\n      }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Category\"), __jsx(Form.Control, {\n        onChange: this.updateCategory,\n        as: \"select\",\n        name: \"category\"\n      }, __jsx(\"option\", null, \"Abuse\"), __jsx(\"option\", null, \"Bug\"), __jsx(\"option\", null, \"Spam\"))), __jsx(Form.Group, {\n        controlId: \"validateReason\"\n      }, __jsx(Form.Label, null, \"Reason:\"), __jsx(Form.Control, {\n        value: reason,\n        onChange: this.inputUpdate,\n        style: {\n          maxHeight: '144px',\n          minHeight: '72px'\n        },\n        as: \"textarea\",\n        rows: \"3\",\n        name: \"reason\",\n        minLength: \"5\",\n        maxLength: \"500\",\n        required: true\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\"\n      }, \"Please provide a reason. Min 5 characters.\"))))), success ? null : __jsx(Modal.Footer, null, __jsx(Button, {\n        variant: \"light-blue\",\n        type: \"submit\",\n        onClick: this.submitReport\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ReportModal;\n}(React.Component);\n\nReportModal.propTypes = {\n  onHide: PropTypes.func.isRequired\n};\nexport default ReportModal;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/thatpoll/components/ReportModal.js"],"names":["Button","Modal","Form","Alert","FontAwesomeIcon","faCheck","PropTypes","ReportModal","props","state","reason","category","error","success","validated","inputUpdate","bind","updateCategory","submitReport","e","setState","target","name","value","selectedIndex","preventDefault","form","currentTarget","checkValidity","stopPropagation","fetch","window","location","origin","method","headers","body","urlRef","urlref","title","polltitle","res","json","data","message","padding","textAlign","onHide","maxHeight","minHeight","React","Component","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\n\nclass ReportModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reason: '',\n      category: 0,\n      error: false,\n      success: false,\n      validated: false\n    }\n\n    this.inputUpdate = this.inputUpdate.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.submitReport = this.submitReport.bind(this);\n  }\n\n  inputUpdate(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  updateCategory(e) {\n    this.setState({ category: e.target.selectedIndex });\n  }\n\n  async submitReport(e) {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    this.setState({ validated: true });\n\n    try {\n      const res = await fetch(`${window.location.origin}/api/v1/report`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reason: this.state.reason,\n          category: this.state.category,\n          urlRef: this.props.urlref,\n          title: this.props.polltitle\n        })\n      });\n\n      const data = await res.json();\n      if (data.message === 'success') {\n          this.setState({\n          error: false,\n          success: true,\n          reason: '',\n          category: 0,\n        });\n        // display sucess\n      } else {\n        this.setState({ error: true });\n        // display error\n      }\n\n\n    } catch(err) {\n        // display error\n        this.setState({ error: true });\n    }\n  }\n\n  render() {\n    const { reason, error, success, validated } = this.state;\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        centered\n        animation={false}\n        dialogClassName=\"modal-report\"\n        onClick={e => e.stopPropagation()}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Report\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { error ?\n            <Alert variant='danger'>\n              <b>Error submitting report</b>\n            </Alert> : null\n          }\n          { success ?\n            <div>\n              <Alert variant='success'>\n                <b>\n                  <FontAwesomeIcon icon={faCheck} /> Report Received. Thank You.\n                </b>\n              </Alert>\n              <div style={{ padding: '1rem', textAlign: 'center' }}>\n                <Button variant='grey-blue' onClick={this.props.onHide}>Close</Button>\n              </div>\n            </div>\n            : \n            <div>\n              <div className='report-details mb-3'>\n                <h6>Poll Title</h6>\n                <div>\n                  {this.props.polltitle}\n                </div>\n              </div>\n              <p>Please describe the reason for this report below.</p>\n              <Form noValidate validated={validated} autoComplete='off'>\n                <Form.Group>\n                  <Form.Label>\n                    Category\n                  </Form.Label>\n                  <Form.Control\n                    onChange={this.updateCategory}\n                    as=\"select\"\n                    name='category'\n                  >\n                    <option>Abuse</option>\n                    <option>Bug</option>\n                    <option>Spam</option>\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='validateReason'>\n                  <Form.Label>\n                    Reason:\n                  </Form.Label>\n                  <Form.Control\n                    value={reason}\n                    onChange={this.inputUpdate}\n                    style={{ maxHeight: '144px', minHeight: '72px' }}\n                    as=\"textarea\" rows=\"3\" name='reason' minLength='5' maxLength='500'\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please provide a reason. Min 5 characters.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form>\n            </div>\n          }\n          </Modal.Body>\n          { success ? null :\n            <Modal.Footer>\n              <Button variant='light-blue' type='submit' onClick={this.submitReport}>Submit</Button>\n            </Modal.Footer> }\n      </Modal>\n    );\n  }\n}\n\nReportModal.propTypes = {\n  onHide: PropTypes.func.isRequired\n}\n\nexport default ReportModal;"]},"metadata":{},"sourceType":"module"}