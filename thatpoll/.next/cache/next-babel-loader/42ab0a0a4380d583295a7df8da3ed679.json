{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPollH } from '@fortawesome/free-solid-svg-icons';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport getMomentTimelimit from '../helpers/momentFunctions';\n\nvar PollChoices = function PollChoices(props) {\n  return __jsx(\"div\", {\n    className: \"poll-choices\"\n  }, __jsx(\"hr\", null), props.userDidVoteError ? __jsx(\"div\", {\n    className: \"poll-alert\"\n  }, __jsx(Alert, {\n    variant: \"warning\"\n  }, \"You have already voted.\")) : null, props.submitError ? __jsx(\"div\", {\n    className: \"poll-alert\"\n  }, __jsx(Alert, {\n    variant: \"warning\"\n  }, \"Error submitting vote. Please try again.\")) : null, __jsx(\"h5\", null, __jsx(FontAwesomeIcon, {\n    icon: faPollH\n  }), \" Choices\"), props.choices.map(function (choice, i) {\n    return __jsx(InputGroup, {\n      className: \"mb-3\",\n      key: i\n    }, __jsx(\"input\", {\n      className: \"choice-control\",\n      type: \"radio\",\n      name: \"poll-choice\",\n      value: i,\n      onChange: props.updateChoiceSelected\n    }), __jsx(\"label\", {\n      className: \"form-control\"\n    }, choice));\n  }), __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(Button, {\n    disabled: props.selectedVote == null ? true : false,\n    size: \"sm\",\n    onClick: props.submitVote,\n    variant: \"light-blue\",\n    type: \"submit\",\n    style: {\n      width: '200px'\n    }\n  }, \"Submit Vote\")), !props.revealResults ? __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(Button, {\n    variant: \"grey-blue\",\n    size: \"sm\",\n    onClick: props.loadResults\n  }, \"View Results\")) : null);\n};\n\nPollChoices.propTypes = {\n  userDidVote: PropTypes.bool.isRequired,\n  userDidVoteError: PropTypes.bool.isRequired,\n  choices: PropTypes.array.isRequired,\n  revealResults: PropTypes.bool.isRequired,\n  updateChoiceSelected: PropTypes.func.isRequired,\n  submitVote: PropTypes.func.isRequired,\n  loadResults: PropTypes.func.isRequired\n};\nexport default PollChoices;","map":{"version":3,"sources":["E:/Users/Jordan/Desktop/statmix/components/PollChoices.js"],"names":["FontAwesomeIcon","faPollH","InputGroup","Button","Alert","PropTypes","moment","getMomentTimelimit","PollChoices","props","userDidVoteError","submitError","choices","map","choice","i","updateChoiceSelected","selectedVote","submitVote","width","revealResults","loadResults","propTypes","userDidVote","bool","isRequired","array","func"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,6BAAP;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SACvB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,iBADF,EAEGA,KAAK,CAACC,gBAAN,GACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC;AAAf,+BADF,CADD,GAMC,IARJ,EASKD,KAAK,CAACE,WAAN,GACD;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC;AAAf,gDADF,CADC,GAMD,IAfJ,EAgBE,kBAAI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV;AAAvB,IAAJ,aAhBF,EAiBGQ,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,UAACC,MAAD,EAASC,CAAT;AAAA,WACjB,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,GAAG,EAAEA;AAAlC,OACE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAA+C,MAAA,IAAI,EAAC,aAApD;AAAkE,MAAA,KAAK,EAAEA,CAAzE;AAA4E,MAAA,QAAQ,EAAEN,KAAK,CAACO;AAA5F,MADF,EAEE;AAAO,MAAA,SAAS,EAAC;AAAjB,OAAiCF,MAAjC,CAFF,CADiB;AAAA,GAAlB,CAjBH,EAuBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAEL,KAAK,CAACQ,YAAN,IAAsB,IAAtB,GAA6B,IAA7B,GAAoC,KADhD;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,OAAO,EAAER,KAAK,CAACS,UAHjB;AAIE,IAAA,OAAO,EAAC,YAJV;AAIuB,IAAA,IAAI,EAAC,QAJ5B;AAIqC,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAJ5C,mBADF,CAvBF,EAiCI,CAACV,KAAK,CAACW,aAAP,GACA;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,IAAjC;AAAsC,IAAA,OAAO,EAAEX,KAAK,CAACY;AAArD,oBADF,CADA,GAIE,IArCN,CADuB;AAAA,CAAzB;;AA0CAb,WAAW,CAACc,SAAZ,GAAwB;AACtBC,EAAAA,WAAW,EAAElB,SAAS,CAACmB,IAAV,CAAeC,UADN;AAEtBf,EAAAA,gBAAgB,EAAEL,SAAS,CAACmB,IAAV,CAAeC,UAFX;AAGtBb,EAAAA,OAAO,EAAEP,SAAS,CAACqB,KAAV,CAAgBD,UAHH;AAItBL,EAAAA,aAAa,EAAEf,SAAS,CAACmB,IAAV,CAAeC,UAJR;AAKtBT,EAAAA,oBAAoB,EAAEX,SAAS,CAACsB,IAAV,CAAeF,UALf;AAMtBP,EAAAA,UAAU,EAAEb,SAAS,CAACsB,IAAV,CAAeF,UANL;AAOtBJ,EAAAA,WAAW,EAAEhB,SAAS,CAACsB,IAAV,CAAeF;AAPN,CAAxB;AAUA,eAAejB,WAAf","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPollH } from '@fortawesome/free-solid-svg-icons';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport 'moment-precise-range-plugin';\nimport getMomentTimelimit from '../helpers/momentFunctions';\n\n\n\nconst PollChoices = props => (\n  <div className='poll-choices'>\n    <hr />\n    {props.userDidVoteError ?\n      <div className='poll-alert'>\n        <Alert variant='warning'>\n          You have already voted.\n        </Alert>\n      </div>\n    : null }\n      {props.submitError ?\n      <div className='poll-alert'>\n        <Alert variant='warning'>\n          Error submitting vote. Please try again.\n        </Alert>\n      </div>\n    : null }\n    <h5><FontAwesomeIcon icon={faPollH} /> Choices</h5>\n    {props.choices.map((choice, i) => (\n      <InputGroup className=\"mb-3\" key={i}>\n        <input className='choice-control' type='radio' name='poll-choice' value={i} onChange={props.updateChoiceSelected} />\n        <label className='form-control'>{choice}</label>\n      </InputGroup>\n    ))}\n    <div className='mb-3'>\n      <Button\n        disabled={props.selectedVote == null ? true : false}\n        size='sm'\n        onClick={props.submitVote} \n        variant='light-blue' type=\"submit\" style={{ width: '200px' }}>\n        Submit Vote\n      </Button>\n    </div>\n\n    { !props.revealResults ?\n      <div className='mb-3'>\n        <Button variant='grey-blue' size='sm' onClick={props.loadResults}>View Results</Button>\n      </div>\n      : null }\n  </div>\n);\n\nPollChoices.propTypes = {\n  userDidVote: PropTypes.bool.isRequired,\n  userDidVoteError: PropTypes.bool.isRequired,\n  choices: PropTypes.array.isRequired,\n  revealResults: PropTypes.bool.isRequired,\n  updateChoiceSelected: PropTypes.func.isRequired,\n  submitVote: PropTypes.func.isRequired,\n  loadResults: PropTypes.func.isRequired\n}\n\nexport default PollChoices;"]},"metadata":{},"sourceType":"module"}